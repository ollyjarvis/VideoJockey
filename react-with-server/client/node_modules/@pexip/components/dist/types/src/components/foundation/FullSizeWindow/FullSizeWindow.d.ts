import React from 'react';
import type { BackgroundImageSrc, BlendMode } from '../../../types/images';
import type { ColorScheme, FullSizeWindowBackgroundVariant } from '../../../types/variants';
export type OverlayOpacity = 0 | 0.1 | 0.2 | 0.3 | 0.4 | 0.5 | 0.6 | 0.7 | 0.8 | 0.9 | 1;
export interface FullSizeWindowCommonProps {
    padding?: 'small' | 'none';
    flexDirection?: 'row' | 'rowReverse' | 'column' | 'columnReverse';
    justifyContent?: 'flexStart' | 'center';
    position?: 'fixed' | 'absolute';
}
export type FullSizeWindowColorBackgroundProps = {
    background?: FullSizeWindowBackgroundVariant;
    backgroundImageSrc?: never;
    backgroundBlendMode?: never;
    overlayOpacity?: never;
    overlay?: never;
};
export type FullSizeWindowImageBackgroundProps = {
    background: 'image';
    backgroundImageSrc: BackgroundImageSrc;
    backgroundBlendMode?: BlendMode;
    overlayOpacity?: OverlayOpacity;
    overlay?: ColorScheme;
};
type FullSizeWindowBackgroundProps = FullSizeWindowColorBackgroundProps | FullSizeWindowImageBackgroundProps;
export type FullSizeWindowProps = FullSizeWindowCommonProps & FullSizeWindowBackgroundProps;
export declare const FullSizeWindow: React.ForwardRefExoticComponent<(Omit<React.ClassAttributes<HTMLDivElement> & React.HTMLAttributes<HTMLDivElement> & FullSizeWindowCommonProps & FullSizeWindowColorBackgroundProps, "ref"> | Omit<React.ClassAttributes<HTMLDivElement> & React.HTMLAttributes<HTMLDivElement> & FullSizeWindowCommonProps & FullSizeWindowImageBackgroundProps, "ref">) & React.RefAttributes<HTMLDivElement>>;
export {};
//# sourceMappingURL=FullSizeWindow.d.ts.map