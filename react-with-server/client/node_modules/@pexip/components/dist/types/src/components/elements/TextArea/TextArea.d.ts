import React from 'react';
type ResizeVariant = 'resizeNone' | 'resizeBoth' | 'resizeV' | 'resizeH';
export declare const TextArea: React.ForwardRefExoticComponent<Omit<Omit<Omit<React.DetailedHTMLProps<React.TextareaHTMLAttributes<HTMLTextAreaElement>, HTMLTextAreaElement>, "ref"> & {
    ref?: ((instance: HTMLTextAreaElement | null) => void) | React.RefObject<HTMLTextAreaElement> | null | undefined;
}, "disabled"> & {
    colorScheme?: "dark" | "light" | undefined;
    errorText?: string | undefined;
    hasError?: boolean | undefined;
    id?: string | undefined;
    isDisabled?: boolean | undefined;
    label: string;
    isLabelHidden?: boolean | undefined;
    name: string;
    onValueChange?: ((value: string) => void) | undefined;
    value?: string | undefined;
    resize?: ResizeVariant | undefined;
    rows?: number | undefined;
}, "ref"> & React.RefAttributes<{
    focus: () => void;
}>>;
export type TextAreaProps = React.ComponentProps<typeof TextArea>;
export {};
//# sourceMappingURL=TextArea.d.ts.map