import React from 'react';
import type { DropContentPosition, DropContentType } from './types';
export declare const DropContent: React.FC<Omit<React.ComponentProps<'button'>, 'children' | 'content'> & {
    buttonClassName?: string;
    buttonLabel?: string;
    canCloseOutside?: boolean;
    content: DropContentType;
    children?: ((isOpen: boolean) => React.ReactNode) | React.ReactNode;
    contentClassName?: string;
    dropContentRole?: string;
    dropContentLabel?: string;
    isContentTextWrapped?: boolean;
    interactiveElement?: (buttonProps: React.ComponentProps<'button'>, isContentVisible: boolean) => React.ReactNode;
    isDisabled?: boolean;
    isOpen?: boolean;
    limitSize?: boolean;
    onClose?: () => void;
    onContainerClick?: () => void;
    onContentVisibilityChange?: (isVisible: boolean) => void;
    onOutsideClose?: () => void;
    position?: DropContentPosition;
    flexDirection?: 'row' | 'rowReverse' | 'column' | 'columnReverse';
}>;
export type DropContentProps = React.ComponentProps<typeof DropContent>;
//# sourceMappingURL=DropContent.d.ts.map