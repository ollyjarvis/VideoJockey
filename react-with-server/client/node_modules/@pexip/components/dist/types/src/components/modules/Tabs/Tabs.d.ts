import React from 'react';
import type { ColorScheme } from '../../../types/variants';
import type { ExtendedSizeModifier } from '../../../types/sizes';
export declare const Tabs: React.FC<React.ComponentProps<'div'> & {
    children: React.ReactElement<TabProps> | Array<false | React.ReactElement<TabProps>>;
    colorScheme?: ColorScheme;
    customTabNameComponent?: React.FC<TabNameProps>;
    hasDivider?: boolean;
    noTabButtonPadding?: boolean;
    initialActiveTabIndex?: number;
    onActiveTabChange?: (activeTabIndex: number) => void;
    'data-testid'?: string;
}>;
export declare const Tab: React.FC<React.ComponentProps<'div'> & {
    title: string;
    contentPadding?: ExtendedSizeModifier;
    tabEnhancerStart?: React.ReactNode;
    tabEnhancerEnd?: React.ReactNode;
    'data-testid'?: string;
}>;
export type TabProps = React.ComponentProps<typeof Tab>;
export declare const TabName: React.FC<React.ComponentProps<'button'>>;
export type TabNameProps = React.ComponentProps<typeof TabName>;
//# sourceMappingURL=Tabs.d.ts.map