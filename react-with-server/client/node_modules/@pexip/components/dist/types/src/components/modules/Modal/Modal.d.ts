import React from 'react';
import type { ExtendedSizeModifier, ModalSizeModifier } from '../../../types/sizes';
import type { BoxProps } from '../../elements/Box/Box';
import type { ColorScheme } from '../../../types/variants';
export declare enum ModalType {
    Overlay = "overlay",
    Positioned = "positioned"
}
export declare const Modal: React.FC<React.ComponentProps<'div'> & {
    canDrag?: boolean;
    closeButtonAriaLabel?: string;
    closeOnOutsideClick?: boolean;
    colorScheme?: ColorScheme;
    hasBackground?: boolean;
    isOpen: boolean;
    modalType?: ModalType;
    onClose?: () => void;
    padding?: ExtendedSizeModifier;
    scrollbarsAriaLabel?: string;
    sizeModifier?: ModalSizeModifier;
    testIdCloseButton?: string;
    uniqueTitle?: string;
    withCloseButton?: boolean;
    withScrollbars?: boolean;
    wrapperClassName?: string;
    withMask?: boolean;
} & Pick<BoxProps, 'footerContent' | 'footerPadding' | 'hasFooterShadow' | 'headerContent' | 'headerPadding'>>;
export type ModalProps = React.ComponentProps<typeof Modal>;
//# sourceMappingURL=Modal.d.ts.map