import type { ReactElement } from 'react';
import React from 'react';
import type { ColorScheme } from '../../../types/variants';
import type { ControlledTooltip } from './useTooltip';
export type NotificationTooltipPosition = 'topRight' | 'topCenter' | 'topLeft' | 'bottomRight' | 'bottomCenter' | 'bottomLeft';
export declare const NotificationTooltip: React.FC<React.ComponentProps<'div'> & ControlledTooltip & {
    position?: NotificationTooltipPosition;
    header: React.ReactNode;
    modifier?: 'fullWidth';
    text: string | ReactElement;
    ctaText?: string;
    ctaFn?: () => void;
    isArrowShown?: boolean;
    testIdInner?: string;
    testIdCloseButton?: string;
    colorScheme?: ColorScheme;
    mainWrapperClassName?: string;
    closeButtonAriaLabel?: string;
    stopPointerDownPropagation?: boolean;
    shouldCloseOnOutsideClick?: boolean;
}>;
export type NotificationTooltipProps = React.ComponentProps<typeof NotificationTooltip>;
//# sourceMappingURL=NotificationTooltip.d.ts.map