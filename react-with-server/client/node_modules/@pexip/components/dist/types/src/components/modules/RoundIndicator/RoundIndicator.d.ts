import type { HTMLProps } from 'react';
import React from 'react';
import type { IconSource } from '../../../../design-tokens/generated/Icons';
import type { ExtendedFixedSizeModifier, LogoSizeModifier } from '../../../types/sizes';
import type { ColorScheme, TextVariant } from '../../../types/variants';
import { FontVariant } from '../../../../design-tokens/constants';
export type RoundIndicatorModifier = 'border' | 'noBackground';
export type RoundIndicatorBaseProps = HTMLProps<HTMLDivElement> & {
    alt?: string;
    className?: string;
    iconType?: IconSource;
    iconSize?: LogoSizeModifier;
    imageUrl?: string;
    isActive?: boolean;
    text?: string;
    textVariant?: TextVariant;
    fontVariant?: FontVariant;
    title?: string;
};
export type RoundIndicatorBaseTypeProps = {
    type: 'icon';
    iconType: IconSource;
    title?: string;
} | {
    type: 'text';
    text: string;
} | {
    type: 'image';
    imageUrl: string;
    alt: string;
};
export declare const RoundIndicatorBase: React.FC<RoundIndicatorBaseProps & RoundIndicatorBaseTypeProps>;
export declare const RoundIndicator: React.FC<React.ComponentProps<typeof RoundIndicatorBase> & {
    colorScheme?: ColorScheme;
    modifier?: RoundIndicatorModifier;
    sizeModifier?: ExtendedFixedSizeModifier;
}>;
export type RoundIndicatorProps = React.ComponentProps<typeof RoundIndicator>;
//# sourceMappingURL=RoundIndicator.d.ts.map