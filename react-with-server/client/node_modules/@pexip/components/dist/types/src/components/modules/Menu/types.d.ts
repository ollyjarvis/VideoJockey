/// <reference types="react" />
import type { TextVariant, ButtonVariant, ColorScheme } from '../../../types/variants';
import type { IconSource } from '../../../../design-tokens/generated/Icons';
import type { LinkTarget } from '../../../types/propTypes';
export type MenuItem = {
    clickAction?: React.MouseEventHandler<HTMLElement>;
    colorScheme?: ColorScheme;
    icon?: IconSource;
    iconColor?: string;
    isAriaChecked?: boolean;
    isAriaSelected?: boolean;
    isDisabled?: boolean;
    isFixedIcon?: boolean;
    label: React.ReactNode;
    linkWrapper?: ({ children, }: {
        children: React.ReactNode;
    }) => React.ReactElement;
    role?: React.AriaRole;
    target?: LinkTarget;
    testId?: string;
    url?: string;
    variant?: TextVariant;
};
export type MenuAction = {
    enhancerStart?: React.ReactNode;
    isDisabled?: boolean;
    label: string;
    onClick?: () => void;
    target?: LinkTarget;
    testId?: string;
    url?: string;
    variant?: ButtonVariant;
    isLoading?: boolean;
};
export type MenuSectionTitle = string;
export type MenuContent = MenuItem[][];
export type TitledMenuContent = Record<MenuSectionTitle, MenuItem[]>;
//# sourceMappingURL=types.d.ts.map