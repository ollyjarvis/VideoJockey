import React from 'react';
export type InteractiveElementHTMLTag = 'button' | 'a' | 'div';
export declare const InteractiveElement: React.FC<React.ComponentPropsWithoutRef<InteractiveElementHTMLTag> & {
    className?: string;
    disabled?: boolean;
    htmlTag?: InteractiveElementHTMLTag;
    href?: string;
}>;
export declare const RefInteractiveElement: React.ForwardRefExoticComponent<((Omit<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref"> | Omit<React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, "ref"> | Omit<React.DetailedHTMLProps<React.AnchorHTMLAttributes<HTMLAnchorElement>, HTMLAnchorElement>, "ref">) & {
    className?: string | undefined;
    disabled?: boolean | undefined;
    htmlTag?: InteractiveElementHTMLTag | undefined;
    href?: string | undefined;
}) & React.RefAttributes<HTMLDivElement | HTMLButtonElement | HTMLAnchorElement>>;
export type InteractiveElementProps = React.ComponentProps<typeof InteractiveElement>;
//# sourceMappingURL=InteractiveElement.d.ts.map