import React from 'react';
export type TableResultsCountProps = {
    endCount: number;
    isDisabled?: boolean;
    startCount: number;
    totalCount: number;
};
export declare const TablePagination: React.FC<{
    isDisabled?: boolean;
    isSticky?: boolean;
    isTablePopulated?: boolean;
    label: string;
    nextPageButtonChildren?: React.ReactNode;
    previousPageButtonChildren?: React.ReactNode;
    resultsCountComponent?: React.FC<TableResultsCountProps>;
    showResultsCount?: boolean;
    canNextPage: boolean;
    canPreviousPage: boolean;
    /** Number of entries for the current page. */
    currentPageSize: number;
    /** Number of max visible page buttons before grouping. */
    maxUngroupedPageButtons?: number;
    /** Current page number. */
    pageIndex: number;
    /** Number of entries per page. */
    pageSize: number;
    /** The total number of pages for the data shown in the table. Only needs to
     * be supplied if the automatically calculated value should not be used. */
    totalPagesCount?: number;
    /** Sum of entries of all pages combined. */
    totalRows: number;
    gotoPage: (updater: number | ((pageIndex: number) => number)) => void;
    nextPage: () => void;
    previousPage: () => void;
}>;
//# sourceMappingURL=TablePagination.d.ts.map