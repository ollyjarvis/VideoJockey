import prettier from 'prettier';

import config from '../../prettier.config.js';

export class Content {
    constructor(banner = '') {
        this.banner = banner;
        this.blocks = new Map();
        this.strings = [];
    }

    /**
     * add strings to a content block,
     * if the first argument is a number strings will be grouped by that index.
     *
     * @param {[number,] string[]} args
     * @memberof Content
     */
    push(...args) {
        const [first, ...rest] = Array.from(args);
        if (typeof first === 'number') {
            const lines = (
                this.blocks.has(first) ? this.blocks.get(first) : []
            ).concat(rest);
            this.blocks.set(args[0], lines);
        } else {
            this.strings = this.strings.concat([first, ...rest]);
        }
    }

    /**
     * Pretty print using the defined parser.
     * Since prettier has no file extension to go by we need to pass this in.
     *
     * @param {'babel' | 'typescript' | 'scss' | 'html' | ...other prettier parsers } parser
     * @returns string
     * @memberof Content
     */
    print(parser) {
        let lines = this.banner ? [this.banner] : [];
        if (this.strings.length) {
            lines = lines.concat([this.strings.join('\n')]);
        }
        if (this.blocks.size) {
            lines = lines.concat(
                Array.from(this.blocks.values()).map(l => l.join('\n')),
            );
        }
        return prettier.format(lines.join('\n\n'), {...config, parser});
    }
}
