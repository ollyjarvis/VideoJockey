/// <reference types="react" />
export declare const UI_INACTIVITY_TIMEOUT = 5000;
export type AutoHideUIInterfacesState = 'visible' | 'hidden';
export declare const autoHideUIInterfacesStateSignal: import("@pexip/signal").Signal<AutoHideUIInterfacesState>;
/**
 * Hook to signal display state (show/hide) based on UI inactivity timeout
 * @param isStreamReady - only apply autoHide if we've got a ready stream
 * @param shouldDisplay - callback to signal when to hide and when to show
 * @returns control to enable/disable auto hide functionality
 */
export declare const useAutoHideUIInterfaces: (isStreamReady: boolean, shouldDisplay?: ((shouldDisplay: boolean) => void) | undefined) => {
    enableAutoHide: import("react").Dispatch<import("react").SetStateAction<boolean>>;
    enableAutoHideConstraintBased: (constraint: boolean) => void;
};
