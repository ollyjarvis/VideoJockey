import { useEffect } from 'react';
const poorManRequestAnimationFrame = callback => setTimeout(callback, performance.now());
const poorManCancelAnimationFrame = handle => clearTimeout(handle);
const requestAnimationFrame = window.requestAnimationFrame || poorManRequestAnimationFrame;
const cancelAnimationFrame = window.cancelAnimationFrame || poorManCancelAnimationFrame;
export const useAnimationFrame = (callback, shouldStop = false) => {
    useEffect(() => {
        let requestRef = undefined;
        let previousTimeRef = undefined;
        let ignore = shouldStop;
        const stopAnimate = () => {
            ignore = true;
            if (requestRef) {
                cancelAnimationFrame(requestRef);
            }
            requestRef = undefined;
            previousTimeRef = undefined;
        };
        const animate = (time) => {
            if (ignore) {
                return;
            }
            if (previousTimeRef !== undefined) {
                const deltaTime = time - previousTimeRef;
                callback(deltaTime);
            }
            previousTimeRef = time;
            requestRef = requestAnimationFrame(animate);
        };
        if (ignore) {
            stopAnimate();
        }
        else {
            requestRef = requestAnimationFrame(animate);
        }
        return stopAnimate;
    }, [callback, shouldStop]);
};
