import { useEffect, useState, useCallback, useMemo } from 'react';
// Checks the Window object for forcedMediaQuery.
const getForceMatchMedia = (mediaQuery) => '__STORYBOOK_FORCE_MEDIA_QUERY__' in window &&
    window.__STORYBOOK_FORCE_MEDIA_QUERY__
    ? mediaQuery.includes(window.__STORYBOOK_FORCE_MEDIA_QUERY__)
    : undefined;
export const useMatchMedia = (mediaQuery) => {
    const hasForcedMql = getForceMatchMedia(mediaQuery);
    const mql = useMemo(() => {
        if ('matchMedia' in window) {
            return window.matchMedia(mediaQuery);
        }
    }, [mediaQuery]);
    const [matches, setMatches] = useState(mql?.matches ?? false);
    const handleQueryChange = useCallback((e) => setMatches(e.matches), [setMatches]);
    useEffect(() => {
        mql?.addEventListener('change', handleQueryChange);
        return () => {
            mql?.removeEventListener('change', handleQueryChange);
        };
    }, [mql, handleQueryChange]);
    return hasForcedMql ?? matches;
};
