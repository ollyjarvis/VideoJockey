import type { MediaDeviceInfoLike, MediaDeviceKinds, MediaDeviceRequest } from './types';
import { MediaDeviceFailure } from './types';
export interface InputNotFoundErrorParams {
    input: MediaTrackConstraints | boolean | undefined;
    kind: MediaDeviceKinds;
    devices: MediaDeviceInfoLike[];
}
export declare const isInputNotFoundError: ({ input, kind, devices }: InputNotFoundErrorParams) => (error: string) => boolean;
export declare const normalizeGetUserMediaError: (browserError: Error, constraints: MediaStreamConstraints, devices: MediaDeviceInfoLike[]) => MediaDeviceFailure | string;
export declare const normalizeDeviceError: ({ audio, video, streamingAudioInput, streamingVideoInput, }: {
    streamingAudioInput?: boolean | undefined;
    streamingVideoInput?: boolean | undefined;
} & MediaDeviceRequest) => false | MediaDeviceFailure;
