/**
 * an enum of MediaDeviceKind which can be reused
 *
 * @beta
 */
export var MediaDeviceKinds;
(function (MediaDeviceKinds) {
    /** audio input */
    MediaDeviceKinds["AUDIOINPUT"] = "audioinput";
    /** audio output */
    MediaDeviceKinds["AUDIOOUTPUT"] = "audiooutput";
    /** video input */
    MediaDeviceKinds["VIDEOINPUT"] = "videoinput";
})(MediaDeviceKinds || (MediaDeviceKinds = {}));
/**
 * MediaTrackConstraints.facingMode
 * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints/facingMode}
 */
export const FACING_MODE = ['user', 'environment', 'left', 'right'];
/**
 * An enum of failure events for media device
 *
 * @beta
 */
export var MediaDeviceFailure;
(function (MediaDeviceFailure) {
    /**
     * some problem (not user or permissions) occurred which prevented the device
     * from being used.
     */
    MediaDeviceFailure["AbortError"] = "AbortError";
    /**
     * Custom error for when selected audio and video device is not found
     */
    MediaDeviceFailure["AudioAndVideoDeviceNotFoundError"] = "AudioAndVideoDeviceNotFoundError";
    /**
     * Custom error for selected audio device not found
     */
    MediaDeviceFailure["AudioInputDeviceNotFoundError"] = "AudioInputDeviceNotFoundError";
    /**
     * Custom missing constraints error
     */
    MediaDeviceFailure["MissingConstraintsError"] = "MissingConstraintsError";
    /**
     * user has blocked access
     */
    MediaDeviceFailure["NotAllowedError"] = "NotAllowedError";
    /**
     * the media tracks doesn't match the constraints
     */
    MediaDeviceFailure["NotFoundError"] = "NotFoundError";
    /**
     * hardware failure after user granted access
     */
    MediaDeviceFailure["NotReadableError"] = "NotReadableError";
    /**
     * no devices met the criteria for the constraints
     */
    MediaDeviceFailure["OverconstrainedError"] = "OverconstrainedError";
    /**
     * user has blocked access old chrome
     */
    MediaDeviceFailure["PermissionDeniedError"] = "PermissionDeniedError";
    /**
     * User media support disabled by agent
     */
    MediaDeviceFailure["SecurityError"] = "SecurityError";
    /**
     * when hardware in use old chrome win os
     */
    MediaDeviceFailure["TrackStartError"] = "TrackStartError";
    /**
     * GetUserMedia invalid constraints error
     */
    MediaDeviceFailure["TypeError"] = "TypeError";
    /**
     * Custom error for selected video device not found
     */
    MediaDeviceFailure["VideoInputDeviceNotFoundError"] = "VideoInputDeviceNotFoundError";
    /**
     * action or function is not supported by the current platform
     */
    MediaDeviceFailure["NotSupportedError"] = "NotSupportedError";
    /**
     * Canvas capture is not supported
     */
    MediaDeviceFailure["StreamTrackNotFound"] = "StreamTrackNotFound";
})(MediaDeviceFailure || (MediaDeviceFailure = {}));
