/**
 * A set of 2D matrix math utilities
 */
export declare const m3: {
    /**
     * Create a 2D projection matrix that converts from pixels to clipspace with
     * Y = 0 at the top
     */
    projection: (width: number, height: number, flipY?: number) => [number, number, number, number, number, number, number, number, number];
    translation: (tx: number, ty: number) => [number, number, number, number, number, number, number, number, number];
    rotation: (angleInRadians: number) => [number, number, number, number, number, number, number, number, number];
    scaling: (sx: number, sy: number) => [number, number, number, number, number, number, number, number, number];
    multiply: (a: [number, number, number, number, number, number, number, number, number], b: [number, number, number, number, number, number, number, number, number]) => [number, number, number, number, number, number, number, number, number];
    translate: (m: [number, number, number, number, number, number, number, number, number], tx: number, ty: number) => [number, number, number, number, number, number, number, number, number];
    rotate: (m: [number, number, number, number, number, number, number, number, number], angleInRadians: number) => [number, number, number, number, number, number, number, number, number];
    scale: (m: [number, number, number, number, number, number, number, number, number], sx: number, sy: number) => [number, number, number, number, number, number, number, number, number];
};
