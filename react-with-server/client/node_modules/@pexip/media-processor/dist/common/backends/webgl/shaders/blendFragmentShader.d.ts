export declare const blendFragmentShaderSource = "#version 300 es\nprecision mediump float;\n\n// our textures\nuniform sampler2D u_mask;\nuniform sampler2D u_mask_prev;\nuniform sampler2D u_frame_foreground;\nuniform sampler2D u_frame_background;\n\n// control flags\nuniform float u_mask_combine_ratio;\nuniform float u_foreground_threshold;\n\nin vec2 v_texCoord;\n\n// we need to declare an output for the fragment shader\nout vec4 outColor;\n\n// Source: https://github.com/google/mediapipe/blob/8750c3dca1bc00fbe47acf501b7c9c61f3f3bd3f/mediapipe/calculators/image/segmentation_smoothing_calculator.cc#L377\nfloat SmoothingMask(sampler2D prevMask, sampler2D currMask, vec2 uv, float ratio) {\n    float prevMaskValue = texture(prevMask, uv).r;\n    float newMaskValue = texture(currMask, uv).r;\n\n    /*\n    * Assume p := newMaskValue\n    * H(p) := 1 + (p * log(p) + (1-p) * log(1-p)) / log(2)\n    * uncertainty alpha(p) =\n    *   Clamp(1 - (1 - H(p)) * (1 - H(p)), 0, 1) [squaring the\n    * uncertainty]\n    *\n    * The following polynomial approximates uncertainty alpha as a\n    * function of (p + 0.5):\n    */\n    const float c1 = 5.68842;\n    const float c2 = -0.748699;\n    const float c3 = -57.8051;\n    const float c4 = 291.309;\n    const float c5 = -624.717;\n    float t = newMaskValue - 0.5;\n    float x = t * t;\n\n    float uncertainty =\n    1.0 - min(1.0, x * (c1 + x * (c2 + x * (c3 + x * (c4 + x * c5)))));\n\n    float outputValue = newMaskValue + (prevMaskValue - newMaskValue) *\n                            (uncertainty * ratio);\n    return outputValue;\n}\n\nvoid main() {\n    vec2 halfpixel = 0.5 / vec2(textureSize(u_frame_background, 0));\n\n    vec4 background = texture(u_frame_background, v_texCoord);\n    vec4 foreground = texture(u_frame_foreground, v_texCoord);\n    float maskAlpha = SmoothingMask(u_mask_prev, u_mask, v_texCoord, u_mask_combine_ratio);\n    float filteredMask = maskAlpha;\n    if (maskAlpha < u_foreground_threshold) {\n        filteredMask = 0.0;\n    }\n\n    outColor = mix(background, foreground, filteredMask);\n}\n";
