/**
 * SVG path command functions
 *
 * https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/d
 */
import type { Point } from './types';
/**
 * Coordinates string
 *
 * @example
 *
 * ```
 * 30,90
 * ```
 */
export declare function toCoordinateString(p?: Point): string;
/**
 * MoveTo Path Command
 *
 * @example
 *
 * ```
 * M 10,20
 * ```
 */
export declare function moveTo(p?: Point): string;
/**
 * Line to Path Command
 *
 * @example
 *
 * ```
 * L 10,20
 * ```
 */
export declare function lineTo(p: Point): string;
/**
 * Draw a horizontal line from the current point to the end point, which is
 * specified by the x parameter and the current point's y coordinate.
 *
 * @example
 *
 * ```
 * H 10
 * ```
 */
export declare function horizontalLineTo(x: number): string;
/**
 * Draw a vertical line from the current point to the end point, which is
 * specified by the y parameter and the current point's x coordinate.
 *
 * @example
 *
 * ```
 * V 10
 * ```
 */
export declare function verticalLineTo(y: number): string;
/**
 * Cubic Bezier Curve parameters
 *
 * scp: start control point
 * ecp: end control point
 * ep: end point
 */
interface CubicCurveParams {
    scp: Point;
    ecp: Point;
    ep: Point;
}
/**
 * Cubic Bezier Curve Path Command
 *
 * @example
 *
 * ```
 * C 30,90 25,10 50,10
 * ```
 */
export declare function cubicCurveTo({ scp, ecp, ep }: CubicCurveParams): string;
/**
 * Smooth Cubic Bezier Curve Path Command
 *
 * @example
 *
 * ```
 * S 25,10 50,10
 * ```
 */
export declare function smoothCubicCurveTo({ ecp, ep, }: Pick<CubicCurveParams, 'ecp' | 'ep'>): string;
/**
 *  Close the current subpath by connecting the last point of the path with its
 *  initial point.
 *
 * @example
 *
 * ```
 * Z
 * ```
 */
export declare function closePath(): string;
export {};
