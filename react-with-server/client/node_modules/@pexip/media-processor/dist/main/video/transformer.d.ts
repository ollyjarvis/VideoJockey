import type { InputFrame } from './types';
export declare const nullTransformController: (controller: Pick<TransformStreamDefaultController<CanvasImageSource>, 'enqueue' | 'terminate'>) => TransformStreamDefaultController<CanvasImageSource>;
export declare const adaptInputFrameTransformer: (transformer: Transformer<InputFrame, InputFrame>) => {
    transform: (frame: VideoFrame, controller: TransformStreamDefaultController<VideoFrame>) => void | PromiseLike<void> | undefined;
    flush?: TransformerFlushCallback<InputFrame> | undefined;
    readableType?: undefined;
    start?: TransformerStartCallback<InputFrame> | undefined;
    writableType?: undefined;
};
