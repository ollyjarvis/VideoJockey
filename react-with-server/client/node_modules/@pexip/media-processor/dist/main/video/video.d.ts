import type { Transform } from '../types';
import type { InputFrame } from './types';
import type { ProcessVideoTrack } from './videoStreamTrackProcessor';
export interface VideoProcessor {
    open(): Promise<void>;
    /**
     * Process the video and return a MediaStream
     */
    process: (source: MediaStream) => Promise<MediaStream>;
    /**
     * Stop the process of video segmentation
     */
    close(): void;
    /**
     * Destroy the segmentation wasm instance
     */
    destroy: () => Promise<void>;
}
export declare const createVideoProcessor: (transformers: Array<Transform<InputFrame, InputFrame>>, processTrack: ProcessVideoTrack) => VideoProcessor;
