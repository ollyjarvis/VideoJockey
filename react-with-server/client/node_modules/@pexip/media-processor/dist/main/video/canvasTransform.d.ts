import type { ImageRecord } from '../../common/types/media';
import type { RendererOptions } from '../../common/types/render';
import type { Segmenter, SegmentationTransform } from './types';
interface Options extends RendererOptions {
    selfManageSegmenter?: boolean;
    outputCanvas?: HTMLCanvasElement;
    outputDelegate?: OffscreenCanvas;
    backgroundImage?: ImageRecord;
    width?: number;
    height?: number;
}
export declare const createTransform: (segmenter: Segmenter, { width, height, foregroundThreshold, backgroundBlurAmount, edgeBlurAmount, maskCombineRatio, backgroundImageUrl, effects, selfManageSegmenter, ...options }?: Partial<Options>) => SegmentationTransform & {
    outputCanvas: HTMLCanvasElement | undefined;
    outputDelegate: OffscreenCanvas | undefined;
    backgroundImage?: ImageRecord;
};
export {};
