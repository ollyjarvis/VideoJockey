/* tslint:disable */
/* eslint-disable */
/**
 */
export class Denoise {
    free(): void;
    /**
     * @param {number} input_frame_size
     * @param {number} channel_size
     * @returns {Denoise}
     */
    static new(input_frame_size: number, channel_size: number): Denoise;
    /**
     * @returns {number}
     */
    input(): number;
    /**
     * @returns {number}
     */
    output(): number;
    /**
     * @param {number} channel
     * @returns {number}
     */
    vad(channel: number): number;
    /**
     */
    process_frames(): void;
}

export type InitInput =
    | RequestInfo
    | URL
    | Response
    | BufferSource
    | WebAssembly.Module;

export interface InitOutput {
    readonly memory: WebAssembly.Memory;
    readonly __wbg_denoise_free: (a: number) => void;
    readonly denoise_new: (a: number, b: number) => number;
    readonly denoise_input: (a: number) => number;
    readonly denoise_output: (a: number) => number;
    readonly denoise_vad: (a: number, b: number) => number;
    readonly denoise_process_frames: (a: number) => void;
    readonly __wbindgen_free: (a: number, b: number) => void;
    readonly __wbindgen_malloc: (a: number) => number;
    readonly __wbindgen_realloc: (a: number, b: number, c: number) => number;
}

/**
 * If `module_or_path` is {RequestInfo} or {URL}, makes a request and
 * for everything else, calls `WebAssembly.instantiate` directly.
 *
 * @param {InitInput | Promise<InitInput>} module_or_path
 *
 * @returns {Promise<InitOutput>}
 */
export default function init(
    module_or_path?: InitInput | Promise<InitInput>,
): Promise<InitOutput>;
