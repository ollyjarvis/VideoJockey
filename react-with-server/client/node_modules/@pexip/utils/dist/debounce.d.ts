import type { Fn } from './types';
/**
 * An higher-order-function that debounce a given function to only invoke after `N` amount of time passes since its last call.
 *
 * Note: Can be extended in the future to allow `immediate` (leading) flag and `cancel` method options.
 *
 * @param fn - The function to throttle.
 * @param waitDuration - The number of milliseconds to wait before invoke.
 */
export declare const debounce: <T extends unknown[], R>(fn: Fn<T, R>, waitDuration: number) => {
    (this: unknown, ...args: T): Promise<R>;
    cancel: () => void;
};
