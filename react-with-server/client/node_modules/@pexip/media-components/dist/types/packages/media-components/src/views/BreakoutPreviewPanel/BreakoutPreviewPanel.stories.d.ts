import type { Story } from '@storybook/react';
import React from 'react';
import { BreakoutPreviewPanel } from './BreakoutPreviewPanel.view';
declare const _default: {
    title: string;
    component: React.FC<{
        breakoutsAskingForHelp: import("../..").BreakoutAskingForHelpStatus[];
        currentParticipants: import("../..").BreakoutParticipants;
        showCloseRoomsButton: boolean;
        closeRoomsText: string;
        editRoomsText: string;
        breakoutRoomsNames: Record<string, string>;
        myIdentity?: string | undefined;
        onJoinRoom: (roomId: string) => void;
        onJoinRoomViaHelp: (roomId: string) => void;
        onCloseRoom: (roomId: string) => void;
        onCloseRooms: () => void;
        onClosePanel: () => void;
        onEditRooms: () => void;
    }>;
    parameters: {
        layout: string;
        chromatic: {
            viewports: number[];
        };
        locale: string;
    };
};
export default _default;
export declare const Main: Story<React.ComponentProps<typeof BreakoutPreviewPanel>>;
export declare const WithoutCloseRoomsButton: import("@storybook/types").AnnotatedStoryFn<import("@storybook/react/dist/types-0fc72a6d").R, {
    breakoutsAskingForHelp: import("../..").BreakoutAskingForHelpStatus[];
    currentParticipants: import("../..").BreakoutParticipants;
    showCloseRoomsButton: boolean;
    closeRoomsText: string;
    editRoomsText: string;
    breakoutRoomsNames: Record<string, string>;
    myIdentity?: string | undefined;
    onJoinRoom: (roomId: string) => void;
    onJoinRoomViaHelp: (roomId: string) => void;
    onCloseRoom: (roomId: string) => void;
    onCloseRooms: () => void;
    onClosePanel: () => void;
    onEditRooms: () => void;
}>;
//# sourceMappingURL=BreakoutPreviewPanel.stories.d.ts.map