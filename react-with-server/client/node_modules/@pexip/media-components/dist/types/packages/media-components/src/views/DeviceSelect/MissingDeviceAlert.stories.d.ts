import React from 'react';
import { DeniedDevices } from '@pexip/media';
declare const _default: {
    component: React.FC<{
        className?: string | undefined;
        deniedDevice?: DeniedDevices | undefined;
        learnHowToGrantAccessURL?: string | undefined;
        permissionInfoType?: import("../..").BlockedBrowserPermissionsInfoType | undefined;
        title: string;
        tooltip?: string | React.ReactElement<any, string | React.JSXElementConstructor<any>> | undefined;
        setIsTooltipVisible: (visible: boolean) => void;
        isTooltipVisible: boolean;
        icon?: import("@pexip/components").IconSource | undefined;
        setShowHelpVideo?: React.Dispatch<React.SetStateAction<boolean>> | undefined;
        showTooltip?: boolean | undefined;
    }>;
    title: string;
};
export default _default;
export declare const Main: import("@storybook/types").AnnotatedStoryFn<import("@storybook/react/dist/types-0fc72a6d").R, Omit<{
    className?: string | undefined;
    deniedDevice?: DeniedDevices | undefined;
    learnHowToGrantAccessURL?: string | undefined;
    permissionInfoType?: import("../..").BlockedBrowserPermissionsInfoType | undefined;
    title: string;
    tooltip?: string | React.ReactElement<any, string | React.JSXElementConstructor<any>> | undefined;
    setIsTooltipVisible: (visible: boolean) => void;
    isTooltipVisible: boolean;
    icon?: import("@pexip/components").IconSource | undefined;
    setShowHelpVideo?: React.Dispatch<React.SetStateAction<boolean>> | undefined;
    showTooltip?: boolean | undefined;
}, "isTooltipVisible" | "setIsTooltipVisible">>;
export declare const MicrophoneDeniedTooltip: import("@storybook/types").AnnotatedStoryFn<import("@storybook/react/dist/types-0fc72a6d").R, Omit<{
    className?: string | undefined;
    deniedDevice?: DeniedDevices | undefined;
    learnHowToGrantAccessURL?: string | undefined;
    permissionInfoType?: import("../..").BlockedBrowserPermissionsInfoType | undefined;
    title: string;
    tooltip?: string | React.ReactElement<any, string | React.JSXElementConstructor<any>> | undefined;
    setIsTooltipVisible: (visible: boolean) => void;
    isTooltipVisible: boolean;
    icon?: import("@pexip/components").IconSource | undefined;
    setShowHelpVideo?: React.Dispatch<React.SetStateAction<boolean>> | undefined;
    showTooltip?: boolean | undefined;
}, "isTooltipVisible" | "setIsTooltipVisible">>;
export declare const DeviceDeniedTooltipWithRetry: import("@storybook/types").AnnotatedStoryFn<import("@storybook/react/dist/types-0fc72a6d").R, Omit<{
    className?: string | undefined;
    deniedDevice?: DeniedDevices | undefined;
    learnHowToGrantAccessURL?: string | undefined;
    permissionInfoType?: import("../..").BlockedBrowserPermissionsInfoType | undefined;
    title: string;
    tooltip?: string | React.ReactElement<any, string | React.JSXElementConstructor<any>> | undefined;
    setIsTooltipVisible: (visible: boolean) => void;
    isTooltipVisible: boolean;
    icon?: import("@pexip/components").IconSource | undefined;
    setShowHelpVideo?: React.Dispatch<React.SetStateAction<boolean>> | undefined;
    showTooltip?: boolean | undefined;
}, "isTooltipVisible" | "setIsTooltipVisible">>;
export declare const CustomIcon: import("@storybook/types").AnnotatedStoryFn<import("@storybook/react/dist/types-0fc72a6d").R, Omit<{
    className?: string | undefined;
    deniedDevice?: DeniedDevices | undefined;
    learnHowToGrantAccessURL?: string | undefined;
    permissionInfoType?: import("../..").BlockedBrowserPermissionsInfoType | undefined;
    title: string;
    tooltip?: string | React.ReactElement<any, string | React.JSXElementConstructor<any>> | undefined;
    setIsTooltipVisible: (visible: boolean) => void;
    isTooltipVisible: boolean;
    icon?: import("@pexip/components").IconSource | undefined;
    setShowHelpVideo?: React.Dispatch<React.SetStateAction<boolean>> | undefined;
    showTooltip?: boolean | undefined;
}, "isTooltipVisible" | "setIsTooltipVisible">>;
//# sourceMappingURL=MissingDeviceAlert.stories.d.ts.map