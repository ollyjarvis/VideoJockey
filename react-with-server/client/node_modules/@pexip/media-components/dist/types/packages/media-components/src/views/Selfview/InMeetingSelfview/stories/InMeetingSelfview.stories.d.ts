import React from 'react';
import type { StoryObj } from '@storybook/react';
import { InMeetingSelfview } from '../InMeetingSelfview.view';
declare const _default: {
    title: string;
    components: {
        InMeetingSelfview: React.FC<Omit<React.ClassAttributes<HTMLDivElement> & React.HTMLAttributes<HTMLDivElement> & {
            size?: "large" | "full" | "medium" | "small" | undefined;
            background?: "none" | "primary" | "secondary" | "light" | "black" | undefined;
            borderRadius?: "none" | "box" | undefined;
            border?: boolean | undefined;
            alignItems?: "center" | "stretch" | "flex-end" | "flex-start" | undefined;
            flexDirection?: "row" | "column" | undefined;
            justifyContent?: "center" | "flex-end" | "flex-start" | undefined;
            isFullHeight?: boolean | undefined;
            isFullWidth?: boolean | undefined;
        }, "ref"> & React.RefAttributes<HTMLDivElement> & {
            overlayClassName?: string | undefined;
            isMirrored?: boolean | undefined;
            isVideoInputMuted: boolean;
            localMediaStream?: MediaStream | undefined;
            shouldShowUserAvatar: boolean;
            sizeModifier?: "large" | "full" | "medium" | "small" | undefined;
            shouldShowBorder?: boolean | undefined;
            isMobileDevice?: boolean | undefined;
            username: string;
            shouldShowErrorBorder?: boolean | undefined;
            showOverlayShadow?: boolean | undefined;
        } & {
            children?: React.ReactNode;
        } & {
            quality: import("@pexip/peer-connection-stats").Quality;
            callQualityPosition: "topRight" | "bottomRight";
            overlayClassName?: string | undefined;
            isAudioInputMuted?: boolean | undefined;
            isAudioInputMissing?: boolean | undefined;
            isMobileDevice?: boolean | undefined;
            areEffectsEnabled: boolean;
            areEffectsApplied: boolean;
            onCollapseSelfview: () => void;
            onToggleAudioClick: () => void;
            toggleFacingMode?: (() => void) | undefined;
            openEffectsModal: () => void;
        }>;
    };
    parameters: {
        layout: string;
    };
};
export default _default;
export type Story = StoryObj<typeof InMeetingSelfview>;
export declare const Main: Story;
export declare const AudioMuted: Story;
export declare const AudioMissing: Story;
export declare const EffectsDisabled: Story;
export declare const EffectsApplied: Story;
export declare const Mobile: Story;
//# sourceMappingURL=InMeetingSelfview.stories.d.ts.map