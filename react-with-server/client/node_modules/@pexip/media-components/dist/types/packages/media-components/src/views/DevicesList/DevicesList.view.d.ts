import React from 'react';
import type { ReactNode } from 'react';
import type { SelectProps } from '@pexip/components';
import type { MediaDeviceInfoLike } from '@pexip/media-control';
import type { BlockedBrowserPermissionsInfoType, DeviceError } from '../../types';
export declare const DevicesList: React.FC<{
    requestedAudio?: boolean;
    requestedVideo?: boolean;
    videoInput?: MediaDeviceInfoLike;
    audioInput?: MediaDeviceInfoLike;
    audioOutput?: MediaDeviceInfoLike;
    devices: MediaDeviceInfoLike[];
    videoInputError: DeviceError;
    audioInputError: DeviceError;
    onAudioInputChange: (device: MediaDeviceInfoLike) => void;
    onAudioOutputChange: (device: MediaDeviceInfoLike) => void;
    onVideoInputChange: (device: MediaDeviceInfoLike) => void;
    isLoading?: boolean;
    inputAudioTester?: ReactNode;
    outputAudioTester?: ReactNode;
    learnHowToGrantAccessURL?: string;
    permissionInfoType?: BlockedBrowserPermissionsInfoType;
    setShowHelpVideo?: React.Dispatch<React.SetStateAction<boolean>>;
    showTooltip?: boolean;
} & Pick<SelectProps, 'sizeModifier'>>;
//# sourceMappingURL=DevicesList.view.d.ts.map