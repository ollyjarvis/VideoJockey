export declare enum MimeTypes {
    TextPlain = "text/plain",
    TextHTML = "text/html"
}
declare const createClipboardItem: <T extends string>(mimeType: MimeTypes, promise: Promise<T>) => ClipboardItem;
interface CopyToClipboardItemOptions {
    clipboardWrite?: Clipboard['write'];
    createItem?: typeof createClipboardItem;
}
export declare const copyToClipboardItem: <T extends string>(mimeType: MimeTypes, promise: Promise<T>, { clipboardWrite, createItem, }?: CopyToClipboardItemOptions) => Promise<void>;
export declare const copyTextToClipboard: (text: string, clipboardWriteText?: (data: string) => Promise<void>) => Promise<void>;
export declare const readTextFromClipboard: (clipboardReadText?: () => Promise<string>) => Promise<string>;
export declare const statefulCopyLinkToClipboard: (meetingLink: string, setIsCopied: (value: React.SetStateAction<boolean>) => void) => Promise<void>;
export {};
//# sourceMappingURL=clipboard.d.ts.map