import React from 'react';
import type { Story } from '@storybook/react';
import { InfoCard } from '../InfoCard.view';
import { InfoCardWidth, InfoCardType } from '../InfoCard.constants';
declare const _default: {
    title: string;
    component: React.FC<{
        imageUrl?: string | undefined;
        logoUrl?: import("@pexip/components").ImageSrc | undefined;
        imageContent?: React.ReactElement<any, string | React.JSXElementConstructor<any>> | undefined;
        headerText?: string | undefined;
        bodyContent?: React.ReactNode;
        orientation?: import("../InfoCard.types").InfoCardOrientation | undefined;
        width?: InfoCardWidth | undefined;
        animate?: {
            shouldAnimate: boolean;
            onAnimateComplete: () => void;
        } | undefined;
        type: InfoCardType;
        brandName?: string | undefined;
    }>;
    parameters: {
        componentSubtitle: string;
    };
};
export default _default;
export declare const Vertical: import("@storybook/types").AnnotatedStoryFn<import("@storybook/react/dist/types-0fc72a6d").R, {
    imageUrl?: string | undefined;
    logoUrl?: import("@pexip/components").ImageSrc | undefined;
    imageContent?: React.ReactElement<any, string | React.JSXElementConstructor<any>> | undefined;
    headerText?: string | undefined;
    bodyContent?: React.ReactNode;
    orientation?: import("../InfoCard.types").InfoCardOrientation | undefined;
    width?: InfoCardWidth | undefined;
    animate?: {
        shouldAnimate: boolean;
        onAnimateComplete: () => void;
    } | undefined;
    type: InfoCardType;
    brandName?: string | undefined;
}>;
export declare const Horizontal: import("@storybook/types").AnnotatedStoryFn<import("@storybook/react/dist/types-0fc72a6d").R, {
    imageUrl?: string | undefined;
    logoUrl?: import("@pexip/components").ImageSrc | undefined;
    imageContent?: React.ReactElement<any, string | React.JSXElementConstructor<any>> | undefined;
    headerText?: string | undefined;
    bodyContent?: React.ReactNode;
    orientation?: import("../InfoCard.types").InfoCardOrientation | undefined;
    width?: InfoCardWidth | undefined;
    animate?: {
        shouldAnimate: boolean;
        onAnimateComplete: () => void;
    } | undefined;
    type: InfoCardType;
    brandName?: string | undefined;
}>;
export declare const VerticalWithImageContent: import("@storybook/types").AnnotatedStoryFn<import("@storybook/react/dist/types-0fc72a6d").R, {
    imageUrl?: string | undefined;
    logoUrl?: import("@pexip/components").ImageSrc | undefined;
    imageContent?: React.ReactElement<any, string | React.JSXElementConstructor<any>> | undefined;
    headerText?: string | undefined;
    bodyContent?: React.ReactNode;
    orientation?: import("../InfoCard.types").InfoCardOrientation | undefined;
    width?: InfoCardWidth | undefined;
    animate?: {
        shouldAnimate: boolean;
        onAnimateComplete: () => void;
    } | undefined;
    type: InfoCardType;
    brandName?: string | undefined;
}>;
export declare const HorizontalWithImageContent: import("@storybook/types").AnnotatedStoryFn<import("@storybook/react/dist/types-0fc72a6d").R, {
    imageUrl?: string | undefined;
    logoUrl?: import("@pexip/components").ImageSrc | undefined;
    imageContent?: React.ReactElement<any, string | React.JSXElementConstructor<any>> | undefined;
    headerText?: string | undefined;
    bodyContent?: React.ReactNode;
    orientation?: import("../InfoCard.types").InfoCardOrientation | undefined;
    width?: InfoCardWidth | undefined;
    animate?: {
        shouldAnimate: boolean;
        onAnimateComplete: () => void;
    } | undefined;
    type: InfoCardType;
    brandName?: string | undefined;
}>;
export declare const VerticalScrollLongContent: import("@storybook/types").AnnotatedStoryFn<import("@storybook/react/dist/types-0fc72a6d").R, {
    imageUrl?: string | undefined;
    logoUrl?: import("@pexip/components").ImageSrc | undefined;
    imageContent?: React.ReactElement<any, string | React.JSXElementConstructor<any>> | undefined;
    headerText?: string | undefined;
    bodyContent?: React.ReactNode;
    orientation?: import("../InfoCard.types").InfoCardOrientation | undefined;
    width?: InfoCardWidth | undefined;
    animate?: {
        shouldAnimate: boolean;
        onAnimateComplete: () => void;
    } | undefined;
    type: InfoCardType;
    brandName?: string | undefined;
}>;
export declare const HorizontalScrollLongContent: import("@storybook/types").AnnotatedStoryFn<import("@storybook/react/dist/types-0fc72a6d").R, {
    imageUrl?: string | undefined;
    logoUrl?: import("@pexip/components").ImageSrc | undefined;
    imageContent?: React.ReactElement<any, string | React.JSXElementConstructor<any>> | undefined;
    headerText?: string | undefined;
    bodyContent?: React.ReactNode;
    orientation?: import("../InfoCard.types").InfoCardOrientation | undefined;
    width?: InfoCardWidth | undefined;
    animate?: {
        shouldAnimate: boolean;
        onAnimateComplete: () => void;
    } | undefined;
    type: InfoCardType;
    brandName?: string | undefined;
}>;
export declare const LogoPortraitFigmaVertical: import("@storybook/types").AnnotatedStoryFn<import("@storybook/react/dist/types-0fc72a6d").R, {
    imageUrl?: string | undefined;
    logoUrl?: import("@pexip/components").ImageSrc | undefined;
    imageContent?: React.ReactElement<any, string | React.JSXElementConstructor<any>> | undefined;
    headerText?: string | undefined;
    bodyContent?: React.ReactNode;
    orientation?: import("../InfoCard.types").InfoCardOrientation | undefined;
    width?: InfoCardWidth | undefined;
    animate?: {
        shouldAnimate: boolean;
        onAnimateComplete: () => void;
    } | undefined;
    type: InfoCardType;
    brandName?: string | undefined;
}>;
export declare const LogoPortraitFigmaHorizontal: import("@storybook/types").AnnotatedStoryFn<import("@storybook/react/dist/types-0fc72a6d").R, {
    imageUrl?: string | undefined;
    logoUrl?: import("@pexip/components").ImageSrc | undefined;
    imageContent?: React.ReactElement<any, string | React.JSXElementConstructor<any>> | undefined;
    headerText?: string | undefined;
    bodyContent?: React.ReactNode;
    orientation?: import("../InfoCard.types").InfoCardOrientation | undefined;
    width?: InfoCardWidth | undefined;
    animate?: {
        shouldAnimate: boolean;
        onAnimateComplete: () => void;
    } | undefined;
    type: InfoCardType;
    brandName?: string | undefined;
}>;
export declare const LogoLandscapeLinkedinVertical: import("@storybook/types").AnnotatedStoryFn<import("@storybook/react/dist/types-0fc72a6d").R, {
    imageUrl?: string | undefined;
    logoUrl?: import("@pexip/components").ImageSrc | undefined;
    imageContent?: React.ReactElement<any, string | React.JSXElementConstructor<any>> | undefined;
    headerText?: string | undefined;
    bodyContent?: React.ReactNode;
    orientation?: import("../InfoCard.types").InfoCardOrientation | undefined;
    width?: InfoCardWidth | undefined;
    animate?: {
        shouldAnimate: boolean;
        onAnimateComplete: () => void;
    } | undefined;
    type: InfoCardType;
    brandName?: string | undefined;
}>;
export declare const LogoLandscapeLinkedinHorizontal: import("@storybook/types").AnnotatedStoryFn<import("@storybook/react/dist/types-0fc72a6d").R, {
    imageUrl?: string | undefined;
    logoUrl?: import("@pexip/components").ImageSrc | undefined;
    imageContent?: React.ReactElement<any, string | React.JSXElementConstructor<any>> | undefined;
    headerText?: string | undefined;
    bodyContent?: React.ReactNode;
    orientation?: import("../InfoCard.types").InfoCardOrientation | undefined;
    width?: InfoCardWidth | undefined;
    animate?: {
        shouldAnimate: boolean;
        onAnimateComplete: () => void;
    } | undefined;
    type: InfoCardType;
    brandName?: string | undefined;
}>;
export declare const Lobby: import("@storybook/types").AnnotatedStoryFn<import("@storybook/react/dist/types-0fc72a6d").R, {
    imageUrl?: string | undefined;
    logoUrl?: import("@pexip/components").ImageSrc | undefined;
    imageContent?: React.ReactElement<any, string | React.JSXElementConstructor<any>> | undefined;
    headerText?: string | undefined;
    bodyContent?: React.ReactNode;
    orientation?: import("../InfoCard.types").InfoCardOrientation | undefined;
    width?: InfoCardWidth | undefined;
    animate?: {
        shouldAnimate: boolean;
        onAnimateComplete: () => void;
    } | undefined;
    type: InfoCardType;
    brandName?: string | undefined;
}>;
export declare const WidthAndOrientationBasedOnViewportWidth: import("@storybook/types").AnnotatedStoryFn<import("@storybook/react/dist/types-0fc72a6d").R, {
    imageUrl?: string | undefined;
    logoUrl?: import("@pexip/components").ImageSrc | undefined;
    imageContent?: React.ReactElement<any, string | React.JSXElementConstructor<any>> | undefined;
    headerText?: string | undefined;
    bodyContent?: React.ReactNode;
    orientation?: import("../InfoCard.types").InfoCardOrientation | undefined;
    width?: InfoCardWidth | undefined;
    animate?: {
        shouldAnimate: boolean;
        onAnimateComplete: () => void;
    } | undefined;
    type: InfoCardType;
    brandName?: string | undefined;
}>;
export declare const Animatable: Story<React.ComponentProps<typeof InfoCard>>;
//# sourceMappingURL=InfoCard.stories.d.ts.map