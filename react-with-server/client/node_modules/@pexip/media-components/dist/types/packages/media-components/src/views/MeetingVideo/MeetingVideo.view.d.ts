import React from 'react';
import type { VideoHandle } from '@pexip/components';
import { StreamStatus } from '../../types';
export type MeetingVideoRef = Omit<VideoHandle, 'resume'>;
export declare const MeetingVideo: React.ForwardRefExoticComponent<{
    mediaStream?: MediaStream | undefined;
    selectedAudioOutputDeviceId?: string | undefined;
    className?: string | undefined;
    isPresentation?: boolean | undefined;
    status: StreamStatus;
    isFullHeight?: boolean | undefined;
    isFullWidth?: boolean | undefined;
    handleVideoClick?: (() => void) | undefined;
    onVideoPlaying?: (() => void) | undefined;
    onPictureInPictureChange?: ((isPip: boolean) => void) | undefined;
    onDoubleClick?: (() => void) | undefined;
    isContainerWide?: boolean | undefined;
    splashScreen?: {
        text: string;
        background: string;
    } | undefined;
    videoElementId?: string | undefined;
    onKeyDown?: React.KeyboardEventHandler<HTMLElement> | undefined;
    tabIndex?: number | undefined;
} & React.RefAttributes<MeetingVideoRef>>;
export type MeetingVideoProps = React.ComponentProps<typeof MeetingVideo>;
//# sourceMappingURL=MeetingVideo.view.d.ts.map