/// <reference types="react" />
import { PresentationEmphasis, StreamStatus } from '../types';
import type { MeetingVideoRef } from '../views';
export declare const useMeetingStageLayout: ({ expandPrimaryVideo, isPresenting, isPresentationPoppedOut, presentationEmphasis, setEmphasis, }: {
    expandPrimaryVideo: boolean;
    isPresenting: boolean;
    isPresentationPoppedOut?: boolean | undefined;
    presentationEmphasis?: PresentationEmphasis | undefined;
    setEmphasis: (emphasis: PresentationEmphasis) => void;
}) => {
    meetingStreamStatus: StreamStatus;
    presoStreamStatus: StreamStatus;
    setIsMeetingVideoBrowserPip: import("react").Dispatch<import("react").SetStateAction<boolean>>;
    setIsPresentationBrowserPip: import("react").Dispatch<import("react").SetStateAction<boolean>>;
    handleMeetingVideoClick: () => Promise<void>;
    handlePresentationVideoClick: () => Promise<void>;
    mainOnKeyDown: import("react").KeyboardEventHandler<import("@react-types/shared").FocusableElement> | undefined;
    presentationOnKeyDown: import("react").KeyboardEventHandler<import("@react-types/shared").FocusableElement> | undefined;
    mainVideoComponentRef: import("react").RefObject<MeetingVideoRef>;
    presentationVideoComponentRef: import("react").RefObject<MeetingVideoRef>;
};
//# sourceMappingURL=useMeetingStageLayout.d.ts.map