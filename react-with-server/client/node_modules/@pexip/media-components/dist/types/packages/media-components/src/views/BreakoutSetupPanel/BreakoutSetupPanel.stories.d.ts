import type { Story } from '@storybook/react';
import React from 'react';
import { BreakoutRoomAssignmentMode } from '../../types';
import { BreakoutSetupPanel } from './BreakoutSetupPanel.view';
declare const _default: {
    title: string;
    component: React.FC<React.PropsWithChildren<{
        currentParticipants: import("../../types").BreakoutParticipants;
        myIdentity?: string | undefined;
        openRoomsText: string;
        onOpenRooms: (participants: import("../../types").BreakoutParticipants) => void;
        isOpeningRooms?: boolean | undefined;
        numberOfRooms: number;
        assignmentMode: BreakoutRoomAssignmentMode;
        onClosePanel: () => void;
        onBack: () => void;
        onSettingsButtonClick: () => void;
        hideAddRoomButtonText?: boolean | undefined;
        hideShuffleButtonText?: boolean | undefined;
        shuffle?: (({ allParticipants, identity, shuffleAssigned, shuffleId, }: {
            allParticipants: import("../../types").BreakoutParticipants;
            identity?: string | undefined;
            shuffleAssigned?: boolean | undefined;
            shuffleId?: number | undefined;
        }) => import("../../types").BreakoutParticipants) | undefined;
    }>>;
    parameters: {
        layout: string;
    };
    argTypes: {
        assignmentMode: {
            options: typeof BreakoutRoomAssignmentMode;
            control: {
                type: string;
            };
        };
    };
};
export default _default;
export declare const Main: Story<React.ComponentProps<typeof BreakoutSetupPanel>>;
//# sourceMappingURL=BreakoutSetupPanel.stories.d.ts.map