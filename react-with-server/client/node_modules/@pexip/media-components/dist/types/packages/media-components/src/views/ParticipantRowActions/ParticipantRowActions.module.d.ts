export declare enum ParticipantIndicatorToShow {
    NONE = "none",
    UNMUTE = "unmute",
    REMOVE = "remove",
    MUTED = "muted",
    CAMERA_MUTED = "camera-muted",
    SPEAKING = "speaking",
    HOST_ACTIONS = "host-actions"
}
export type RowActionState = {
    isHost: boolean;
    isCameraMuted: boolean;
    isPresenting: boolean;
    hasChildCalls: boolean;
    isCurrentPeer?: boolean;
    canPerformHostActions: boolean;
    isHover: boolean;
    isMuted: boolean;
    isSpeaking: boolean;
};
export declare const getShouldShowIndicators: ({ canPerformHostActions, isInteracted, }: Pick<RowActionState, "canPerformHostActions" | "isCurrentPeer"> & {
    isInteracted: boolean;
}) => boolean;
export declare const getShouldShowHostActions: ({ canPerformHostActions, isCurrentPeer, isHost, isInteracted, }: Pick<RowActionState, "canPerformHostActions" | "isCurrentPeer" | "isHost"> & {
    isInteracted: boolean;
}) => boolean;
export declare const getShouldShowSelfActions: (isCurrentPeer: boolean, isInteracted: boolean) => boolean;
export declare const displayMuteHandCursor: (isHost: boolean, isCurrentPeer: boolean) => boolean;
//# sourceMappingURL=ParticipantRowActions.module.d.ts.map