import React from 'react';
import type { FloatRootOverflow, AlignWithFloatRootTrigger } from '@pexip/components';
import type { AutoHideButtonCallbacks } from '../../types';
export interface InMeetingDraggablePosition {
    floatRootOverflow: FloatRootOverflow;
}
export declare const InMeetingDraggable: React.ForwardRefExoticComponent<Omit<React.ClassAttributes<HTMLDivElement> & React.HTMLAttributes<HTMLDivElement> & {
    autoHideProps?: AutoHideButtonCallbacks | undefined;
    isSidePanelVisible: boolean;
    isSidePanelTransformEnabled?: boolean | undefined;
    isDisabled?: boolean | undefined;
    alwaysAllowStyles?: boolean | undefined;
    floatRoot?: React.RefObject<HTMLDivElement> | undefined;
    center?: boolean | undefined;
    isPhone?: boolean | undefined;
    beforeRepositionSideEffect?: (() => void) | undefined;
    onRepositionSideEffect?: ((el: HTMLDivElement, position: InMeetingDraggablePosition) => void) | undefined;
    shouldCaptureClick?: boolean | undefined;
    alignWithFloatRootTrigger?: AlignWithFloatRootTrigger | undefined;
    style?: React.CSSProperties | undefined;
}, "ref"> & React.RefAttributes<HTMLDivElement>>;
export type InMeetingDraggableProps = React.ComponentProps<typeof InMeetingDraggable>;
//# sourceMappingURL=InMeetingDraggable.view.d.ts.map