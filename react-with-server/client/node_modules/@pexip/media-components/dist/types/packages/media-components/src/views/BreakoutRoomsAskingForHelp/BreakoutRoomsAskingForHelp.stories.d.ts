import React from 'react';
import type { Story } from '@storybook/react';
import type { BreakoutRoomsAskingForHelpProps } from './BreakoutRoomsAskingForHelp.view';
declare const _default: {
    title: string;
    component: React.FC<Omit<React.ClassAttributes<HTMLDivElement> & React.HTMLAttributes<HTMLDivElement> & {
        hasBackground?: boolean | undefined;
        headerContent?: React.ReactElement<any, string | React.JSXElementConstructor<any>> | undefined;
        footerContent?: React.ReactElement<any, string | React.JSXElementConstructor<any>> | undefined;
        bgColor?: string | undefined;
        isRounded?: boolean | undefined;
        isWithBorder?: boolean | undefined;
        isWithShadow?: boolean | undefined;
        shadowModifier?: "light" | "dark" | undefined;
        padding?: "none" | "large" | "medium" | "small" | "compact" | undefined;
        headerPadding?: "none" | "large" | "medium" | "small" | "compact" | undefined;
        footerPadding?: "none" | "large" | "medium" | "small" | "compact" | undefined;
        colorScheme?: "light" | "dark" | undefined;
    } & Pick<React.ClassAttributes<HTMLDivElement> & React.HTMLAttributes<HTMLDivElement> & {
        padding?: "none" | "large" | "medium" | "small" | "compact" | undefined;
        hasFooterShadow?: boolean | undefined;
    }, "hasFooterShadow">, "ref"> & React.RefAttributes<HTMLDivElement> & {
        breakoutsAskingForHelp: import("../..").BreakoutAskingForHelpStatus[];
        onJoinRoom: (roomId: string) => void;
    }>;
};
export default _default;
export declare const Template: Story<BreakoutRoomsAskingForHelpProps>;
export declare const Main: import("@storybook/types").AnnotatedStoryFn<import("@storybook/react/dist/types-0fc72a6d").R, Omit<React.ClassAttributes<HTMLDivElement> & React.HTMLAttributes<HTMLDivElement> & {
    hasBackground?: boolean | undefined;
    headerContent?: React.ReactElement<any, string | React.JSXElementConstructor<any>> | undefined;
    footerContent?: React.ReactElement<any, string | React.JSXElementConstructor<any>> | undefined;
    bgColor?: string | undefined;
    isRounded?: boolean | undefined;
    isWithBorder?: boolean | undefined;
    isWithShadow?: boolean | undefined;
    shadowModifier?: "light" | "dark" | undefined;
    padding?: "none" | "large" | "medium" | "small" | "compact" | undefined;
    headerPadding?: "none" | "large" | "medium" | "small" | "compact" | undefined;
    footerPadding?: "none" | "large" | "medium" | "small" | "compact" | undefined;
    colorScheme?: "light" | "dark" | undefined;
} & Pick<React.ClassAttributes<HTMLDivElement> & React.HTMLAttributes<HTMLDivElement> & {
    padding?: "none" | "large" | "medium" | "small" | "compact" | undefined;
    hasFooterShadow?: boolean | undefined;
}, "hasFooterShadow">, "ref"> & React.RefAttributes<HTMLDivElement> & {
    breakoutsAskingForHelp: import("../..").BreakoutAskingForHelpStatus[];
    onJoinRoom: (roomId: string) => void;
}>;
//# sourceMappingURL=BreakoutRoomsAskingForHelp.stories.d.ts.map