import React from 'react';
import type { UserMediaStatus } from '@pexip/media';
import type { BlockedBrowserPermissionsInfoType, DeviceError, DeviceStatusInfo } from '../../types';
export declare const PreflightMediaControls: React.FC<{
    audioInputControl?: React.ReactNode;
    inputStatusInfo: DeviceStatusInfo;
    isAudioInputMuted: boolean;
    isAudioInputUnavailable: boolean;
    isBlurred?: boolean;
    isMobileDevice: boolean;
    isVideoInputMuted: boolean;
    isVideoInputUnavailable: boolean;
    requestMediaPermissions: () => void;
    segmentationEnabled?: boolean;
    shouldCenter: boolean;
    shouldShowVideoStatus?: boolean;
    silentTooltipInfo?: DeviceStatusInfo;
    streamStatus?: UserMediaStatus;
    toggleAudioInput?: () => void;
    toggleBlur?: () => void;
    toggleVideoInput?: () => void;
    toggleFacingMode?: () => void;
    deviceError: DeviceError;
    setShowHelpVideo: React.Dispatch<React.SetStateAction<boolean>>;
    learnHowToGrantAccessURL?: string;
    permissionInfoType: BlockedBrowserPermissionsInfoType;
}>;
export type PreflightMediaControlsProps = React.ComponentProps<typeof PreflightMediaControls>;
//# sourceMappingURL=PreflightMediaControls.view.d.ts.map