import React from 'react';
import type { MediaDeviceInfoLike } from '@pexip/media-control';
export declare enum TestYourMicStages {
    BeforeTesting = "before-testing",
    GetReady = "get-ready",
    Recording = "recording",
    RecordingSuccess = "recording-success",
    PlayingBack = "playing-back",
    PlaybackFinished = "playback-finished"
}
export declare const MicrophoneMonitorModal: React.FC<{
    audioMeter?: React.ReactNode;
    className?: string;
    closeOnOutsideClick?: boolean;
    currentStage: TestYourMicStages;
    audioInputs: MediaDeviceInfoLike[];
    audioOutputs: MediaDeviceInfoLike[];
    isOpen: boolean;
    onClose?: () => void;
    onAudioInputChange: (device: MediaDeviceInfoLike) => void;
    onAudioOutputChange: (device: MediaDeviceInfoLike) => void;
    selectedAudioInput?: MediaDeviceInfoLike;
    selectedAudioOutput?: MediaDeviceInfoLike;
    startTest: () => void;
    tryAgain?: () => void;
    replay?: () => void;
}>;
export type MicrophoneMonitorModalProps = React.ComponentProps<typeof MicrophoneMonitorModal>;
//# sourceMappingURL=MicrophoneMonitorModal.view.d.ts.map