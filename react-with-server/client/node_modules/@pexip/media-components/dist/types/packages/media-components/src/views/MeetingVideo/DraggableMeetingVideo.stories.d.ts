import React from 'react';
import type { Story } from '@storybook/react';
import type { DraggableMeetingVideoProps } from './DraggableMeetingVideo.view';
declare const _default: {
    component: React.ForwardRefExoticComponent<Omit<Omit<{
        mediaStream?: MediaStream | undefined;
        selectedAudioOutputDeviceId?: string | undefined;
        className?: string | undefined;
        isPresentation?: boolean | undefined;
        status: import("../..").StreamStatus;
        isFullHeight?: boolean | undefined;
        isFullWidth?: boolean | undefined;
        handleVideoClick?: (() => void) | undefined;
        onVideoPlaying?: (() => void) | undefined;
        onPictureInPictureChange?: ((isPip: boolean) => void) | undefined;
        onDoubleClick?: (() => void) | undefined;
        isContainerWide?: boolean | undefined;
        splashScreen?: {
            text: string;
            background: string;
        } | undefined;
        videoElementId?: string | undefined;
        onKeyDown?: React.KeyboardEventHandler<HTMLElement> | undefined;
        tabIndex?: number | undefined;
    } & React.RefAttributes<import("./MeetingVideo.view").MeetingVideoRef>, "isContainerWide"> & {
        autoHideProps?: import("../..").AutoHideButtonCallbacks | undefined;
        isSidePanelVisible: boolean;
        floatRoot?: React.RefObject<HTMLDivElement> | undefined;
        videoElementId?: string | undefined;
    }, "ref"> & React.RefAttributes<import("./MeetingVideo.view").MeetingVideoRef>>;
    title: string;
};
export default _default;
export declare const Main: Story<DraggableMeetingVideoProps>;
//# sourceMappingURL=DraggableMeetingVideo.stories.d.ts.map