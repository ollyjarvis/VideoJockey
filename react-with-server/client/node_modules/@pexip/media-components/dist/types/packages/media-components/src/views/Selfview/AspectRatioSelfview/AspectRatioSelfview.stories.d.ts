import React from 'react';
import type { StoryFn } from '@storybook/react';
import type { SelfviewAspectRatioProps } from './AspectRatioSelfview';
declare const _default: {
    title: string;
    components: {
        AspectRatioSelfview: (props: Omit<React.ClassAttributes<HTMLDivElement> & React.HTMLAttributes<HTMLDivElement> & {
            size?: "large" | "full" | "medium" | "small" | undefined;
            background?: "none" | "primary" | "secondary" | "light" | "black" | undefined;
            borderRadius?: "none" | "box" | undefined;
            border?: boolean | undefined;
            alignItems?: "center" | "stretch" | "flex-end" | "flex-start" | undefined;
            flexDirection?: "row" | "column" | undefined;
            justifyContent?: "center" | "flex-end" | "flex-start" | undefined;
            isFullHeight?: boolean | undefined;
            isFullWidth?: boolean | undefined;
        }, "ref"> & React.RefAttributes<HTMLDivElement> & {
            overlayClassName?: string | undefined;
            isMirrored?: boolean | undefined;
            isVideoInputMuted: boolean;
            localMediaStream?: MediaStream | undefined;
            shouldShowUserAvatar: boolean;
            sizeModifier?: "large" | "full" | "medium" | "small" | undefined;
            shouldShowBorder?: boolean | undefined;
            isMobileDevice?: boolean | undefined;
            username: string;
            shouldShowErrorBorder?: boolean | undefined;
            showOverlayShadow?: boolean | undefined;
        } & {
            children?: React.ReactNode;
        } & import("./AspectRatioSelfview").WithAspectRatioSelfviewProps) => React.JSX.Element;
    };
    parameters: {
        layout: string;
    };
    argTypes: {
        aspectRatioType: {
            control: {
                type: string;
            };
            options: readonly ["camera-step", "in-meeting", "ready-to-join-express", "ready-to-join-step", "force-landscape"];
        };
    };
};
export default _default;
export declare const Main: StoryFn<SelfviewAspectRatioProps>;
export declare const forceLandscapeOrientation: import("@storybook/types").AnnotatedStoryFn<import("@storybook/react/dist/types-0fc72a6d").R, Omit<React.ClassAttributes<HTMLDivElement> & React.HTMLAttributes<HTMLDivElement> & {
    size?: "large" | "full" | "medium" | "small" | undefined;
    background?: "none" | "primary" | "secondary" | "light" | "black" | undefined;
    borderRadius?: "none" | "box" | undefined;
    border?: boolean | undefined;
    alignItems?: "center" | "stretch" | "flex-end" | "flex-start" | undefined;
    flexDirection?: "row" | "column" | undefined;
    justifyContent?: "center" | "flex-end" | "flex-start" | undefined;
    isFullHeight?: boolean | undefined;
    isFullWidth?: boolean | undefined;
}, "ref"> & React.RefAttributes<HTMLDivElement> & {
    overlayClassName?: string | undefined;
    isMirrored?: boolean | undefined;
    isVideoInputMuted: boolean;
    localMediaStream?: MediaStream | undefined;
    shouldShowUserAvatar: boolean;
    sizeModifier?: "large" | "full" | "medium" | "small" | undefined;
    shouldShowBorder?: boolean | undefined;
    isMobileDevice?: boolean | undefined;
    username: string;
    shouldShowErrorBorder?: boolean | undefined;
    showOverlayShadow?: boolean | undefined;
} & {
    children?: React.ReactNode;
} & import("./AspectRatioSelfview").WithAspectRatioSelfviewProps>;
//# sourceMappingURL=AspectRatioSelfview.stories.d.ts.map