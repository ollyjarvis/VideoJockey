import React from 'react';
import type { Story } from '@storybook/react';
import type { FrequencyBarsAudioMeterProps } from '../FrequencyBarsAudioMeter.view';
declare const _default: {
    component: React.FC<React.ClassAttributes<HTMLDivElement> & React.HTMLAttributes<HTMLDivElement> & {
        backgroundAnimationDuration?: number | undefined;
        barClassName?: string | undefined;
        barsWrapperClassName?: string | undefined;
        barsNumber?: number | undefined;
        className?: string | undefined;
        barsWrapperId?: string | undefined;
        showBackground?: boolean | undefined;
        showBackgroundAnimation?: boolean | undefined;
    }>;
    title: string;
    parameters: {
        layout: string;
        chromatic: {
            pauseAnimationAtEnd: boolean;
        };
    };
    decorators: ((Story: React.FC) => React.JSX.Element)[];
};
export default _default;
export declare const Main: Story<{
    totalPlaybackDuration: number;
    currentPlaybackDuration: number;
} & FrequencyBarsAudioMeterProps>;
export declare const WithContent: import("@storybook/types").AnnotatedStoryFn<import("@storybook/react/dist/types-0fc72a6d").R, {
    totalPlaybackDuration: number;
    currentPlaybackDuration: number;
} & React.ClassAttributes<HTMLDivElement> & React.HTMLAttributes<HTMLDivElement> & {
    backgroundAnimationDuration?: number | undefined;
    barClassName?: string | undefined;
    barsWrapperClassName?: string | undefined;
    barsNumber?: number | undefined;
    className?: string | undefined;
    barsWrapperId?: string | undefined;
    showBackground?: boolean | undefined;
    showBackgroundAnimation?: boolean | undefined;
}>;
export declare const Animated: Story<{
    animationSpeed: number;
} & FrequencyBarsAudioMeterProps>;
//# sourceMappingURL=FrequencyBarsAudioMeter.stories.d.ts.map