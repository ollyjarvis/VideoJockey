import React from 'react';
import type { AutoHideButtonCallbacks } from '../../types';
import { StreamStatus } from '../../types';
import type { MeetingVideoRef } from './MeetingVideo.view';
export declare const DraggableMeetingVideo: React.ForwardRefExoticComponent<Omit<Omit<{
    mediaStream?: MediaStream | undefined;
    selectedAudioOutputDeviceId?: string | undefined;
    className?: string | undefined;
    isPresentation?: boolean | undefined;
    status: StreamStatus;
    isFullHeight?: boolean | undefined;
    isFullWidth?: boolean | undefined;
    handleVideoClick?: (() => void) | undefined;
    onVideoPlaying?: (() => void) | undefined;
    onPictureInPictureChange?: ((isPip: boolean) => void) | undefined;
    onDoubleClick?: (() => void) | undefined;
    isContainerWide?: boolean | undefined;
    splashScreen?: {
        text: string;
        background: string;
    } | undefined;
    videoElementId?: string | undefined;
    onKeyDown?: React.KeyboardEventHandler<HTMLElement> | undefined;
    tabIndex?: number | undefined;
} & React.RefAttributes<MeetingVideoRef>, "isContainerWide"> & {
    autoHideProps?: AutoHideButtonCallbacks | undefined;
    isSidePanelVisible: boolean;
    floatRoot?: React.RefObject<HTMLDivElement> | undefined;
    videoElementId?: string | undefined;
}, "ref"> & React.RefAttributes<MeetingVideoRef>>;
export type DraggableMeetingVideoProps = React.ComponentProps<typeof DraggableMeetingVideo>;
//# sourceMappingURL=DraggableMeetingVideo.view.d.ts.map