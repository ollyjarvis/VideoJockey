import type { SocketSignals } from './types';
/**
 *  indicates wether the given close code in the error range
 *
 * @param WebSocket-internal error code
 *
 * @see https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent
 */
export declare const isWebSocketClosedWithError: (errorCode: number) => boolean;
export declare const isOpen: (readyState?: number) => boolean;
export declare const isClosed: (readyState?: number) => boolean;
export declare const isConnecting: (readyState?: number) => boolean;
/**
 * Create and return all required and optional (if specified with `more`),
 * signals for call to work
 *
 * @param scope - any scope prefix for the generated signal name, @see Signal
 * @param more - Keys from `SocketSignalsOptional`, @see SocketSignalsOptional
 *
 * The following signals created by default
 * - 'onRemoteStream',
 *
 * @see REQUIRED_SOCKET_SIGNAL_KEYS
 */
export declare const createSocketSignals: <T extends {
    type: string;
}>(scope?: string) => Pick<Required<SocketSignals<T>>, "onConnecting" | "onConnected" | "onReconnecting" | "onReconnected" | "onDisconnected" | "onError" | "onMessage">;
