import { isAudioNodeInit } from '@pexip/media-processor';
import { UserMediaStatus, AUDIO_CONTENT_HINTS, VIDEO_CONTENT_HINTS, } from './types';
export const isNonNullObject = (value) => {
    if (typeof value === 'object' && value !== null) {
        return true;
    }
    return false;
};
export const isUserMediaStatus = (value) => {
    if (value && typeof value === 'string') {
        return Object.values(UserMediaStatus).includes(value);
    }
    return false;
};
export const isMedia = (value) => {
    if (isNonNullObject(value) && 'release' in value) {
        return true;
    }
    return false;
};
export const isAnalyzerNodeInitProp = (value) => {
    if (value === undefined || isAudioNodeInit(value)) {
        return true;
    }
    return false;
};
export const isAudioContentHint = (value) => {
    if (typeof value === 'string' &&
        Object.values(AUDIO_CONTENT_HINTS).includes(value)) {
        return true;
    }
    return false;
};
export const isVideoContentHint = (value) => {
    if (typeof value === 'string' &&
        Object.values(VIDEO_CONTENT_HINTS).includes(value)) {
        return true;
    }
    return false;
};
