import { UserMediaStatus, DeniedDevices } from './types';
export type UserMediaValidator = (status: UserMediaStatus) => boolean;
export declare const isFallbackVideo: UserMediaValidator;
export declare const isFallbackAudio: UserMediaValidator;
export declare const isFallback: UserMediaValidator;
export declare const hasNoDevice: UserMediaValidator;
export declare const hasNoAudioDevices: UserMediaValidator;
export declare const hasNoVideoDevices: UserMediaValidator;
export declare const isGrantedOnlyVideoNoAudioDevices: UserMediaValidator;
export declare const isPromptAudio: UserMediaValidator;
export declare const isGrantedOnlyVideo: UserMediaValidator;
export declare const isGrantedOnlyAudioNoVideoDevices: UserMediaValidator;
export declare const isPromptVideo: UserMediaValidator;
export declare const isGrantedOnlyAudio: UserMediaValidator;
export declare const areBothGranted: UserMediaValidator;
export declare const isGrantedVideo: UserMediaValidator;
export declare const isGrantedAudio: UserMediaValidator;
export declare const isGranted: UserMediaValidator;
export declare const isOnlyAudioError: UserMediaValidator;
export declare const isOnlyVideoError: UserMediaValidator;
export declare const isRejected: UserMediaValidator;
export declare const isRejectedOnlyAudio: UserMediaValidator;
export declare const isRejectedOnlyVideo: UserMediaValidator;
export declare const isOverConstrained: UserMediaValidator;
export declare const isUnknownError: UserMediaValidator;
export declare const isInitial: UserMediaValidator;
export declare const isInitialPermissions: UserMediaValidator;
export declare const isInitialPermissionsNotGranted: UserMediaValidator;
export declare const isInitialPermissionsGranted: UserMediaValidator;
export declare const isAudioDeviceInUse: UserMediaValidator;
export declare const isDeviceInUse: UserMediaValidator;
export declare const isVideoDeviceInUse: UserMediaValidator;
export declare const toDeniedDevices: (status?: UserMediaStatus) => DeniedDevices | undefined;
export declare const getPermissionStatus: (getPermissionState?: (anyActiveStream?: boolean | undefined) => Promise<import("@pexip/media-control").InputDevicePermission>) => Promise<UserMediaStatus.Initial | UserMediaStatus.InitialPermissionsGranted | UserMediaStatus.InitialPermissionsNotGranted | UserMediaStatus.InitialPermissionsVideoInputDenied | UserMediaStatus.InitialPermissionsAudioInputDenied | UserMediaStatus.InitialPermissionsVideoInputGranted | UserMediaStatus.InitialPermissionsAudioInputGranted | UserMediaStatus.InitialPermissionsGrantedVideoInputDenied | UserMediaStatus.InitialPermissionsGrantedAudioInputDenied | UserMediaStatus.PermissionsRejected>;
export declare const deriveInitialPermissionStatus: (prevStatus: UserMediaStatus, getPermissionState?: (anyActiveStream?: boolean | undefined) => Promise<import("@pexip/media-control").InputDevicePermission>) => Promise<UserMediaStatus>;
