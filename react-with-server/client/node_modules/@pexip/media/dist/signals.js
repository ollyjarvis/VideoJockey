import { createSignal } from '@pexip/signal';
/**
 * Create a general signal with consistent scoped name
 *
 * @param name - Signal name
 * @param crucial - Signify if the signal is unmissable. @defaultValue true
 * @param variant - The variant of the signal @see Signal @defaultValue 'generic'
 */
export const createMediaSignal = (name, crucial = true, variant = 'generic') => createSignal({
    name: `media/${name}`,
    allowEmittingWithoutObserver: !crucial,
    variant,
});
export const REQUIRED_SIGNAL_KEYS = [
    'onMediaChanged',
    'onVAD',
    'onSilentDetected',
];
/**
 * Create and return all required and optional (if specified with `more`),
 * signals for media to work
 *
 * @param more - Keys from `MediaSignalsOptional`, @see MediaSignalsOptional
 * @param scope - any scope prefix for the generated signal name, @see Signal
 *
 * The following signals created by default
 * - 'onMediaChanged',
 * - 'onVAD',
 *
 * @see REQUIRED_SIGNAL_KEYS
 */
export const createMediaSignals = (more, scope = '') => {
    const signalScope = scope && [scope, ':'].join('');
    return [...REQUIRED_SIGNAL_KEYS, ...more].reduce((signals, key) => ({
        ...signals,
        [key]: createMediaSignal(`${signalScope}${key}`),
    }), {});
};
