{
  "version": 3,
  "sources": ["../../sdp-transform/lib/grammar.js", "../../sdp-transform/lib/parser.js", "../../sdp-transform/lib/writer.js", "../../sdp-transform/lib/index.js", "../../@pexip/socket-manager/dist/utils.js", "../../@pexip/socket-manager/dist/types.js", "../../@pexip/socket-manager/dist/constants.js", "../../@pexip/socket-manager/dist/baseLogger.js", "../../@pexip/socket-manager/dist/logger.js", "../../@pexip/socket-manager/dist/socketManager.js", "../../@pexip/vpaas-api/dist/baseLogger.js", "../../@pexip/vpaas-api/dist/logger.js", "../../@pexip/vpaas-api/dist/utils.js", "../../@pexip/vpaas-api/dist/api.js", "../../@pexip/peer-connection/dist/types.js", "../../@pexip/peer-connection/dist/baseLogger.js", "../../@pexip/peer-connection/dist/logger.js", "../../@pexip/peer-connection/dist/constants.js", "../../@pexip/peer-connection/dist/utils.js", "../../@pexip/peer-connection/dist/sdpManager.js", "../../@pexip/peer-connection/dist/peerConnections.js", "../../@pexip/vpaas-sdk/src/baseLogger.ts", "../../@pexip/vpaas-sdk/src/logger.ts", "../../@pexip/vpaas-sdk/src/constants.ts", "../../@pexip/vpaas-sdk/src/utils.ts", "../../@pexip/vpaas-sdk/src/call.ts", "../../@pexip/vpaas-sdk/src/types.ts", "../../@pexip/vpaas-sdk/src/vpaas.ts"],
  "sourcesContent": ["var grammar = module.exports = {\n  v: [{\n    name: 'version',\n    reg: /^(\\d*)$/\n  }],\n  o: [{\n    // o=- 20518 0 IN IP4 203.0.113.1\n    // NB: sessionId will be a String in most cases because it is huge\n    name: 'origin',\n    reg: /^(\\S*) (\\d*) (\\d*) (\\S*) IP(\\d) (\\S*)/,\n    names: ['username', 'sessionId', 'sessionVersion', 'netType', 'ipVer', 'address'],\n    format: '%s %s %d %s IP%d %s'\n  }],\n  // default parsing of these only (though some of these feel outdated)\n  s: [{ name: 'name' }],\n  i: [{ name: 'description' }],\n  u: [{ name: 'uri' }],\n  e: [{ name: 'email' }],\n  p: [{ name: 'phone' }],\n  z: [{ name: 'timezones' }], // TODO: this one can actually be parsed properly...\n  r: [{ name: 'repeats' }],   // TODO: this one can also be parsed properly\n  // k: [{}], // outdated thing ignored\n  t: [{\n    // t=0 0\n    name: 'timing',\n    reg: /^(\\d*) (\\d*)/,\n    names: ['start', 'stop'],\n    format: '%d %d'\n  }],\n  c: [{\n    // c=IN IP4 10.47.197.26\n    name: 'connection',\n    reg: /^IN IP(\\d) (\\S*)/,\n    names: ['version', 'ip'],\n    format: 'IN IP%d %s'\n  }],\n  b: [{\n    // b=AS:4000\n    push: 'bandwidth',\n    reg: /^(TIAS|AS|CT|RR|RS):(\\d*)/,\n    names: ['type', 'limit'],\n    format: '%s:%s'\n  }],\n  m: [{\n    // m=video 51744 RTP/AVP 126 97 98 34 31\n    // NB: special - pushes to session\n    // TODO: rtp/fmtp should be filtered by the payloads found here?\n    reg: /^(\\w*) (\\d*) ([\\w/]*)(?: (.*))?/,\n    names: ['type', 'port', 'protocol', 'payloads'],\n    format: '%s %d %s %s'\n  }],\n  a: [\n    {\n      // a=rtpmap:110 opus/48000/2\n      push: 'rtp',\n      reg: /^rtpmap:(\\d*) ([\\w\\-.]*)(?:\\s*\\/(\\d*)(?:\\s*\\/(\\S*))?)?/,\n      names: ['payload', 'codec', 'rate', 'encoding'],\n      format: function (o) {\n        return (o.encoding)\n          ? 'rtpmap:%d %s/%s/%s'\n          : o.rate\n            ? 'rtpmap:%d %s/%s'\n            : 'rtpmap:%d %s';\n      }\n    },\n    {\n      // a=fmtp:108 profile-level-id=24;object=23;bitrate=64000\n      // a=fmtp:111 minptime=10; useinbandfec=1\n      push: 'fmtp',\n      reg: /^fmtp:(\\d*) ([\\S| ]*)/,\n      names: ['payload', 'config'],\n      format: 'fmtp:%d %s'\n    },\n    {\n      // a=control:streamid=0\n      name: 'control',\n      reg: /^control:(.*)/,\n      format: 'control:%s'\n    },\n    {\n      // a=rtcp:65179 IN IP4 193.84.77.194\n      name: 'rtcp',\n      reg: /^rtcp:(\\d*)(?: (\\S*) IP(\\d) (\\S*))?/,\n      names: ['port', 'netType', 'ipVer', 'address'],\n      format: function (o) {\n        return (o.address != null)\n          ? 'rtcp:%d %s IP%d %s'\n          : 'rtcp:%d';\n      }\n    },\n    {\n      // a=rtcp-fb:98 trr-int 100\n      push: 'rtcpFbTrrInt',\n      reg: /^rtcp-fb:(\\*|\\d*) trr-int (\\d*)/,\n      names: ['payload', 'value'],\n      format: 'rtcp-fb:%s trr-int %d'\n    },\n    {\n      // a=rtcp-fb:98 nack rpsi\n      push: 'rtcpFb',\n      reg: /^rtcp-fb:(\\*|\\d*) ([\\w-_]*)(?: ([\\w-_]*))?/,\n      names: ['payload', 'type', 'subtype'],\n      format: function (o) {\n        return (o.subtype != null)\n          ? 'rtcp-fb:%s %s %s'\n          : 'rtcp-fb:%s %s';\n      }\n    },\n    {\n      // a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n      // a=extmap:1/recvonly URI-gps-string\n      // a=extmap:3 urn:ietf:params:rtp-hdrext:encrypt urn:ietf:params:rtp-hdrext:smpte-tc 25@600/24\n      push: 'ext',\n      reg: /^extmap:(\\d+)(?:\\/(\\w+))?(?: (urn:ietf:params:rtp-hdrext:encrypt))? (\\S*)(?: (\\S*))?/,\n      names: ['value', 'direction', 'encrypt-uri', 'uri', 'config'],\n      format: function (o) {\n        return (\n          'extmap:%d' +\n          (o.direction ? '/%s' : '%v') +\n          (o['encrypt-uri'] ? ' %s' : '%v') +\n          ' %s' +\n          (o.config ? ' %s' : '')\n        );\n      }\n    },\n    {\n      // a=extmap-allow-mixed\n      name: 'extmapAllowMixed',\n      reg: /^(extmap-allow-mixed)/\n    },\n    {\n      // a=crypto:1 AES_CM_128_HMAC_SHA1_80 inline:PS1uQCVeeCFCanVmcjkpPywjNWhcYD0mXXtxaVBR|2^20|1:32\n      push: 'crypto',\n      reg: /^crypto:(\\d*) ([\\w_]*) (\\S*)(?: (\\S*))?/,\n      names: ['id', 'suite', 'config', 'sessionConfig'],\n      format: function (o) {\n        return (o.sessionConfig != null)\n          ? 'crypto:%d %s %s %s'\n          : 'crypto:%d %s %s';\n      }\n    },\n    {\n      // a=setup:actpass\n      name: 'setup',\n      reg: /^setup:(\\w*)/,\n      format: 'setup:%s'\n    },\n    {\n      // a=connection:new\n      name: 'connectionType',\n      reg: /^connection:(new|existing)/,\n      format: 'connection:%s'\n    },\n    {\n      // a=mid:1\n      name: 'mid',\n      reg: /^mid:([^\\s]*)/,\n      format: 'mid:%s'\n    },\n    {\n      // a=msid:0c8b064d-d807-43b4-b434-f92a889d8587 98178685-d409-46e0-8e16-7ef0db0db64a\n      name: 'msid',\n      reg: /^msid:(.*)/,\n      format: 'msid:%s'\n    },\n    {\n      // a=ptime:20\n      name: 'ptime',\n      reg: /^ptime:(\\d*(?:\\.\\d*)*)/,\n      format: 'ptime:%d'\n    },\n    {\n      // a=maxptime:60\n      name: 'maxptime',\n      reg: /^maxptime:(\\d*(?:\\.\\d*)*)/,\n      format: 'maxptime:%d'\n    },\n    {\n      // a=sendrecv\n      name: 'direction',\n      reg: /^(sendrecv|recvonly|sendonly|inactive)/\n    },\n    {\n      // a=ice-lite\n      name: 'icelite',\n      reg: /^(ice-lite)/\n    },\n    {\n      // a=ice-ufrag:F7gI\n      name: 'iceUfrag',\n      reg: /^ice-ufrag:(\\S*)/,\n      format: 'ice-ufrag:%s'\n    },\n    {\n      // a=ice-pwd:x9cml/YzichV2+XlhiMu8g\n      name: 'icePwd',\n      reg: /^ice-pwd:(\\S*)/,\n      format: 'ice-pwd:%s'\n    },\n    {\n      // a=fingerprint:SHA-1 00:11:22:33:44:55:66:77:88:99:AA:BB:CC:DD:EE:FF:00:11:22:33\n      name: 'fingerprint',\n      reg: /^fingerprint:(\\S*) (\\S*)/,\n      names: ['type', 'hash'],\n      format: 'fingerprint:%s %s'\n    },\n    {\n      // a=candidate:0 1 UDP 2113667327 203.0.113.1 54400 typ host\n      // a=candidate:1162875081 1 udp 2113937151 192.168.34.75 60017 typ host generation 0 network-id 3 network-cost 10\n      // a=candidate:3289912957 2 udp 1845501695 193.84.77.194 60017 typ srflx raddr 192.168.34.75 rport 60017 generation 0 network-id 3 network-cost 10\n      // a=candidate:229815620 1 tcp 1518280447 192.168.150.19 60017 typ host tcptype active generation 0 network-id 3 network-cost 10\n      // a=candidate:3289912957 2 tcp 1845501695 193.84.77.194 60017 typ srflx raddr 192.168.34.75 rport 60017 tcptype passive generation 0 network-id 3 network-cost 10\n      push:'candidates',\n      reg: /^candidate:(\\S*) (\\d*) (\\S*) (\\d*) (\\S*) (\\d*) typ (\\S*)(?: raddr (\\S*) rport (\\d*))?(?: tcptype (\\S*))?(?: generation (\\d*))?(?: network-id (\\d*))?(?: network-cost (\\d*))?/,\n      names: ['foundation', 'component', 'transport', 'priority', 'ip', 'port', 'type', 'raddr', 'rport', 'tcptype', 'generation', 'network-id', 'network-cost'],\n      format: function (o) {\n        var str = 'candidate:%s %d %s %d %s %d typ %s';\n\n        str += (o.raddr != null) ? ' raddr %s rport %d' : '%v%v';\n\n        // NB: candidate has three optional chunks, so %void middles one if it's missing\n        str += (o.tcptype != null) ? ' tcptype %s' : '%v';\n\n        if (o.generation != null) {\n          str += ' generation %d';\n        }\n\n        str += (o['network-id'] != null) ? ' network-id %d' : '%v';\n        str += (o['network-cost'] != null) ? ' network-cost %d' : '%v';\n        return str;\n      }\n    },\n    {\n      // a=end-of-candidates (keep after the candidates line for readability)\n      name: 'endOfCandidates',\n      reg: /^(end-of-candidates)/\n    },\n    {\n      // a=remote-candidates:1 203.0.113.1 54400 2 203.0.113.1 54401 ...\n      name: 'remoteCandidates',\n      reg: /^remote-candidates:(.*)/,\n      format: 'remote-candidates:%s'\n    },\n    {\n      // a=ice-options:google-ice\n      name: 'iceOptions',\n      reg: /^ice-options:(\\S*)/,\n      format: 'ice-options:%s'\n    },\n    {\n      // a=ssrc:2566107569 cname:t9YU8M1UxTF8Y1A1\n      push: 'ssrcs',\n      reg: /^ssrc:(\\d*) ([\\w_-]*)(?::(.*))?/,\n      names: ['id', 'attribute', 'value'],\n      format: function (o) {\n        var str = 'ssrc:%d';\n        if (o.attribute != null) {\n          str += ' %s';\n          if (o.value != null) {\n            str += ':%s';\n          }\n        }\n        return str;\n      }\n    },\n    {\n      // a=ssrc-group:FEC 1 2\n      // a=ssrc-group:FEC-FR 3004364195 1080772241\n      push: 'ssrcGroups',\n      // token-char = %x21 / %x23-27 / %x2A-2B / %x2D-2E / %x30-39 / %x41-5A / %x5E-7E\n      reg: /^ssrc-group:([\\x21\\x23\\x24\\x25\\x26\\x27\\x2A\\x2B\\x2D\\x2E\\w]*) (.*)/,\n      names: ['semantics', 'ssrcs'],\n      format: 'ssrc-group:%s %s'\n    },\n    {\n      // a=msid-semantic: WMS Jvlam5X3SX1OP6pn20zWogvaKJz5Hjf9OnlV\n      name: 'msidSemantic',\n      reg: /^msid-semantic:\\s?(\\w*) (\\S*)/,\n      names: ['semantic', 'token'],\n      format: 'msid-semantic: %s %s' // space after ':' is not accidental\n    },\n    {\n      // a=group:BUNDLE audio video\n      push: 'groups',\n      reg: /^group:(\\w*) (.*)/,\n      names: ['type', 'mids'],\n      format: 'group:%s %s'\n    },\n    {\n      // a=rtcp-mux\n      name: 'rtcpMux',\n      reg: /^(rtcp-mux)/\n    },\n    {\n      // a=rtcp-rsize\n      name: 'rtcpRsize',\n      reg: /^(rtcp-rsize)/\n    },\n    {\n      // a=sctpmap:5000 webrtc-datachannel 1024\n      name: 'sctpmap',\n      reg: /^sctpmap:([\\w_/]*) (\\S*)(?: (\\S*))?/,\n      names: ['sctpmapNumber', 'app', 'maxMessageSize'],\n      format: function (o) {\n        return (o.maxMessageSize != null)\n          ? 'sctpmap:%s %s %s'\n          : 'sctpmap:%s %s';\n      }\n    },\n    {\n      // a=x-google-flag:conference\n      name: 'xGoogleFlag',\n      reg: /^x-google-flag:([^\\s]*)/,\n      format: 'x-google-flag:%s'\n    },\n    {\n      // a=rid:1 send max-width=1280;max-height=720;max-fps=30;depend=0\n      push: 'rids',\n      reg: /^rid:([\\d\\w]+) (\\w+)(?: ([\\S| ]*))?/,\n      names: ['id', 'direction', 'params'],\n      format: function (o) {\n        return (o.params) ? 'rid:%s %s %s' : 'rid:%s %s';\n      }\n    },\n    {\n      // a=imageattr:97 send [x=800,y=640,sar=1.1,q=0.6] [x=480,y=320] recv [x=330,y=250]\n      // a=imageattr:* send [x=800,y=640] recv *\n      // a=imageattr:100 recv [x=320,y=240]\n      push: 'imageattrs',\n      reg: new RegExp(\n        // a=imageattr:97\n        '^imageattr:(\\\\d+|\\\\*)' +\n        // send [x=800,y=640,sar=1.1,q=0.6] [x=480,y=320]\n        '[\\\\s\\\\t]+(send|recv)[\\\\s\\\\t]+(\\\\*|\\\\[\\\\S+\\\\](?:[\\\\s\\\\t]+\\\\[\\\\S+\\\\])*)' +\n        // recv [x=330,y=250]\n        '(?:[\\\\s\\\\t]+(recv|send)[\\\\s\\\\t]+(\\\\*|\\\\[\\\\S+\\\\](?:[\\\\s\\\\t]+\\\\[\\\\S+\\\\])*))?'\n      ),\n      names: ['pt', 'dir1', 'attrs1', 'dir2', 'attrs2'],\n      format: function (o) {\n        return 'imageattr:%s %s %s' + (o.dir2 ? ' %s %s' : '');\n      }\n    },\n    {\n      // a=simulcast:send 1,2,3;~4,~5 recv 6;~7,~8\n      // a=simulcast:recv 1;4,5 send 6;7\n      name: 'simulcast',\n      reg: new RegExp(\n        // a=simulcast:\n        '^simulcast:' +\n        // send 1,2,3;~4,~5\n        '(send|recv) ([a-zA-Z0-9\\\\-_~;,]+)' +\n        // space + recv 6;~7,~8\n        '(?:\\\\s?(send|recv) ([a-zA-Z0-9\\\\-_~;,]+))?' +\n        // end\n        '$'\n      ),\n      names: ['dir1', 'list1', 'dir2', 'list2'],\n      format: function (o) {\n        return 'simulcast:%s %s' + (o.dir2 ? ' %s %s' : '');\n      }\n    },\n    {\n      // old simulcast draft 03 (implemented by Firefox)\n      //   https://tools.ietf.org/html/draft-ietf-mmusic-sdp-simulcast-03\n      // a=simulcast: recv pt=97;98 send pt=97\n      // a=simulcast: send rid=5;6;7 paused=6,7\n      name: 'simulcast_03',\n      reg: /^simulcast:[\\s\\t]+([\\S+\\s\\t]+)$/,\n      names: ['value'],\n      format: 'simulcast: %s'\n    },\n    {\n      // a=framerate:25\n      // a=framerate:29.97\n      name: 'framerate',\n      reg: /^framerate:(\\d+(?:$|\\.\\d+))/,\n      format: 'framerate:%s'\n    },\n    {\n      // RFC4570\n      // a=source-filter: incl IN IP4 239.5.2.31 10.1.15.5\n      name: 'sourceFilter',\n      reg: /^source-filter: *(excl|incl) (\\S*) (IP4|IP6|\\*) (\\S*) (.*)/,\n      names: ['filterMode', 'netType', 'addressTypes', 'destAddress', 'srcList'],\n      format: 'source-filter: %s %s %s %s %s'\n    },\n    {\n      // a=bundle-only\n      name: 'bundleOnly',\n      reg: /^(bundle-only)/\n    },\n    {\n      // a=label:1\n      name: 'label',\n      reg: /^label:(.+)/,\n      format: 'label:%s'\n    },\n    {\n      // RFC version 26 for SCTP over DTLS\n      // https://tools.ietf.org/html/draft-ietf-mmusic-sctp-sdp-26#section-5\n      name: 'sctpPort',\n      reg: /^sctp-port:(\\d+)$/,\n      format: 'sctp-port:%s'\n    },\n    {\n      // RFC version 26 for SCTP over DTLS\n      // https://tools.ietf.org/html/draft-ietf-mmusic-sctp-sdp-26#section-6\n      name: 'maxMessageSize',\n      reg: /^max-message-size:(\\d+)$/,\n      format: 'max-message-size:%s'\n    },\n    {\n      // RFC7273\n      // a=ts-refclk:ptp=IEEE1588-2008:39-A7-94-FF-FE-07-CB-D0:37\n      push:'tsRefClocks',\n      reg: /^ts-refclk:([^\\s=]*)(?:=(\\S*))?/,\n      names: ['clksrc', 'clksrcExt'],\n      format: function (o) {\n        return 'ts-refclk:%s' + (o.clksrcExt != null ? '=%s' : '');\n      }\n    },\n    {\n      // RFC7273\n      // a=mediaclk:direct=963214424\n      name:'mediaClk',\n      reg: /^mediaclk:(?:id=(\\S*))? *([^\\s=]*)(?:=(\\S*))?(?: *rate=(\\d+)\\/(\\d+))?/,\n      names: ['id', 'mediaClockName', 'mediaClockValue', 'rateNumerator', 'rateDenominator'],\n      format: function (o) {\n        var str = 'mediaclk:';\n        str += (o.id != null ? 'id=%s %s' : '%v%s');\n        str += (o.mediaClockValue != null ? '=%s' : '');\n        str += (o.rateNumerator != null ? ' rate=%s' : '');\n        str += (o.rateDenominator != null ? '/%s' : '');\n        return str;\n      }\n    },\n    {\n      // a=keywds:keywords\n      name: 'keywords',\n      reg: /^keywds:(.+)$/,\n      format: 'keywds:%s'\n    },\n    {\n      // a=content:main\n      name: 'content',\n      reg: /^content:(.+)/,\n      format: 'content:%s'\n    },\n    // BFCP https://tools.ietf.org/html/rfc4583\n    {\n      // a=floorctrl:c-s\n      name: 'bfcpFloorCtrl',\n      reg: /^floorctrl:(c-only|s-only|c-s)/,\n      format: 'floorctrl:%s'\n    },\n    {\n      // a=confid:1\n      name: 'bfcpConfId',\n      reg: /^confid:(\\d+)/,\n      format: 'confid:%s'\n    },\n    {\n      // a=userid:1\n      name: 'bfcpUserId',\n      reg: /^userid:(\\d+)/,\n      format: 'userid:%s'\n    },\n    {\n      // a=floorid:1\n      name: 'bfcpFloorId',\n      reg: /^floorid:(.+) (?:m-stream|mstrm):(.+)/,\n      names: ['id', 'mStream'],\n      format: 'floorid:%s mstrm:%s'\n    },\n    {\n      // any a= that we don't understand is kept verbatim on media.invalid\n      push: 'invalid',\n      names: ['value']\n    }\n  ]\n};\n\n// set sensible defaults to avoid polluting the grammar with boring details\nObject.keys(grammar).forEach(function (key) {\n  var objs = grammar[key];\n  objs.forEach(function (obj) {\n    if (!obj.reg) {\n      obj.reg = /(.*)/;\n    }\n    if (!obj.format) {\n      obj.format = '%s';\n    }\n  });\n});\n", "var toIntIfInt = function (v) {\n  return String(Number(v)) === v ? Number(v) : v;\n};\n\nvar attachProperties = function (match, location, names, rawName) {\n  if (rawName && !names) {\n    location[rawName] = toIntIfInt(match[1]);\n  }\n  else {\n    for (var i = 0; i < names.length; i += 1) {\n      if (match[i+1] != null) {\n        location[names[i]] = toIntIfInt(match[i+1]);\n      }\n    }\n  }\n};\n\nvar parseReg = function (obj, location, content) {\n  var needsBlank = obj.name && obj.names;\n  if (obj.push && !location[obj.push]) {\n    location[obj.push] = [];\n  }\n  else if (needsBlank && !location[obj.name]) {\n    location[obj.name] = {};\n  }\n  var keyLocation = obj.push ?\n    {} :  // blank object that will be pushed\n    needsBlank ? location[obj.name] : location; // otherwise, named location or root\n\n  attachProperties(content.match(obj.reg), keyLocation, obj.names, obj.name);\n\n  if (obj.push) {\n    location[obj.push].push(keyLocation);\n  }\n};\n\nvar grammar = require('./grammar');\nvar validLine = RegExp.prototype.test.bind(/^([a-z])=(.*)/);\n\nexports.parse = function (sdp) {\n  var session = {}\n    , media = []\n    , location = session; // points at where properties go under (one of the above)\n\n  // parse lines we understand\n  sdp.split(/(\\r\\n|\\r|\\n)/).filter(validLine).forEach(function (l) {\n    var type = l[0];\n    var content = l.slice(2);\n    if (type === 'm') {\n      media.push({rtp: [], fmtp: []});\n      location = media[media.length-1]; // point at latest media line\n    }\n\n    for (var j = 0; j < (grammar[type] || []).length; j += 1) {\n      var obj = grammar[type][j];\n      if (obj.reg.test(content)) {\n        return parseReg(obj, location, content);\n      }\n    }\n  });\n\n  session.media = media; // link it up\n  return session;\n};\n\nvar paramReducer = function (acc, expr) {\n  var s = expr.split(/=(.+)/, 2);\n  if (s.length === 2) {\n    acc[s[0]] = toIntIfInt(s[1]);\n  } else if (s.length === 1 && expr.length > 1) {\n    acc[s[0]] = undefined;\n  }\n  return acc;\n};\n\nexports.parseParams = function (str) {\n  return str.split(/;\\s?/).reduce(paramReducer, {});\n};\n\n// For backward compatibility - alias will be removed in 3.0.0\nexports.parseFmtpConfig = exports.parseParams;\n\nexports.parsePayloads = function (str) {\n  return str.toString().split(' ').map(Number);\n};\n\nexports.parseRemoteCandidates = function (str) {\n  var candidates = [];\n  var parts = str.split(' ').map(toIntIfInt);\n  for (var i = 0; i < parts.length; i += 3) {\n    candidates.push({\n      component: parts[i],\n      ip: parts[i + 1],\n      port: parts[i + 2]\n    });\n  }\n  return candidates;\n};\n\nexports.parseImageAttributes = function (str) {\n  return str.split(' ').map(function (item) {\n    return item.substring(1, item.length-1).split(',').reduce(paramReducer, {});\n  });\n};\n\nexports.parseSimulcastStreamList = function (str) {\n  return str.split(';').map(function (stream) {\n    return stream.split(',').map(function (format) {\n      var scid, paused = false;\n\n      if (format[0] !== '~') {\n        scid = toIntIfInt(format);\n      } else {\n        scid = toIntIfInt(format.substring(1, format.length));\n        paused = true;\n      }\n\n      return {\n        scid: scid,\n        paused: paused\n      };\n    });\n  });\n};\n", "var grammar = require('./grammar');\n\n// customized util.format - discards excess arguments and can void middle ones\nvar formatRegExp = /%[sdv%]/g;\nvar format = function (formatStr) {\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  return formatStr.replace(formatRegExp, function (x) {\n    if (i >= len) {\n      return x; // missing argument\n    }\n    var arg = args[i];\n    i += 1;\n    switch (x) {\n    case '%%':\n      return '%';\n    case '%s':\n      return String(arg);\n    case '%d':\n      return Number(arg);\n    case '%v':\n      return '';\n    }\n  });\n  // NB: we discard excess arguments - they are typically undefined from makeLine\n};\n\nvar makeLine = function (type, obj, location) {\n  var str = obj.format instanceof Function ?\n    (obj.format(obj.push ? location : location[obj.name])) :\n    obj.format;\n\n  var args = [type + '=' + str];\n  if (obj.names) {\n    for (var i = 0; i < obj.names.length; i += 1) {\n      var n = obj.names[i];\n      if (obj.name) {\n        args.push(location[obj.name][n]);\n      }\n      else { // for mLine and push attributes\n        args.push(location[obj.names[i]]);\n      }\n    }\n  }\n  else {\n    args.push(location[obj.name]);\n  }\n  return format.apply(null, args);\n};\n\n// RFC specified order\n// TODO: extend this with all the rest\nvar defaultOuterOrder = [\n  'v', 'o', 's', 'i',\n  'u', 'e', 'p', 'c',\n  'b', 't', 'r', 'z', 'a'\n];\nvar defaultInnerOrder = ['i', 'c', 'b', 'a'];\n\n\nmodule.exports = function (session, opts) {\n  opts = opts || {};\n  // ensure certain properties exist\n  if (session.version == null) {\n    session.version = 0; // 'v=0' must be there (only defined version atm)\n  }\n  if (session.name == null) {\n    session.name = ' '; // 's= ' must be there if no meaningful name set\n  }\n  session.media.forEach(function (mLine) {\n    if (mLine.payloads == null) {\n      mLine.payloads = '';\n    }\n  });\n\n  var outerOrder = opts.outerOrder || defaultOuterOrder;\n  var innerOrder = opts.innerOrder || defaultInnerOrder;\n  var sdp = [];\n\n  // loop through outerOrder for matching properties on session\n  outerOrder.forEach(function (type) {\n    grammar[type].forEach(function (obj) {\n      if (obj.name in session && session[obj.name] != null) {\n        sdp.push(makeLine(type, obj, session));\n      }\n      else if (obj.push in session && session[obj.push] != null) {\n        session[obj.push].forEach(function (el) {\n          sdp.push(makeLine(type, obj, el));\n        });\n      }\n    });\n  });\n\n  // then for each media line, follow the innerOrder\n  session.media.forEach(function (mLine) {\n    sdp.push(makeLine('m', grammar.m[0], mLine));\n\n    innerOrder.forEach(function (type) {\n      grammar[type].forEach(function (obj) {\n        if (obj.name in mLine && mLine[obj.name] != null) {\n          sdp.push(makeLine(type, obj, mLine));\n        }\n        else if (obj.push in mLine && mLine[obj.push] != null) {\n          mLine[obj.push].forEach(function (el) {\n            sdp.push(makeLine(type, obj, el));\n          });\n        }\n      });\n    });\n  });\n\n  return sdp.join('\\r\\n') + '\\r\\n';\n};\n", "var parser = require('./parser');\nvar writer = require('./writer');\n\nexports.write = writer;\nexports.parse = parser.parse;\nexports.parseParams = parser.parseParams;\nexports.parseFmtpConfig = parser.parseFmtpConfig; // Alias of parseParams().\nexports.parsePayloads = parser.parsePayloads;\nexports.parseRemoteCandidates = parser.parseRemoteCandidates;\nexports.parseImageAttributes = parser.parseImageAttributes;\nexports.parseSimulcastStreamList = parser.parseSimulcastStreamList;\n", "import { createSignal } from '@pexip/signal';\n/**\n *  indicates wether the given close code in the error range\n *\n * @param WebSocket-internal error code\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent\n */\nexport const isWebSocketClosedWithError = (errorCode) => errorCode > 1000 && errorCode < 1017;\nexport const isOpen = (readyState) => readyState === WebSocket.OPEN;\nexport const isClosed = (readyState) => readyState === WebSocket.CLOSED;\nexport const isConnecting = (readyState) => readyState === WebSocket.CONNECTING;\n/**\n * Create a general signal with consistent scoped name\n *\n * @param name - Signal name\n * @param scope - The scope of the signal for better logging\n * @param variant - The variant of the signal @see Signal @defaultValue 'generic'\n */\nconst createSocketSignal = (name, scope = '', variant = 'generic') => createSignal({\n    name: `socket-manager/${scope ? `${scope}/` : ''}${name}`,\n    allowEmittingWithoutObserver: allowEmittingWithoutObserver(name),\n    variant,\n});\nconst allowEmittingWithoutObserver = (signal) => [\n    'onConnecting',\n    'onConnected',\n    'onReconnecting',\n    'onReconnected',\n    'onDisconnected',\n    'onError',\n    'onMessage',\n].includes(signal);\nconst REQUIRED_SOCKET_SIGNAL_KEYS = [\n    'onConnecting',\n    'onConnected',\n    'onReconnecting',\n    'onReconnected',\n    'onDisconnected',\n    'onError',\n    'onMessage',\n];\n/**\n * Create and return all required and optional (if specified with `more`),\n * signals for call to work\n *\n * @param scope - any scope prefix for the generated signal name, @see Signal\n * @param more - Keys from `SocketSignalsOptional`, @see SocketSignalsOptional\n *\n * The following signals created by default\n * - 'onRemoteStream',\n *\n * @see REQUIRED_SOCKET_SIGNAL_KEYS\n */\nexport const createSocketSignals = (scope = '') => {\n    return REQUIRED_SOCKET_SIGNAL_KEYS.reduce((signals, key) => ({\n        ...signals,\n        [key]: createSocketSignal(key, scope),\n    }), {});\n};\n", "/**\n *  Status Codes for Websocket close\n *\n *  @see {@link https://datatracker.ietf.org/doc/html/rfc6455#section-7.4.1|RFC 6455}\n */\nexport var SocketCloseEventCode;\n(function (SocketCloseEventCode) {\n    SocketCloseEventCode[SocketCloseEventCode[\"NormalClosure\"] = 1000] = \"NormalClosure\";\n    SocketCloseEventCode[SocketCloseEventCode[\"GoingAway\"] = 1001] = \"GoingAway\";\n    SocketCloseEventCode[SocketCloseEventCode[\"AbnormalClosure\"] = 1006] = \"AbnormalClosure\";\n    SocketCloseEventCode[SocketCloseEventCode[\"Reconnect\"] = 4000] = \"Reconnect\";\n    SocketCloseEventCode[SocketCloseEventCode[\"Finalize\"] = 4999] = \"Finalize\";\n})(SocketCloseEventCode || (SocketCloseEventCode = {}));\n", "export const MAX_RECONNECT_ATTEMPTS = 8;\nexport const BACKOFF_BASE_SETTINGS = { min: 100, max: 30000, jitter: 0.2 };\n", "export var LogLevels;\n(function (LogLevels) {\n    LogLevels[LogLevels[\"trace\"] = 10] = \"trace\";\n    LogLevels[LogLevels[\"debug\"] = 20] = \"debug\";\n    LogLevels[LogLevels[\"info\"] = 30] = \"info\";\n    LogLevels[LogLevels[\"warn\"] = 40] = \"warn\";\n    LogLevels[LogLevels[\"error\"] = 50] = \"error\";\n    LogLevels[LogLevels[\"fatal\"] = 60] = \"fatal\";\n    // eslint-disable-next-line @typescript-eslint/prefer-literal-enum-member -- needs infinity\n    LogLevels[LogLevels[\"silent\"] = Number.MAX_SAFE_INTEGER] = \"silent\";\n})(LogLevels || (LogLevels = {}));\n/**\n * Create a logger with console API, and map fatal to error, skipping trace\n * and silent, and there is no redaction\n */\nexport function createConsoleLogger() {\n    return Object.freeze({\n        /* eslint-disable no-console -- set logger to console */\n        fatal: (meta, message) => console.error(message, meta),\n        error: (meta, message) => console.error(message, meta),\n        warn: (meta, message) => console.warn(message, meta),\n        info: (meta, message) => console.info(message, meta),\n        debug: (meta, message) => console.debug(message, meta),\n        trace() { }, // Noop\n        silent() { }, // Noop\n        redact() { }, // Noop\n        /* eslint-enable no-console -- set logger to console */\n    });\n}\n", "import { createConsoleLogger } from './baseLogger';\nexport let logger = createConsoleLogger();\nexport const setLogger = (newLogger) => {\n    logger = newLogger;\n};\n", "import { v4 as uuid } from 'uuid';\nimport { Backoff } from '@pexip/utils';\nimport { BACKOFF_BASE_SETTINGS, MAX_RECONNECT_ATTEMPTS } from './constants';\nimport { logger } from './logger';\nimport { SocketCloseEventCode } from './types';\nimport { isClosed, isConnecting, isOpen, isWebSocketClosedWithError, } from './utils';\nexport const createSocketManager = (signals, maxReconnectAttempts = MAX_RECONNECT_ATTEMPTS) => {\n    let ws;\n    let reconnectTimmer;\n    let reconnectAttempt = 0;\n    const _connect = (url, protocols, backoff = new Backoff(BACKOFF_BASE_SETTINGS)) => {\n        clearTimeout(reconnectTimmer);\n        if (isOpen(ws?.readyState)) {\n            logger.warn('Connection already established.');\n            return;\n        }\n        ws = new window.WebSocket(url, protocols);\n        window.pexDebug = { ...window.pexDebug, ws };\n        if (reconnectAttempt === 0) {\n            signals.onConnecting.emit();\n        }\n        else {\n            signals.onReconnecting.emit();\n        }\n        ws.onopen = event => {\n            logger.info({ event }, 'Connection opened');\n            if (reconnectAttempt === 0) {\n                signals.onConnected.emit();\n            }\n            else {\n                signals.onReconnected.emit();\n                reconnectAttempt = 0;\n                backoff.reset();\n            }\n        };\n        ws.onmessage = (msg) => {\n            try {\n                const event = JSON.parse(msg.data);\n                if ('token' in event && typeof event.token === 'string') {\n                    logger.redact(event.token);\n                }\n                logger[event.type === 'error' ? 'error' : 'debug']({ event }, `Message received with type ${event.type}`);\n                signals.onMessage.emit(event);\n            }\n            catch (error) {\n                logger.error({ error }, 'Parsing message failed');\n            }\n        };\n        ws.onerror = error => {\n            logger.error({ error }, 'Connection error');\n            signals.onError.emit();\n        };\n        ws.onclose = event => {\n            if (isWebSocketClosedWithError(event.code) &&\n                reconnectAttempt < maxReconnectAttempts) {\n                logger.error({ event }, 'Connection closed with error, reconnecting');\n                reconnectAttempt += 1;\n                reconnectTimmer = window.setTimeout(() => {\n                    _connect(url, protocols, backoff);\n                }, backoff.duration());\n            }\n            else {\n                logger.error({ event }, 'Connection closed');\n                signals.onDisconnected.emit(event);\n            }\n        };\n    };\n    const connect = async ({ abortController, url, }) => {\n        return new Promise((resolve, reject) => {\n            if (abortController?.signal?.aborted) {\n                return reject(abortController?.signal.reason);\n            }\n            const handleAbort = () => {\n                if (isConnecting(ws?.readyState)) {\n                    disconnect(SocketCloseEventCode.NormalClosure);\n                }\n                reject(abortController?.signal.reason);\n            };\n            abortController?.signal.addEventListener('abort', handleAbort, {\n                once: true,\n            });\n            const withAbortController = (fn) => (args) => {\n                abortController?.signal.removeEventListener('abort', handleAbort);\n                fn(args);\n            };\n            signals.onConnected.addOnce(withAbortController(resolve));\n            signals.onError.addOnce(withAbortController(reject));\n            _connect(url);\n        });\n    };\n    const disconnect = (code, reason) => {\n        ws?.close(code, reason);\n    };\n    const send = (data) => {\n        if (!data.id) {\n            data.id = uuid();\n        }\n        if ('token' in data && typeof data.token === 'string') {\n            logger.redact(data.token);\n        }\n        if (isClosed(ws?.readyState)) {\n            logger.warn({ data }, 'Websocket closed. Ignoring sending data');\n            return;\n        }\n        ws?.send(JSON.stringify(data));\n        logger.debug({ data }, `Message sent with type ${data.type}`);\n        return data.id;\n    };\n    return {\n        connect,\n        disconnect,\n        send,\n        get readyState() {\n            return ws?.readyState;\n        },\n        get bufferedAmount() {\n            return ws?.bufferedAmount;\n        },\n    };\n};\n", "export var LogLevels;\n(function (LogLevels) {\n    LogLevels[LogLevels[\"trace\"] = 10] = \"trace\";\n    LogLevels[LogLevels[\"debug\"] = 20] = \"debug\";\n    LogLevels[LogLevels[\"info\"] = 30] = \"info\";\n    LogLevels[LogLevels[\"warn\"] = 40] = \"warn\";\n    LogLevels[LogLevels[\"error\"] = 50] = \"error\";\n    LogLevels[LogLevels[\"fatal\"] = 60] = \"fatal\";\n    // eslint-disable-next-line @typescript-eslint/prefer-literal-enum-member -- needs infinity\n    LogLevels[LogLevels[\"silent\"] = Number.MAX_SAFE_INTEGER] = \"silent\";\n})(LogLevels || (LogLevels = {}));\n/**\n * Create a logger with console API, and map fatal to error, skipping trace\n * and silent, and there is no redaction\n */\nexport function createConsoleLogger() {\n    return Object.freeze({\n        /* eslint-disable no-console -- set logger to console */\n        fatal: (meta, message) => console.error(message, meta),\n        error: (meta, message) => console.error(message, meta),\n        warn: (meta, message) => console.warn(message, meta),\n        info: (meta, message) => console.info(message, meta),\n        debug: (meta, message) => console.debug(message, meta),\n        trace() { }, // Noop\n        silent() { }, // Noop\n        redact() { }, // Noop\n        /* eslint-enable no-console -- set logger to console */\n    });\n}\n", "// eslint-disable-next-line import/no-relative-packages -- false positive\nimport { createConsoleLogger } from './baseLogger.js';\nexport let logger = createConsoleLogger();\nexport const setLogger = (newLogger) => {\n    logger = newLogger;\n};\n", "export var ContentType;\n(function (ContentType) {\n    ContentType[\"JSON\"] = \"application/json\";\n    ContentType[\"FORM_URLENCODED\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport var HEADER;\n(function (HEADER) {\n    HEADER[\"ACCEPT\"] = \"Accept\";\n    HEADER[\"CONTENT_TYPE\"] = \"Content-Type\";\n    HEADER[\"AUTHORIZATION\"] = \"Authorization\";\n})(HEADER || (HEADER = {}));\nexport { setLogger } from './logger.js';\n", "import { logger } from './logger.js';\nimport { ContentType, HEADER } from './utils.js';\nexport class BadRequestError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = 'BadRequestError';\n    }\n}\nexport class UnauthorizedError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = 'UnauthorizedError';\n    }\n}\nexport class ForbiddenError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = 'ForbiddenError';\n    }\n}\nexport class NotFoundError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = 'NotFoundError';\n    }\n}\nexport class GoneError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = 'GoneError';\n    }\n}\nexport class ServiceUnavailableError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = 'ServiceUnavailableError';\n    }\n}\nexport class InternalServerError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = 'InternalServerError';\n    }\n}\nexport class NotModifiedError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = 'NotModifiedError';\n    }\n}\nexport class UnknownError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = 'UnknownError';\n    }\n}\n/**\n * Creates MEE api wrapper for the given `apiAddress` and `token`\n *\n * @privateRemarks  This will be generated from OpenApi schema\n *\n * @returns Api wrapper with all the main CRUD fns\n */\nexport const createApi = () => {\n    const getPath = (apiAddress) => (path) => `${apiAddress}/v1/meetings${path}`;\n    const fetcher = async (...args) => {\n        const [path, init] = args;\n        const printableUrl = typeof path === 'string' ? path : '';\n        logger.debug(`Fetching ${printableUrl}`);\n        const res = await fetch(path, init);\n        const data = (await res.json());\n        if ('token' in data && typeof data.token === 'string') {\n            logger.redact(data.token);\n        }\n        if ('participant_secret' in data &&\n            typeof data.participant_secret === 'string') {\n            logger.redact(data.participant_secret);\n        }\n        logger.debug({ res, data }, `Data for ${printableUrl}`);\n        return { status: res.status, data };\n    };\n    const token = async ({ abortSignal, apiAddress, token, headers, }) => {\n        const { data, status } = await fetcher(`${apiAddress}/oauth/token`, {\n            method: 'POST',\n            body: new URLSearchParams({\n                grant_type: 'client_credentials',\n                client_assertion_type: 'urn:ietf:params:oauth:client-assertion-type:jwt-bearer',\n                client_assertion: token,\n            }),\n            signal: abortSignal,\n            headers: {\n                [HEADER.CONTENT_TYPE]: ContentType.FORM_URLENCODED,\n                [HEADER.ACCEPT]: ContentType.JSON,\n                ...headers,\n            },\n        });\n        switch (status) {\n            case 200:\n                return { data, status };\n            case 400:\n                throw new BadRequestError(data.reason);\n            case 500:\n                throw new InternalServerError(data.reason);\n            default:\n                throw new UnknownError('');\n        }\n    };\n    const create = async ({ abortSignal, apiAddress, accessToken, headers, }) => {\n        const { data, status } = await fetcher(getPath(apiAddress)(''), {\n            method: 'POST',\n            body: JSON.stringify({}),\n            signal: abortSignal,\n            headers: {\n                [HEADER.CONTENT_TYPE]: ContentType.JSON,\n                ...(accessToken && { [HEADER.AUTHORIZATION]: accessToken }),\n                ...headers,\n            },\n        });\n        switch (status) {\n            case 200:\n                return { data, status };\n            case 400:\n                throw new BadRequestError(data.reason);\n            case 401:\n                throw new UnauthorizedError(data.reason);\n            case 403:\n                throw new ForbiddenError(data.reason);\n            case 404:\n                throw new NotFoundError(data.reason);\n            case 500:\n                throw new InternalServerError(data.reason);\n            default:\n                throw new UnknownError('');\n        }\n    };\n    const participants = async ({ abortSignal, meetingId, apiAddress, accessToken, headers, }) => {\n        const { data, status } = await fetcher(getPath(apiAddress)(`/${meetingId}/participants`), {\n            method: 'POST',\n            body: JSON.stringify({}),\n            signal: abortSignal,\n            headers: {\n                [HEADER.CONTENT_TYPE]: ContentType.JSON,\n                ...(accessToken && { [HEADER.AUTHORIZATION]: accessToken }),\n                ...headers,\n            },\n        });\n        switch (status) {\n            case 200:\n                return { data, status };\n            case 400:\n                throw new BadRequestError(data.reason);\n            case 401:\n                throw new UnauthorizedError(data.reason);\n            case 403:\n                throw new ForbiddenError(data.reason);\n            case 404:\n                throw new NotFoundError(data.reason);\n            case 500:\n                throw new InternalServerError(data.reason);\n            default:\n                throw new UnknownError('');\n        }\n    };\n    const join = async ({ abortSignal, apiAddress, meetingId, participantId, participantSecret, headers, }) => {\n        const { data, status } = await fetcher(getPath(apiAddress)(`/${meetingId}/join`), {\n            method: 'POST',\n            body: JSON.stringify({\n                participant_id: participantId,\n                participant_secret: participantSecret,\n            }),\n            signal: abortSignal,\n            headers: {\n                [HEADER.CONTENT_TYPE]: ContentType.JSON,\n                ...headers,\n            },\n        });\n        switch (status) {\n            case 200:\n                return { data, status };\n            case 400:\n                throw new BadRequestError(data.reason);\n            case 404:\n                throw new NotFoundError(data.reason);\n            case 410:\n                throw new GoneError(data.reason);\n            case 500:\n                throw new InternalServerError(data.reason);\n            case 503:\n                throw new ServiceUnavailableError(data.reason);\n            default:\n                throw new UnknownError('');\n        }\n    };\n    const terminate = async ({ abortSignal, apiAddress, meetingId, accessToken, headers, }) => {\n        const { data, status } = await fetcher(getPath(apiAddress)(`/${meetingId}`), {\n            method: 'DELETE',\n            signal: abortSignal,\n            headers: {\n                ...(accessToken && { [HEADER.AUTHORIZATION]: accessToken }),\n                ...headers,\n            },\n        });\n        switch (status) {\n            case 200:\n                return { data, status };\n            case 304:\n                throw new NotFoundError('');\n            case 401:\n                throw new UnauthorizedError(data.reason);\n            case 403:\n                throw new ForbiddenError(data.reason);\n            case 404:\n                throw new NotFoundError(data.reason);\n            default:\n                throw new UnknownError('');\n        }\n    };\n    return {\n        token,\n        create,\n        join,\n        participants,\n        terminate,\n    };\n};\nconst ACCESS_EXP_BUFFER = 60000;\nexport const withToken = (createAndSignJWT, apiAddress) => (api) => {\n    let token;\n    let tokenReceivedDate;\n    const isTokenValid = () => Boolean(tokenReceivedDate &&\n        token?.expires_in &&\n        tokenReceivedDate +\n            token.expires_in * 1000 -\n            ACCESS_EXP_BUFFER >\n            Date.now());\n    const getAccessToken = () => `${token?.token_type} ${token?.access_token}`;\n    const getToken = async () => {\n        if (isTokenValid()) {\n            return getAccessToken();\n        }\n        const res = await api.token({\n            token: createAndSignJWT(),\n            apiAddress,\n        });\n        token = res.data;\n        tokenReceivedDate = Date.now();\n        return getAccessToken();\n    };\n    return {\n        create: async ({ headers } = {}) => api.create({\n            accessToken: await getToken(),\n            apiAddress,\n            ...(headers && { headers }),\n        }),\n        participants: async ({ meetingId, headers, }) => api.participants({\n            meetingId,\n            accessToken: await getToken(),\n            apiAddress,\n            ...(headers && { headers }),\n        }),\n    };\n};\n", "export var RecoveryTimeout;\n(function (RecoveryTimeout) {\n    RecoveryTimeout[RecoveryTimeout[\"ConnectionState\"] = 5000] = \"ConnectionState\";\n    RecoveryTimeout[RecoveryTimeout[\"IceConnectionState\"] = 2000] = \"IceConnectionState\";\n    RecoveryTimeout[RecoveryTimeout[\"Negotiation\"] = 200] = \"Negotiation\";\n})(RecoveryTimeout || (RecoveryTimeout = {}));\n", "export var LogLevels;\n(function (LogLevels) {\n    LogLevels[LogLevels[\"trace\"] = 10] = \"trace\";\n    LogLevels[LogLevels[\"debug\"] = 20] = \"debug\";\n    LogLevels[LogLevels[\"info\"] = 30] = \"info\";\n    LogLevels[LogLevels[\"warn\"] = 40] = \"warn\";\n    LogLevels[LogLevels[\"error\"] = 50] = \"error\";\n    LogLevels[LogLevels[\"fatal\"] = 60] = \"fatal\";\n    // eslint-disable-next-line @typescript-eslint/prefer-literal-enum-member -- needs infinity\n    LogLevels[LogLevels[\"silent\"] = Number.MAX_SAFE_INTEGER] = \"silent\";\n})(LogLevels || (LogLevels = {}));\n/**\n * Create a logger with console API, and map fatal to error, skipping trace\n * and silent, and there is no redaction\n */\nexport function createConsoleLogger() {\n    return Object.freeze({\n        /* eslint-disable no-console -- set logger to console */\n        fatal: (meta, message) => console.error(message, meta),\n        error: (meta, message) => console.error(message, meta),\n        warn: (meta, message) => console.warn(message, meta),\n        info: (meta, message) => console.info(message, meta),\n        debug: (meta, message) => console.debug(message, meta),\n        trace() { }, // Noop\n        silent() { }, // Noop\n        redact() { }, // Noop\n        /* eslint-enable no-console -- set logger to console */\n    });\n}\n", "import { createConsoleLogger } from './baseLogger';\nexport let logger = createConsoleLogger();\nexport function setLogger(newLogger) {\n    logger = newLogger;\n}\n", "/**\n * The type to describe the media type of the Transceiver\n */\nexport const TRANSCEIVER_MEDIA_TYPES = ['audio', 'video'];\nexport const CAN_SET_STREAMS = typeof RTCRtpSender !== 'undefined' &&\n    'setStreams' in RTCRtpSender.prototype;\n", "import { createSignal } from '@pexip/signal';\nimport { logger } from './logger';\nimport { CAN_SET_STREAMS } from './constants';\n/**\n * create a logger with reference attached\n *\n * @param getRefs - A function to the references for logging\n */\nexport const createRefsLog = (getRefs) => {\n    const info = (obj) => {\n        const refs = getRefs();\n        return { ...refs, ...obj };\n    };\n    return {\n        debug: (msg, obj) => logger.debug(info(obj), msg),\n        info: (msg, obj) => logger.info(info(obj), msg),\n        error: (msg, obj) => logger.error(info(obj), msg),\n        warn: (msg, obj) => logger.warn(info(obj), msg),\n    };\n};\n/**\n * Get the states from RTCPeerConnection\n *\n * @param pc - the peer connection to get the states\n */\nexport const getPeerConnectionStates = (pc) => ({\n    get connectionState() {\n        return pc.connectionState;\n    },\n    get iceConnectionState() {\n        return pc.iceConnectionState;\n    },\n    get iceGatheringState() {\n        return pc.iceGatheringState;\n    },\n    get signalingState() {\n        return pc.signalingState;\n    },\n});\n/**\n * Get common states and props from PeerConnection\n *\n * @param pc - The peer connection to get the info\n */\nexport const getStatesAndProps = (pc) => {\n    return {\n        ...getPeerConnectionStates(pc),\n        offerOptions: pc.offerOptions,\n        answerOptions: pc.answerOptions,\n    };\n};\nexport const logReferences = (refs) => ({\n    module: refs.module,\n    references: refs,\n});\nexport const createGetRefs = (pc) => () => ({\n    ...logReferences(pc.references),\n    ...getStatesAndProps(pc),\n});\n/**\n * Compare the provided 2 streams to check if they are the same\n * @param stream1 - the stream to compare\n * @param stream2 - the stream to compare\n */\nexport const isSameStream = (stream1, stream2) => {\n    return stream1 && stream2 && stream1.id === stream2.id;\n};\n/**\n * JSONify RTCPeerConnectionIceErrorEvent so more info can be captured by logger\n */\nconst jsonifyIceErrorEvent = (event) => {\n    // Firefox does not support RTCPeerConnectionIceErrorEvent\n    // https://bugzil.la/1561441\n    if ('RTCPeerConnectionIceErrorEvent' in window &&\n        event instanceof RTCPeerConnectionIceErrorEvent) {\n        return Object.defineProperty(event, 'toJSON', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: () => ({\n                address: event.address,\n                url: event.url,\n                port: event.port,\n                errorCode: event.errorCode,\n                errorText: event.errorText,\n            }),\n        });\n    }\n    return event;\n};\n/**\n * Wire the peer connection event with the pre-defined handler and signal\n * accordingly\n *\n * @param wireOptions - Wire event params\n * + `key` - event key\n * + `pc` - peer connection\n * + `signal` - the signal to wire\n */\nexport const wirePeerConnectionEventHandler = ({ key, pc, signal, }) => {\n    const log = createRefsLog(createGetRefs(pc));\n    switch (key) {\n        case 'onConnectionStateChange':\n            pc.onConnectionStateChange = (event) => {\n                log.info('onConnectionStateChange emitted', {\n                    event,\n                });\n                signal.emit(pc.connectionState);\n            };\n            break;\n        case 'onDataChannel':\n            pc.onDataChannel = (event) => {\n                log.info('onDataChannel emitted', {\n                    event,\n                });\n                signal.emit(event.channel);\n            };\n            break;\n        case 'onIceCandidate':\n            pc.onIceCandidate = (event) => {\n                log.info('onIceCandidate emitted', {\n                    event,\n                });\n                signal.emit(event.candidate);\n            };\n            break;\n        case 'onIceCandidateError':\n            pc.onIceCandidateError = (event) => {\n                log.info('onIceCandidateError emitted', {\n                    event: jsonifyIceErrorEvent(event),\n                });\n                signal.emit(event);\n            };\n            break;\n        case 'onIceConnectionStateChange':\n            pc.onIceConnectionStateChange = (event) => {\n                log.info('onIceConnectionStateChange emitted', {\n                    event,\n                });\n                signal.emit(pc.iceConnectionState);\n            };\n            break;\n        case 'onIceGatheringStateChange':\n            pc.onIceGatheringStateChange = (event) => {\n                log.info('onIceGatheringStateChange emitted', {\n                    event,\n                });\n                signal.emit(pc.iceGatheringState);\n            };\n            break;\n        case 'onNegotiationNeeded':\n            pc.onNegotiationNeeded = () => {\n                log.info('onNegotiationNeeded emitted');\n                signal.emit();\n            };\n            break;\n        case 'onSignalingStateChange':\n            pc.onSignalingStateChange = (event) => {\n                log.info('onSignalingStateChange emitted', {\n                    event,\n                });\n                signal.emit(pc.signalingState);\n            };\n            break;\n        case 'onTrack':\n            pc.onTrack = (event) => {\n                log.info('onTrack emitted', {\n                    event,\n                });\n                signal.emit(event);\n            };\n            break;\n        case 'onRemoteStreams':\n            pc.onRemoteStreams = (config) => {\n                log.info('onRemoteStreams emitted', {\n                    config,\n                });\n                signal.emit(config);\n            };\n            break;\n        case 'onTransceiverChange':\n            pc.onTransceiverChange = () => {\n                log.info('onTransceiverChanged');\n                signal.emit();\n            };\n            break;\n        case 'onSecureCheckCode':\n            pc.onSecureCheckCode = (secureCheckCode) => {\n                log.info('onSecureCheckCode emitted', { secureCheckCode });\n                signal.emit(secureCheckCode);\n            };\n            break;\n    }\n};\n/**\n * Wire the peer connection events with provided signals\n *\n * @param pc - peer connection\n * @param signals - the set of signals to wire\n */\nexport const wirePeerConnectionEvents = (pc, signals) => {\n    Object.keys(signals).forEach(eventKey => {\n        const signalKey = eventKey;\n        const signal = signals[signalKey];\n        if (signal) {\n            wirePeerConnectionEventHandler({\n                key: signalKey,\n                pc,\n                signal,\n            });\n        }\n    });\n};\n/**\n * Create a general signal with consistent scoped name\n *\n * @param name - Signal name\n * @param crucial - Signify if the signal is unmissable.\n */\nexport const createPCSignal = (name, crucial = true) => createSignal({\n    name: `call:peerConnection:${name}`,\n    allowEmittingWithoutObserver: !crucial,\n});\nexport const REQUIRED_SIGNAL_KEYS = [\n    'onOfferRequired',\n    'onReceiveAnswer',\n    'onReceiveOffer',\n    'onOffer',\n    'onOfferIgnored',\n    'onAnswer',\n    'onError',\n];\n/**\n * Create and return all required and optional (if specified with `more`),\n * signals for peer connection to work\n *\n * @param more - Keys from `PCOptionalsSignals`, @see PCOptionalsSignals\n * @param scope - any scope prefix for the generated signal name, @see Signal\n *\n * The following signals created by default\n *  'onOfferRequired',\n *  'onReceiveAnswer',\n *  'onReceiveOffer',\n *  'onOffer',\n *  'onAnswer',\n *  'onError',\n * @see REQUIRED_SIGNAL_KEYS\n */\nexport const createPCSignals = (more, scope = '') => {\n    const signalScope = scope && [scope, ':'].join('');\n    return [...REQUIRED_SIGNAL_KEYS, ...more].reduce((signals, key) => ({\n        ...signals,\n        [key]: createPCSignal(`${signalScope}${key}`),\n    }), {});\n};\n/**\n * Handle some core signals for the peer connection.\n *\n * @param peer - The peer connection\n *\n * @returns the signal subscriptions which are needed to be called when closing\n * the peer connection\n */\nexport const withSignals = (peer) => \n/**\n * Map signals\n *\n * @param signals - The provided signals to map to the PC events\n */\n({ onReceiveAnswer, onReceiveIceCandidate, onReceiveOffer, onOffer, onOfferIgnored, onAnswer, onError, onNegotiationNeeded = createPCSignal('onNegotiationNeeded'), onIceCandidateError = createPCSignal('onIceCandidateError'), ...pcEventSignals }) => {\n    // Wire PeerConnection events to signals\n    pcEventSignals &&\n        wirePeerConnectionEvents(peer, {\n            ...pcEventSignals,\n            onNegotiationNeeded,\n            onIceCandidateError,\n        });\n    // States for Perfect Negotiation\n    const props = {\n        receivingFirstOffer: true,\n        makingOffer: false,\n        ignoreOffer: false,\n    };\n    const log = createRefsLog(() => ({\n        ...createGetRefs(peer)(),\n        ...props,\n    }));\n    /**\n     * Log and emit Error\n     */\n    const emitError = (msg, context) => {\n        log.error(msg, { ...context, ...getPeerConnectionStates(peer) });\n        if (context?.error instanceof Error) {\n            onError.emit(context.error);\n        }\n    };\n    const emitLocalDescription = (sdp) => {\n        const localDescription = sdp ?? peer.pendingLocalDescription;\n        switch (localDescription?.type) {\n            case 'offer':\n                onOffer.emit(localDescription);\n                break;\n            case 'answer':\n                onAnswer.emit(localDescription);\n                break;\n            default:\n                log.error('Attempt to emit localDescription other than \"answer\" and \"offer\"', { localDescription });\n                throw new Error('Unknown SDP type');\n        }\n        peer.releaseLocalICECandidatesBuffer(false);\n    };\n    const signalSubscriptions = [\n        onNegotiationNeeded.add(async () => {\n            log.info('handle onNegotiationNeeded signal');\n            try {\n                props.makingOffer = true;\n                const offer = await peer.createOffer();\n                log.info('emit offer', { offer });\n                emitLocalDescription(offer);\n            }\n            catch (error) {\n                if (error instanceof Error) {\n                    if (error.message !== 'Ignore') {\n                        emitError('createOffer', { error });\n                    }\n                }\n            }\n            finally {\n                props.makingOffer = false;\n            }\n        }),\n        onIceCandidateError.add(error => {\n            // Sometimes the IceCandidateError could be just a noise, let's just log it instead\n            emitError('onIceCandidateError', {\n                event: error,\n            });\n        }),\n        onReceiveIceCandidate?.add(async (candidate) => {\n            log.info('handle onReceiveIceCandidate signal', { candidate });\n            try {\n                await peer.receiveIceCandidate(candidate);\n            }\n            catch (error) {\n                // Ignore receiving ICE error since we ignore the\n                // offer/answer as a polite peer, otherwise forward the error\n                if (!props.ignoreOffer) {\n                    emitError('receiveIceCandidate', { error, candidate });\n                }\n            }\n        }),\n        onReceiveOffer.add(async (offer) => {\n            try {\n                const offerCollisionDetected = props.makingOffer || peer.signalingState !== 'stable';\n                props.ignoreOffer = !peer.polite && offerCollisionDetected;\n                log.info('handle receiveOffer signal', {\n                    politePeer: peer.polite,\n                    offer,\n                    offerCollisionDetected,\n                    ignoreOffer: props.ignoreOffer,\n                });\n                if (props.ignoreOffer) {\n                    log.info('ignore offer', {\n                        politePeer: peer.polite,\n                        offer,\n                        offerCollisionDetected,\n                        ignoreOffer: props.ignoreOffer,\n                    });\n                    onOfferIgnored.emit();\n                    return;\n                }\n                peer.releaseLocalICECandidatesBuffer(true);\n                await peer.receiveOffer(offer);\n                const answer = await peer.createAnswer();\n                log.info('emit answer', { answer });\n                emitLocalDescription(answer);\n            }\n            catch (error) {\n                emitError('receiveOffer/createAnswer', { error, offer });\n            }\n            finally {\n                props.receivingFirstOffer = false;\n            }\n        }),\n        onReceiveAnswer.add(async (answer) => {\n            log.info('handle receiveAnswer signal', { answer });\n            props.receivingFirstOffer = false;\n            try {\n                await peer.receiveAnswer(answer);\n            }\n            catch (error) {\n                emitError('receiveAnswer', { error, answer });\n            }\n        }),\n    ].flatMap(a => (a ? [a] : []));\n    return signalSubscriptions;\n};\n/**\n *  workaround to allow echo cancellation in Chromium browsers, due to https://bugs.chromium.org/p/chromium/issues/detail?id=687574.\n *\n * based on https://dev.to/focusedlabs/echo-cancellation-with-web-audio-api-and-chromium-1f8m\n *  and https://gist.github.com/alexciarlillo/4b9f75516f93c10d7b39282d10cd17bc\n */\nexport const getCreateLoopbackConnectionFn = (rtcConnection = new RTCPeerConnection(), rtcLoopbackConnection = new RTCPeerConnection(), loopbackStream = new MediaStream()) => async (stream) => {\n    rtcConnection.onicecandidate = e => e.candidate &&\n        rtcLoopbackConnection.addIceCandidate(new RTCIceCandidate(e.candidate));\n    rtcLoopbackConnection.onicecandidate = e => e.candidate &&\n        rtcConnection.addIceCandidate(new RTCIceCandidate(e.candidate));\n    rtcLoopbackConnection.ontrack = e => {\n        if (e.streams[0]) {\n            return e.streams[0]\n                .getTracks()\n                .forEach(track => loopbackStream.addTrack(track));\n        }\n    };\n    stream.getTracks().forEach(function (track) {\n        rtcConnection.addTrack(track, stream);\n    });\n    const offer = await rtcConnection.createOffer();\n    await rtcConnection.setLocalDescription(offer);\n    await rtcLoopbackConnection.setRemoteDescription(offer);\n    const answer = await rtcLoopbackConnection.createAnswer();\n    await rtcLoopbackConnection.setLocalDescription(answer);\n    await rtcConnection.setRemoteDescription(answer);\n    return loopbackStream;\n};\nexport const isTransceiverMediaType = (mediaType) => mediaType === 'audio' || mediaType === 'video';\nexport const isMediaType = (t) => {\n    if (isTransceiverMediaType(t) || t === 'application') {\n        return true;\n    }\n    return false;\n};\nexport const assertTransceiverMediaType = (mediaType) => {\n    if (!isTransceiverMediaType(mediaType)) {\n        throw new Error(`Expected a media kind string, \"audio\" | \"video\" but got \"${mediaType}\"`);\n    }\n    return mediaType;\n};\nexport const resolveKindOrTrack = (kindOrTrack) => {\n    if (!('MediaStreamTrack' in window) ||\n        !(kindOrTrack instanceof MediaStreamTrack)) {\n        return {\n            kind: assertTransceiverMediaType(kindOrTrack),\n            track: undefined,\n        };\n    }\n    return {\n        track: kindOrTrack,\n        kind: assertTransceiverMediaType(kindOrTrack.kind),\n    };\n};\nconst isMediaStream = (t) => {\n    if (typeof t === 'object' && t !== null && t instanceof MediaStream) {\n        return true;\n    }\n    return false;\n};\nconst isMediaStreams = (t) => Array.isArray(t) && t.every(isMediaStream);\nconst isDataChannelObsolete = (dataChannel) => dataChannel.readyState === 'closing' || dataChannel.readyState === 'closed';\nconst createDataChannelConfig = (init) => {\n    const props = {\n        ...init,\n    };\n    const subscribeEvents = (dc) => {\n        init.eventListeners?.forEach(({ event, listener, options }) => {\n            // To make tsc happy\n            switch (event) {\n                case 'message':\n                    dc.addEventListener(event, listener, options);\n                    break;\n                default:\n                    dc.addEventListener(event, listener, options);\n                    break;\n            }\n        });\n        dc.addEventListener('close', () => {\n            init.eventListeners?.forEach(({ event, listener, options }) => {\n                // To make tsc happy\n                switch (event) {\n                    case 'message':\n                        dc.removeEventListener(event, listener, options);\n                        break;\n                    default:\n                        dc.removeEventListener(event, listener, options);\n                        break;\n                }\n            });\n        }, { once: true });\n    };\n    const isDirty = () => !props.dataChannel || isDataChannelObsolete(props.dataChannel);\n    return {\n        get dirty() {\n            return isDirty();\n        },\n        get options() {\n            return init;\n        },\n        get kind() {\n            return 'application';\n        },\n        get dataChannel() {\n            return props.dataChannel;\n        },\n        set dataChannel(dc) {\n            if (dc) {\n                subscribeEvents(dc);\n            }\n            props.dataChannel = dc;\n        },\n        syncDataChannel: peer => {\n            if (!isDirty()) {\n                return;\n            }\n            logger.debug({ init, props }, 'syncDataChannel');\n            const dc = peer.createDataChannel(init.label, init);\n            props.dataChannel = dc;\n            subscribeEvents(dc);\n        },\n        toString() {\n            return [\n                this.options.label,\n                `DataChannel${this.options.id !== undefined ? `(${this.options.id})` : ''}`,\n            ].join('-');\n        },\n    };\n};\nexport const isTransceiverObsolete = (transceiver) => {\n    return transceiver.mid === null && transceiver.currentDirection !== null;\n};\n/**\n * Compare 2 flat records (an object with primitive type) using Object.is comparator\n *\n * @remarks No deep comparison\n */\nexport const compareRecord = (record1, record2) => {\n    if (record1 === record2) {\n        return true;\n    }\n    if (!record1 || !record2) {\n        return false;\n    }\n    const keys = new Set([...Object.keys(record1), ...Object.keys(record2)]);\n    for (const key of keys) {\n        if (record1[key] !== record2[key]) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * Compare 2 Array and using the provided predicate to compare\n */\nexport const compareArray = (list1, list2, predicate) => {\n    if ((list1 === undefined && list2 !== undefined) ||\n        (list1 !== undefined && list2 === undefined)) {\n        return false;\n    }\n    const len = Math.max(list1?.length ?? 0, list2?.length ?? 0);\n    for (let i = 0; i < len; i++) {\n        const a = list1?.[i];\n        const b = list2?.[i];\n        if (!predicate(a, b)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * Merge two array and overwriting the old on with the new one in order\n */\nexport const merge = (oldParam, newParam) => {\n    const len = Math.max(oldParam.length, newParam.length);\n    const merged = [];\n    for (let i = 0; i < len; i++) {\n        const o = oldParam[i];\n        const n = newParam[i];\n        if (!n) {\n            return merged;\n        }\n        merged.push({ ...o, ...n });\n    }\n    return merged;\n};\nconst createTransceiverConfig = ({ kindOrTrack, content, direction, streams, sendEncodings, transceiver, allowAutoChangeOfDirection = true, relativeDirection = true, }, onTransceiverChanged) => {\n    const { track, kind } = resolveKindOrTrack(kindOrTrack);\n    const props = {\n        content: content ?? 'main',\n        track,\n        kind,\n        streams: streams ?? [],\n        direction: direction ?? 'sendrecv',\n        transceiver,\n        allowAutoChangeOfDirection,\n        relativeDirection,\n        sendEncodings,\n    };\n    const dirty = {\n        track: transceiver ? false : Boolean(track),\n        streams: transceiver ? false : Boolean(streams?.length),\n        sendParameters: transceiver ? false : Boolean(sendEncodings),\n        direction: allowAutoChangeOfDirection,\n        get dirty() {\n            return (this.track ||\n                this.streams ||\n                this.direction ||\n                this.sendParameters);\n        },\n    };\n    const proxy = new Proxy(props, {\n        // eslint-disable-next-line max-params --- from lib.dom.d\n        set(target, p, newValue, receiver) {\n            switch (p) {\n                case 'track': {\n                    if (newValue !== undefined && target[p] !== newValue) {\n                        Reflect.set(target, p, newValue, receiver);\n                        dirty[p] = true;\n                    }\n                    return true;\n                }\n                case 'streams': {\n                    if (newValue !== undefined && isMediaStreams(newValue)) {\n                        const setOld = new Set(target[p].map(s => s.id));\n                        const setNew = new Set(newValue.map(s => s.id));\n                        for (const old of setOld) {\n                            if (setNew.has(old)) {\n                                return true;\n                            }\n                        }\n                        target[p] = newValue;\n                        dirty[p] = true;\n                    }\n                    return true;\n                }\n                case 'direction': {\n                    const newDirection = deriveSendDirectionFromTrack(newValue, props.transceiver?.sender.track ?? props.track);\n                    if (target[p] !== newDirection) {\n                        Reflect.set(target, p, newDirection, receiver);\n                        dirty[p] = true;\n                    }\n                    return true;\n                }\n                case 'transceiver': {\n                    if (newValue !== undefined &&\n                        newValue instanceof RTCRtpTransceiver &&\n                        target[p] !== newValue) {\n                        target[p]?.stop();\n                        if (target.track) {\n                            dirty.track = true;\n                        }\n                        if (target.streams.length) {\n                            dirty.streams = true;\n                        }\n                        if (target.direction !== newValue.direction) {\n                            dirty.direction = true;\n                        }\n                        Reflect.set(target, p, newValue, receiver);\n                        onTransceiverChanged(newValue, config);\n                    }\n                    return true;\n                }\n                case 'sendEncodings': {\n                    if (newValue !== undefined &&\n                        !compareArray(target[p], newValue, compareRecord)) {\n                        Reflect.set(target, p, newValue, receiver);\n                        dirty.sendParameters = true;\n                    }\n                    return true;\n                }\n                default: {\n                    Reflect.set(target, p, newValue, receiver);\n                    return true;\n                }\n            }\n        },\n    });\n    const syncStreams = () => {\n        if (!CAN_SET_STREAMS ||\n            !dirty.streams ||\n            !props.track ||\n            !props.transceiver ||\n            isTransceiverObsolete(props.transceiver)) {\n            return;\n        }\n        dirty.streams = false;\n        logger.debug({ config, props, dirty }, 'syncStreams');\n        props.transceiver.sender.setStreams(...props.streams);\n    };\n    const syncDirection = () => {\n        if (!props.allowAutoChangeOfDirection ||\n            !dirty.direction ||\n            !props.transceiver ||\n            isTransceiverObsolete(props.transceiver)) {\n            return;\n        }\n        if (props.transceiver.direction === props.direction) {\n            return;\n        }\n        dirty.direction = false;\n        logger.debug({ config, props, dirty }, 'syncDirection');\n        props.transceiver.direction = props.direction;\n    };\n    const syncSenderTrack = async () => {\n        if (!props.transceiver ||\n            isTransceiverObsolete(props.transceiver) ||\n            !dirty.track ||\n            props.track === undefined ||\n            props.track === props.transceiver?.sender.track) {\n            return;\n        }\n        dirty.track = false;\n        logger.debug({ config, props, dirty }, 'syncSenderTrack');\n        await props.transceiver.sender.replaceTrack(props.track);\n        syncStreams();\n    };\n    const syncSenderParameters = async () => {\n        const encodings = props.sendEncodings;\n        const params = props.transceiver?.sender.getParameters();\n        // https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpSender/setParameters#currently_compatible_implementation\n        if (params && !params.encodings) {\n            params.encodings = [{}];\n        }\n        if (!props.transceiver ||\n            isTransceiverObsolete(props.transceiver) ||\n            !dirty.sendParameters ||\n            encodings === undefined ||\n            params === undefined ||\n            params.encodings.every((param, idx) => compareRecord(param, encodings[idx]))) {\n            return;\n        }\n        dirty.sendParameters = false;\n        logger.debug({ config, props, dirty }, 'syncSenderTrack');\n        await props.transceiver.sender.setParameters({\n            ...params,\n            encodings: merge(params.encodings, encodings),\n        });\n    };\n    const isDirty = () => dirty.dirty ||\n        !props.transceiver ||\n        isTransceiverObsolete(props.transceiver);\n    const config = {\n        get content() {\n            return props.content;\n        },\n        get dirty() {\n            return isDirty();\n        },\n        get kind() {\n            return props.kind;\n        },\n        get allowAutoChangeOfDirection() {\n            return props.allowAutoChangeOfDirection;\n        },\n        set allowAutoChangeOfDirection(allowed) {\n            props.allowAutoChangeOfDirection = allowed;\n        },\n        get relativeDirection() {\n            return props.relativeDirection;\n        },\n        set relativeDirection(relative) {\n            props.relativeDirection = relative;\n        },\n        get direction() {\n            return props.direction;\n        },\n        set direction(direction) {\n            proxy.direction = direction;\n        },\n        get sendEncodings() {\n            return props.sendEncodings;\n        },\n        set sendEncodings(encodings) {\n            proxy.sendEncodings = encodings;\n        },\n        get streams() {\n            return props.streams;\n        },\n        set streams(streams) {\n            proxy.streams = streams;\n        },\n        get remoteStreams() {\n            return props.remoteStreams;\n        },\n        set remoteStreams(streams) {\n            props.remoteStreams = streams;\n        },\n        get transceiver() {\n            return props.transceiver;\n        },\n        set transceiver(transceiver) {\n            proxy.transceiver = transceiver;\n        },\n        get track() {\n            return props.track;\n        },\n        set track(track) {\n            proxy.track = track;\n        },\n        syncStreams,\n        syncDirection,\n        syncSenderTrack,\n        syncSenderParameters,\n        syncTransceiver: async (peer, option = {}) => {\n            if (option.track !== undefined) {\n                proxy.track = option.track;\n            }\n            if (option.streams) {\n                proxy.streams = option.streams;\n            }\n            if (option.direction) {\n                proxy.direction = option.direction;\n            }\n            if (option.sendEncodings) {\n                proxy.sendEncodings = option.sendEncodings;\n            }\n            if (!isDirty()) {\n                return;\n            }\n            if (props.transceiver &&\n                !isTransceiverObsolete(props.transceiver)) {\n                await syncSenderTrack();\n                syncDirection();\n                await syncSenderParameters();\n            }\n            else {\n                logger.debug({ config, props, dirty }, 'addTransceiver');\n                dirty.track = false;\n                dirty.streams = false;\n                dirty.direction = false;\n                proxy.transceiver = peer.addTransceiver(props.track ?? props.kind, {\n                    direction: props.direction,\n                    streams: props.streams,\n                    sendEncodings: props.sendEncodings,\n                });\n            }\n        },\n        toString() {\n            return [this.content, this.kind, this.transceiver?.mid]\n                .filter(Boolean)\n                .join('-');\n        },\n    };\n    return config;\n};\nexport const isTransceiverInit = (t) => {\n    if (typeof t === 'object' && t && 'kindOrTrack' in t) {\n        return true;\n    }\n    return false;\n};\nexport const isTransceiverConfig = (t) => {\n    if (typeof t === 'object' &&\n        t &&\n        'kind' in t &&\n        typeof t.kind === 'string' &&\n        ['audio', 'video'].includes(t.kind)) {\n        return true;\n    }\n    return false;\n};\nexport const isDataChannelInit = (t) => {\n    if (typeof t === 'object' &&\n        t &&\n        'label' in t &&\n        typeof t.label === 'string') {\n        return true;\n    }\n    return false;\n};\nexport const isDataChannelConfig = (t) => {\n    if (typeof t === 'object' &&\n        t &&\n        'kind' in t &&\n        typeof t.kind === 'string' &&\n        t.kind === 'application') {\n        return true;\n    }\n    return false;\n};\nexport const isMediaInit = (t) => isTransceiverInit(t) || isDataChannelInit(t);\nexport const isMediaConfig = (t) => isTransceiverConfig(t) || isDataChannelConfig(t);\nexport const createMediaConfigs = (mediaInits, onTransceiverChanged) => {\n    const map = new Map();\n    const handleTransceiverChanged = (trans, config) => {\n        map.set(trans, config);\n        logger.debug({ map, transceiver: trans, config }, 'handleTransceiverChanged');\n        onTransceiverChanged?.();\n    };\n    const mediaConfigs = mediaInits?.map(init => {\n        if (isTransceiverInit(init)) {\n            const config = createTransceiverConfig(init, handleTransceiverChanged);\n            return config;\n        }\n        return createDataChannelConfig(init);\n    }) ?? [];\n    function getConfig(key) {\n        return map.get(key);\n    }\n    function addConfig(peer, initOrConfig) {\n        if (isTransceiverInit(initOrConfig)) {\n            const trackOrKind = initOrConfig.kindOrTrack;\n            const transceiver = initOrConfig.transceiver\n                ? initOrConfig.transceiver\n                : peer.addTransceiver(trackOrKind, initOrConfig);\n            const config = createTransceiverConfig({ ...initOrConfig, transceiver }, handleTransceiverChanged);\n            mediaConfigs.push(config);\n            handleTransceiverChanged(transceiver, config);\n            return config;\n        }\n        if (isTransceiverConfig(initOrConfig)) {\n            const trackOrKind = initOrConfig.track ?? initOrConfig.kind;\n            const transceiver = initOrConfig.transceiver ??\n                peer.addTransceiver(trackOrKind, initOrConfig);\n            mediaConfigs.push(initOrConfig);\n            handleTransceiverChanged(transceiver, initOrConfig);\n            return initOrConfig;\n        }\n        if (isDataChannelInit(initOrConfig)) {\n            const dataChannel = initOrConfig.dataChannel ??\n                peer.createDataChannel(initOrConfig.label, initOrConfig);\n            const config = createDataChannelConfig({\n                ...initOrConfig,\n                dataChannel,\n            });\n            mediaConfigs.push(config);\n            return config;\n        }\n        if (!initOrConfig.dataChannel) {\n            peer.createDataChannel(initOrConfig.options.label, initOrConfig.options);\n        }\n        mediaConfigs.push(initOrConfig);\n        return initOrConfig;\n    }\n    return {\n        get configs() {\n            return mediaConfigs;\n        },\n        addConfig,\n        getConfig,\n        find: (predicate) => mediaConfigs.find(predicate),\n    };\n};\n/**\n * Try to derive the direction from `currentDirection` and the `intendedDirection`\n */\nexport const changeTransceiverDirection = (currentDirection, intendedDirection = 'send') => {\n    if (intendedDirection !== 'send' && intendedDirection !== 'recv') {\n        return intendedDirection;\n    }\n    switch (currentDirection) {\n        case 'inactive': {\n            return intendedDirection === 'send' ? 'sendonly' : 'recvonly';\n        }\n        case 'recvonly': {\n            return intendedDirection === 'send' ? 'sendrecv' : 'recvonly';\n        }\n        case 'sendonly': {\n            return intendedDirection === 'send' ? 'sendonly' : 'sendrecv';\n        }\n        case 'sendrecv':\n        default:\n            return 'sendrecv';\n    }\n};\n/**\n * Get the relative direction so you can get the correct direction, e.g.\n * `\"sendonly\" <--> \"recvonly\"`\n *\n * From https://www.rfc-editor.org/rfc/rfc3264.html#section-6.1\n * \\> If a stream is offered as sendonly, the corresponding stream MUST be\n * \\> marked as recvonly or inactive in the answer.  If a media stream is\n * \\> listed as recvonly in the offer, the answer MUST be marked as\n * \\> sendonly or inactive in the answer.  If an offered media stream is\n * \\> listed as sendrecv (or if there is no direction attribute at the\n * \\> media or session level, in which case the stream is sendrecv by\n * \\> default), the corresponding stream in the answer MAY be marked as\n * \\> sendonly, recvonly, sendrecv, or inactive.  If an offered media\n * \\> stream is listed as inactive, it MUST be marked as inactive in the\n * \\> answer.\n */\nexport const getRelativeDirection = (remoteDirection) => {\n    switch (remoteDirection) {\n        case 'sendonly':\n            return 'recvonly';\n        case 'recvonly':\n            return 'sendonly';\n        case 'inactive':\n            return 'inactive';\n        case 'sendrecv':\n        default:\n            // if there is no direction attribute at the media or session level,\n            // the stream is `sendrecv` by default\n            return 'sendrecv';\n    }\n};\nexport const deriveSendDirectionFromTrack = (intendedDirection, track) => {\n    const hasTrack = Boolean(track);\n    if (hasTrack || !intendedDirection.includes('send')) {\n        return intendedDirection;\n    }\n    switch (intendedDirection) {\n        case 'sendonly':\n            return 'inactive';\n        case 'sendrecv':\n            return 'recvonly';\n        default:\n            return intendedDirection;\n    }\n};\n/**\n * Create a queue to handle buffering and trigger provided `callback` being\n * called in order.\n *\n * @param callback - The callback being called\n */\nexport const createEventQueue = (callback) => {\n    const queue = [];\n    let buffering = true;\n    return {\n        get buffering() {\n            return buffering;\n        },\n        set buffering(value) {\n            buffering = value;\n        },\n        get length() {\n            return queue.length;\n        },\n        get items() {\n            return [...queue];\n        },\n        /**\n         * Put an item to the end of the queue. When the attribute `buffering`\n         * is `false`, it triggers the `callback` immediately instead of putting\n         * the item into the queue.\n         *\n         * @param item - The item to put into the queue\n         */\n        enqueue: (item) => {\n            if (buffering) {\n                queue.push(item);\n            }\n            else {\n                for (const item of queue) {\n                    callback(item);\n                }\n                callback(item);\n            }\n        },\n        /**\n         * Empty the queue by running the callback with all the items in the\n         * queue in-order, and returns the items;\n         */\n        flush: () => queue.splice(0, queue.length).map(item => {\n            callback(item);\n            return item;\n        }),\n        /**\n         * Discard all the items without any side effects\n         */\n        discard: () => {\n            queue.length = 0;\n        },\n    };\n};\nexport const subscribePCEvents = (pc, listeners) => {\n    listeners.forEach(({ event, listener, options }) => {\n        // To make tsc happy\n        switch (event) {\n            case 'datachannel': {\n                pc.addEventListener(event, listener, options);\n                break;\n            }\n            case 'icecandidate': {\n                pc.addEventListener(event, listener, options);\n                break;\n            }\n            case 'track': {\n                pc.addEventListener(event, listener, options);\n                break;\n            }\n            default: {\n                pc.addEventListener(event, listener, options);\n                break;\n            }\n        }\n    });\n    pc.addEventListener('close', () => {\n        listeners.forEach(({ event, listener, options }) => {\n            // To make tsc happy\n            switch (event) {\n                case 'datachannel': {\n                    pc.removeEventListener(event, listener, options);\n                    break;\n                }\n                case 'icecandidate': {\n                    pc.removeEventListener(event, listener, options);\n                    break;\n                }\n                case 'track': {\n                    pc.removeEventListener(event, listener, options);\n                    break;\n                }\n                default: {\n                    pc.removeEventListener(event, listener, options);\n                    break;\n                }\n            }\n        });\n    }, { once: true });\n};\n/**\n * A wrapper to create a RTCPeerConnection instance and subscribe the events\n * declared from the provided list of `listeners`.\n *\n * @param options - The configuration for the `RTCPeerConnection`\n * @param listeners - A list of listeners to listen on the Peer Connection\n * events\n * @param existingPC - Instead of creating a new Peer Connection, it always uses\n * this instance instead.\n */\nexport const createRTCPeerConnection = (options, listeners, existingPC) => {\n    const pc = (existingPC ??\n        new RTCPeerConnection(options));\n    listeners && subscribePCEvents(pc, listeners);\n    return pc;\n};\n", "import * as sdpTransform from 'sdp-transform';\nvar Codec;\n(function (Codec) {\n    Codec[\"VP8\"] = \"VP8\";\n    Codec[\"VP9\"] = \"VP9\";\n    Codec[\"H264\"] = \"H264\";\n})(Codec || (Codec = {}));\n// https://tools.ietf.org/html/draft-holmer-rmcat-transport-wide-cc-extensions-01\nexport const TWCCExtensionUrl = 'http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions';\nexport class SdpTransformManager {\n    constructor(sdp, enrichOptions) {\n        this.sdp = sdp;\n        this.isTWCCsupported = () => this.sdp.sdp?.includes(TWCCExtensionUrl);\n        this.addContentAttribute = (mid, content) => {\n            if (!this.sdp.sdp || !content) {\n                return;\n            }\n            let modifiedSdp = this.sdp;\n            const transformSdp = sdpTransform.parse(this.sdp.sdp);\n            const mline = this.getMediaLine(transformSdp.media, mid);\n            if (!mline) {\n                return;\n            }\n            this.setContentAttribute(mline, content);\n            modifiedSdp = {\n                sdp: sdpTransform.write(transformSdp),\n                type: this.sdp.type,\n            };\n            this.sdp = modifiedSdp;\n        };\n        this.addMsidToMline = (transceiver, msid) => {\n            if (!this.sdp.sdp) {\n                return;\n            }\n            let modifiedSdp = this.sdp;\n            const transformSdp = sdpTransform.parse(this.sdp.sdp);\n            const mLine = transformSdp.media.find(mline => {\n                if (transceiver.mid) {\n                    return (String(mline.mid) === transceiver.mid &&\n                        mline.type ===\n                            (transceiver.sender.track?.kind ??\n                                transceiver.receiver.track.kind));\n                }\n            });\n            if (!mLine) {\n                // No such media line\n                return;\n            }\n            const msids = mLine.msid?.split(' ');\n            // Associate the stream id to for streamless for just replace\n            if (msids?.[0]) {\n                msids[0] = msid;\n            }\n            mLine.msid = msids?.join(' ');\n            modifiedSdp = {\n                sdp: sdpTransform.write(transformSdp),\n                type: this.sdp.type,\n            };\n            this.sdp = modifiedSdp;\n        };\n        this.setSdp(sdp, enrichOptions);\n    }\n    setSdp(sdp, enrichOptions) {\n        this.sdp = sdp;\n        if (enrichOptions) {\n            this.enrichSdp(enrichOptions);\n        }\n    }\n    getSdp() {\n        return this.sdp;\n    }\n    getFingerprints() {\n        if (!this.sdp?.sdp) {\n            return [];\n        }\n        const transformSdp = sdpTransform.parse(this.sdp.sdp);\n        return [\n            transformSdp.fingerprint,\n            ...transformSdp.media.map(m => m.fingerprint),\n        ].flatMap(fingerprint => (fingerprint ? [fingerprint] : []));\n    }\n    enrichSdp(options) {\n        let modifiedSdp = this.sdp;\n        if (this.sdp?.sdp) {\n            let transformSdp = sdpTransform.parse(this.sdp.sdp);\n            if (options.contents) {\n                transformSdp.media\n                    .filter(mline => mline.type === 'audio' || mline.type === 'video')\n                    .forEach((mline, idx) => {\n                    mline.content = options.contents?.[idx];\n                });\n            }\n            if (options.sendEncodings) {\n                transformSdp.media\n                    .filter(mline => mline.type === 'audio' || mline.type === 'video')\n                    .forEach((mline, idx) => {\n                    const encodings = options.sendEncodings?.[idx];\n                    if (mline.rids && encodings) {\n                        mline.rids.forEach((rid, i) => {\n                            const { maxWidth, maxHeight } = encodings?.[i] ?? {};\n                            const paramArray = rid.params\n                                ? rid.params.split(';')\n                                : [];\n                            if (mline.type === 'video') {\n                                if (maxHeight &&\n                                    !paramArray.find(param => param.includes('max-height='))) {\n                                    paramArray.push(`max-height=${maxHeight}`);\n                                }\n                            }\n                            if (maxWidth &&\n                                !paramArray.find(param => param.includes('max-width='))) {\n                                paramArray.push(`max-width=${maxWidth}`);\n                            }\n                            if (paramArray.length > 0) {\n                                rid.params = paramArray.join(';');\n                            }\n                        });\n                    }\n                });\n            }\n            if (options.videoAS) {\n                transformSdp = this.addBandwidthLine(transformSdp, options.videoAS, options.videoTIAS);\n            }\n            if (options.allowCodecSdpMunging && !options.allowVP9) {\n                transformSdp = this.stripCodecs(transformSdp, [Codec.VP9]);\n            }\n            if (this.shouldAddSupportForHighQualityStream(options)) {\n                transformSdp = this.addSupportForHighQualityStream(transformSdp, options.allow4kPreso);\n            }\n            if (options.allowCodecSdpMunging) {\n                transformSdp = this.chooseVideoPTs(transformSdp);\n            }\n            modifiedSdp = {\n                sdp: sdpTransform.write(transformSdp),\n                type: this.sdp.type,\n            };\n        }\n        this.sdp = modifiedSdp;\n    }\n    shouldAddSupportForHighQualityStream(options) {\n        return (options.contents?.includes('slides') ||\n            (options?.allow1080p && options.videoAS && options.videoAS >= 2564));\n    }\n    setContentAttribute(mline, content) {\n        if (!mline || !content) {\n            return;\n        }\n        mline.content = content;\n    }\n    addBandwidthLine(sdp, videoAS, videoTIAS) {\n        const videoLines = this.getVideoLines(sdp.media);\n        videoLines.forEach(videoLine => {\n            if (!videoLine.bandwidth) {\n                videoLine.bandwidth = [];\n            }\n            const TIAS = videoLine.bandwidth.find(({ type }) => type === 'TIAS');\n            const limit = Number(TIAS?.limit);\n            if (limit && videoTIAS && limit < videoTIAS) {\n                // Don't override upper limit provided by MCU\n                return;\n            }\n            videoLine.bandwidth.push({\n                type: 'AS',\n                limit: videoAS,\n            });\n            if (videoTIAS) {\n                // For FF we should include this to the media line\n                // (required only for outgoing stream)\n                if (TIAS) {\n                    TIAS.limit = videoTIAS;\n                }\n                else {\n                    videoLine.bandwidth.push({\n                        type: 'TIAS',\n                        limit: videoTIAS,\n                    });\n                }\n            }\n        });\n        return sdp;\n    }\n    addSupportForHighQualityStream(sdp, allow4kPreso = false) {\n        const videoLines = this.getVideoLines(sdp.media);\n        videoLines.forEach(videoLine => {\n            const codecs = this.getCodecs(videoLine.rtp);\n            videoLine.fmtp = videoLine.fmtp.map(fmtp => {\n                if (fmtp.config.includes('max-fs')) {\n                    return fmtp;\n                }\n                const codec = codecs[fmtp.payload];\n                const is4kPreso = isPreso(videoLine) && allow4kPreso;\n                if (codec === Codec.VP8 || codec === Codec.VP9) {\n                    fmtp.config += this.getVPXConfigOverrides(is4kPreso);\n                }\n                else if (codec === Codec.H264) {\n                    fmtp.config += this.getH264ConfigOverrides(is4kPreso);\n                }\n                return fmtp;\n            });\n        });\n        return sdp;\n    }\n    getVPXConfigOverrides(is4kEnabled = false) {\n        return `;max-fs=${is4kEnabled ? '36864' : '8160'};max-fr=30`;\n    }\n    getH264ConfigOverrides(is4kEnabled = false) {\n        return is4kEnabled\n            ? ';max-br=32768;max-mbps=2073600;max-fs=36864;max-smbps=2073600;max-fps=6000;max-fr=30'\n            : ';max-br=3732;max-mbps=245760;max-fs=8192;max-smbps=245760;max-fps=3000;max-fr=30';\n    }\n    /**\n     * This method makes sure we pick set of supported codecs with the right order\n     */\n    chooseVideoPTs(sdp) {\n        const videoLines = this.getVideoLines(sdp.media);\n        videoLines.forEach(videoLine => {\n            /**\n             * To reject an offered\n             * stream, the port number in the corresponding stream in the answer\n             * MUST be set to zero. Any media formats listed are ignored.\n             *\n             * Ref: https://www.rfc-editor.org/rfc/rfc3264#section-6\n             */\n            if (videoLine.port === 0 && this.sdp.type === 'answer') {\n                return;\n            }\n            const codecs = this.getCodecs(videoLine.rtp);\n            let payloadTypes = [];\n            for (const fmtp of videoLine.fmtp) {\n                if (codecs[fmtp.payload] !== Codec.H264) {\n                    continue;\n                }\n                const params = fmtp.config.split(';');\n                /**\n                 * The profile-level-id parameter indicates the default sub-\n                 * profile (i.e., the subset of coding tools that may have been\n                 * used to generate the stream or that the receiver supports) and\n                 * the default level of the stream or the receiver supports.\n                 *\n                 * Ref: https://datatracker.ietf.org/doc/html/rfc6184#page-41 (Table 5)\n                 */\n                const [, profile] = params\n                    .find(param => param.includes('profile-level-id'))\n                    ?.split('=') ?? [];\n                /**\n                 * The default sub-profile is indicated collectively by the\n                 * profile_idc byte and some fields in the profile-iop byte.\n                 *\n                 * Ref: https://datatracker.ietf.org/doc/html/rfc6184#page-41 (Table 5)\n                 */\n                const profileIdc = profile?.substring(0, 2);\n                const profileIop = profile?.substring(2, 4) ?? '';\n                /**\n                 * Profile      profile_idc         profile-iop\n                 *              (hexadecimal)       (binary)\n                 *\n                 *  CB           42 (B)             x1xx0000\n                 *      same as: 4D (M)             1xxx0000\n                 *      same as: 58 (E)             11xx0000\n                 *  B            42 (B)             x0xx0000\n                 *      same as: 58 (E)             10xx0000\n                 *\n                 * Where:\n                 * CB: Constrained Baseline profile\n                 * B:  Baseline profile\n                 */\n                if (profileIdc !== '42') {\n                    continue;\n                }\n                /**\n                 * Add all B/CB keys unless we find CB key together with packetization-mode=1\n                 * Then we use only that one\n                 * Because there seems to be a bug with CB key and packetization-mode=0\n                 */\n                if (parseInt('0x' + profileIop) & 0x40 && // CB otherwise B\n                    fmtp.config.includes('packetization-mode=1')) {\n                    payloadTypes = [fmtp.payload];\n                    break;\n                }\n                payloadTypes.push(fmtp.payload);\n            }\n            // now filter based on the above\n            videoLine.rtp = videoLine.rtp.filter(({ codec, payload }) => {\n                if (codec === Codec.H264) {\n                    return payloadTypes.includes(payload);\n                }\n                const fmtp = videoLine.fmtp.find(line => line.payload === payload);\n                return this.shouldStripH264Line(fmtp?.config ?? '', payloadTypes, codecs);\n            });\n            videoLine.fmtp = videoLine.fmtp.filter(({ payload, config }) => {\n                if (codecs[payload] === Codec.H264 &&\n                    !payloadTypes.includes(payload)) {\n                    return false;\n                }\n                return this.shouldStripH264Line(config, payloadTypes, codecs);\n            });\n            if (videoLine.rtcpFb) {\n                videoLine.rtcpFb = videoLine.rtcpFb.filter(({ payload }) => codecs[payload] !== Codec.H264 ||\n                    (codecs[payload] === Codec.H264 &&\n                        payloadTypes.includes(payload)));\n            }\n            // Put higher priority on the payloadTypes\n            const payloads = [\n                ...payloadTypes,\n                ...videoLine.rtp.flatMap(({ payload }) => !payloadTypes.includes(Number(payload)) ? [payload] : []),\n            ];\n            // Make sure we only apply this logic if we found any payloads\n            // otherwise we can hit validation error\n            if (videoLine.payloads && payloads.length > 0) {\n                videoLine.payloads = payloads.join(' ');\n            }\n        });\n        return sdp;\n    }\n    shouldStripH264Line(config, payloadTypes, codecs) {\n        const [name, value] = config.split('=');\n        if (name === 'apt' &&\n            value &&\n            codecs[value] === Codec.H264 &&\n            !payloadTypes.includes(Number(value))) {\n            return false;\n        }\n        return true;\n    }\n    stripCodecs(sdp, disableCodecs) {\n        const videoLines = this.getVideoLines(sdp.media);\n        for (const videoLine of videoLines) {\n            if (videoLine) {\n                const removePayloads = videoLine.rtp\n                    .filter(({ codec }) => disableCodecs.includes(codec))\n                    .map(({ payload }) => payload);\n                if (removePayloads.length > 0) {\n                    const rtxApts = removePayloads.map(item => `apt=${item}`);\n                    const rtxPayloads = videoLine.fmtp.filter(item => rtxApts.includes(item.config));\n                    removePayloads.push(...rtxPayloads.map(item => item.payload));\n                }\n                if (videoLine.payloads) {\n                    for (const payload of removePayloads) {\n                        videoLine.payloads = videoLine.payloads.replace(`${payload} `, '');\n                    }\n                }\n                videoLine.rtp = videoLine.rtp.filter(rtp => !removePayloads.includes(rtp.payload));\n                videoLine.fmtp = videoLine.fmtp.filter(fmtp => !removePayloads.includes(fmtp.payload));\n                if (videoLine.rtcpFb) {\n                    videoLine.rtcpFb = videoLine.rtcpFb.filter(rtcpFb => !removePayloads.includes(rtcpFb.payload));\n                }\n            }\n        }\n        return sdp;\n    }\n    getVideoLines(media) {\n        return media.filter(line => line.type === 'video');\n    }\n    getMediaLine(media, mid) {\n        if (mid) {\n            return media.find(line => (line.type === 'video' || line.type === 'audio') &&\n                String(line.mid) === mid);\n        }\n    }\n    getCodecs(rtp) {\n        return rtp.reduce((acc, { codec, payload }) => {\n            acc[payload] = codec;\n            return acc;\n        }, {});\n    }\n}\nexport const hasICECandidates = (sdp) => {\n    if (!sdp) {\n        return false;\n    }\n    const transformedSDP = sdpTransform.parse(sdp);\n    return transformedSDP.media.some(m => m.candidates && m.candidates.length > 0);\n};\nexport const getMediaLines = (sdp) => {\n    if (!sdp) {\n        return [];\n    }\n    return sdpTransform.parse(sdp).media;\n};\nexport const isPreso = (media) => media.content === 'slides';\n", "import { RecoveryTimeout } from './types';\nimport { SdpTransformManager, getMediaLines, hasICECandidates, } from './sdpManager';\nimport { CAN_SET_STREAMS } from './constants';\nimport { changeTransceiverDirection, createEventQueue, createGetRefs, createMediaConfigs, createRTCPeerConnection, createRefsLog, getPeerConnectionStates, getRelativeDirection, isDataChannelConfig, isTransceiverConfig, isTransceiverObsolete, logReferences, withSignals, } from './utils';\nconst MAX_M_CONTENT_COUNT = 10;\nconst MAX_DEFER_NEGOTIATION_COUNT = 10;\n/**\n * Wrap RTCPeerConnection with polyfill the old APIs and simplifies the common logics\n *\n * @param options - Configuration for the peer connection\n * @param peerConnection - Inject your own RTCPeerConnection, can be used for\n * testing\n */\nexport function createPeerConnection(options = {}, peerConnection) {\n    const props = {\n        bandwidth: options.bandwidth ?? 0,\n        offerOptions: options.offerOptions,\n        answerOptions: options.answerOptions,\n        references: {\n            module: 'PeerConnection',\n            createdAt: new Date().toISOString(),\n        },\n        allowCodecSdpMunging: Boolean(options.allowCodecSdpMunging),\n        // Only used when `restartIce` is not available\n        iceRestartNeeded: false,\n        initialConnectionDone: false,\n        makingOffer: false,\n        makingAnswer: false,\n        ignoreNegotiationNeeded: false,\n        pendingOffer: undefined,\n        allowVP9: options.allowVP9 ?? true,\n        allow1080p: options.allow1080p,\n        allow4kPreso: options.allow4kPreso,\n        currentRemoteDescription: undefined,\n        localFingerprints: [],\n        remoteFingerprints: [],\n        mediaContentMismatchCount: 0,\n        deferNegotiationCount: 0,\n        polite: !!options.polite,\n    };\n    const mediaConfigs = createMediaConfigs(options.mediaInits, () => eventHandlers.onTransceiverChange?.());\n    let remoteMediaLines = new Map();\n    const timers = {};\n    const clearTimer = (timerKey, onDone) => {\n        if (timers[timerKey]) {\n            clearTimeout(timers[timerKey]);\n            timers[timerKey] = undefined;\n            onDone?.();\n        }\n    };\n    const eventHandlers = {};\n    const localICECandidateQueue = createEventQueue((evt) => {\n        eventHandlers.onIceCandidate?.(evt);\n    });\n    const pcEventListeners = [\n        {\n            event: 'iceconnectionstatechange',\n            listener: event => {\n                log.info('handle iceconnectionstatechange event', { event });\n                const pc = event.currentTarget;\n                clearTimer('iceConnectionState', () => {\n                    log.debug('clears the restart ice timer', { event });\n                });\n                if (pc.iceConnectionState === 'failed') {\n                    // FIXME: Should update configuration before restarting ICE\n                    log.debug('restarts ice because it went to failed', {\n                        event,\n                    });\n                    restartIce();\n                }\n                else if (pc.iceConnectionState === 'disconnected') {\n                    log.debug('schedule ice restart because it went to disconnected', {\n                        event,\n                    });\n                    timers.iceConnectionState = window.setTimeout(restartIce, RecoveryTimeout.IceConnectionState);\n                }\n                if (eventHandlers.iceConnectionStateChange) {\n                    eventHandlers.iceConnectionStateChange(event);\n                }\n            },\n        },\n        {\n            event: 'signalingstatechange',\n            listener: event => {\n                log.info('handle signalingstatechange event', { event });\n                const pc = event.currentTarget;\n                if (pc.signalingState === 'stable') {\n                    if (props.iceRestartNeeded &&\n                        eventHandlers.onIceCandidate) {\n                        fallbackRestartIce();\n                    }\n                }\n                if (eventHandlers.signalingStateChange) {\n                    eventHandlers.signalingStateChange(event);\n                }\n            },\n        },\n        {\n            event: 'icecandidate',\n            listener: event => {\n                if (!eventHandlers.onIceCandidate) {\n                    return;\n                }\n                if (props.makingAnswer ||\n                    props.makingOffer ||\n                    localICECandidateQueue.buffering) {\n                    log.debug('buffering ICE candidate', {\n                        event,\n                        makingOffer: props.makingOffer,\n                        makingAnswer: props.makingAnswer,\n                        localICECandidateBuffering: localICECandidateQueue.buffering,\n                    });\n                    localICECandidateQueue.buffering = true;\n                }\n                localICECandidateQueue.enqueue(event);\n            },\n        },\n        {\n            event: 'negotiationneeded',\n            listener: () => {\n                log.info('handle negotiationneeded event', { eventHandlers });\n                if (eventHandlers.negotiationNeeded) {\n                    negotiate();\n                }\n            },\n        },\n        {\n            event: 'track',\n            listener: event => {\n                log.info('handle track event', {\n                    event,\n                    remoteMediaLines,\n                    mediaConfigs,\n                });\n                const config = mediaConfigs.getConfig(event.transceiver) ??\n                    mediaConfigs.find(config => {\n                        if (!isTransceiverConfig(config)) {\n                            return false;\n                        }\n                        const media = remoteMediaLines.get(event.transceiver.mid ?? '');\n                        const content = media?.content ?? 'main';\n                        const kind = media?.type;\n                        return (kind === config.kind && content === config.content);\n                    });\n                if (!isTransceiverConfig(config)) {\n                    log.warn('Unable to find respective transceiver config', {\n                        mediaConfigs,\n                        event,\n                    });\n                    eventHandlers.onTrack?.(event);\n                    return;\n                }\n                config.remoteStreams = event.streams.length\n                    ? event.streams\n                    : [new MediaStream([event.track])];\n                eventHandlers.onRemoteStreams?.(config);\n                eventHandlers.onTrack?.(event);\n            },\n        },\n        {\n            event: 'datachannel',\n            listener: event => {\n                log.info('handle datachannel event', {\n                    event,\n                    eventHandler: eventHandlers.onDataChannel,\n                });\n                const config = mediaConfigs.find(config => isDataChannelConfig(config) && !config.dataChannel);\n                if (isDataChannelConfig(config)) {\n                    config.dataChannel = event.channel;\n                }\n                eventHandlers.onDataChannel?.(event);\n            },\n        },\n    ];\n    const peer = createRTCPeerConnection(options.rtcConfig, pcEventListeners, peerConnection);\n    // HACK: Fix for odd Firefox behavior, see: https://github.com/feross/simple-peer/pull/783\n    if (typeof peer.peerIdentity === 'object') {\n        peer.peerIdentity.catch((error) => {\n            log.error('peerIdentity error', { error });\n            peer.close();\n        });\n    }\n    const log = createRefsLog(() => ({\n        ...logReferences(props.references),\n        ...getPeerConnectionStates(peer),\n        props,\n    }));\n    /**\n     * `RTCRtpSender['setStreams']` fallback function with polyfill when the API is not available\n     * by using SDP mangling\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpSender/setStreams}\n     */\n    const associateStream = ({ transceiver, stream, sdp, sdpOptions, }) => {\n        const sdpManager = sdp instanceof SdpTransformManager\n            ? sdp\n            : new SdpTransformManager(sdp, sdpOptions);\n        sdpManager.addMsidToMline(transceiver, stream.id);\n    };\n    /**\n     * Polyfill to browsers without RTCRtpSender['setStreams'] with SDP Mangling\n     * */\n    const associateStreamWithSDP = ({ streams, transceiver }, sdp, sdpOptions) => {\n        const [stream] = streams;\n        if (!stream || !transceiver) {\n            return;\n        }\n        log.debug('Manual associate stream with SDP', {\n            sdp: sdp,\n            options: sdpOptions,\n            stream,\n            currentLocalDescription: peer.currentLocalDescription,\n            transceivers: peer.getTransceivers(),\n            transceiver,\n        });\n        associateStream({\n            transceiver,\n            stream,\n            sdp,\n            sdpOptions,\n        });\n    };\n    /**\n     * Set the local `MediaStream`, and replace the tracks when there is already\n     * one in the process\n     *\n     * @param mediaStream - the media stream to add\n     * @param targets - A list a target `TransceiverConfig` to update the stream\n     */\n    const setLocalStream = async (mediaStream, targets, shouldSyncMedia = true) => {\n        log.info('call setLocalStream', { mediaStream, targets });\n        const streams = mediaStream ? [mediaStream] : [];\n        for (const [config, intentDirection] of targets) {\n            const direction = changeTransceiverDirection(config.transceiver?.currentDirection ?? config.direction, intentDirection);\n            const track = mediaStream\n                ?.getTracks()\n                .find(track => track.kind === config.kind &&\n                track.readyState === 'live') ?? null;\n            config.track = track;\n            config.streams = streams;\n            config.direction = direction;\n        }\n        if (shouldSyncMedia) {\n            await syncMedia(remoteMediaLines, true);\n        }\n    };\n    /**\n     * Trigger manual negotiationNeeded event\n     */\n    const negotiate = () => {\n        clearTimer('negotiation');\n        if (props.mediaContentMismatchCount >= MAX_M_CONTENT_COUNT) {\n            log.info('Failed to negotiate with remote peer because of transceiver content attribute mismatch');\n            props.mediaContentMismatchCount = 0;\n            return;\n        }\n        if (props.deferNegotiationCount >= MAX_DEFER_NEGOTIATION_COUNT) {\n            log.info('Defer negotiation is more than allowed');\n            props.deferNegotiationCount = 0;\n            return;\n        }\n        if (eventHandlers.negotiationNeeded) {\n            if (!props.ignoreNegotiationNeeded &&\n                !props.makingOffer &&\n                peer.signalingState === 'stable') {\n                log.info('call negotiationneeded handler');\n                props.deferNegotiationCount = 0;\n                eventHandlers.negotiationNeeded();\n            }\n            else {\n                log.info('defer negotiation', {\n                    ignoreNegotiationNeeded: props.ignoreNegotiationNeeded,\n                    makingOffer: props.makingOffer,\n                    signalingState: peer.signalingState,\n                });\n                props.deferNegotiationCount += 1;\n                timers.negotiation = window.setTimeout(negotiate, RecoveryTimeout.Negotiation);\n            }\n        }\n        else {\n            log.warn('[negotiate] try to negotiate but no negotiationneeded handler');\n        }\n    };\n    /**\n     * Trigger iceRestart manual mode\n     */\n    const fallbackRestartIce = () => {\n        log.info('[restartIce fallback] trigger negotiationneeded manually');\n        props.offerOptions = { ...props.offerOptions, iceRestart: true };\n        props.iceRestartNeeded = false;\n        negotiate();\n    };\n    /**\n     * The WebRTC API's `RTCPeerConnection` interface offers the `restartIce()`\n     * method to allow a web application to easily request that ICE candidate\n     * gathering be redone on both ends of the connection. This simplifies the\n     * process by allowing the same method to be used by either the caller or\n     * the receiver to trigger an ICE restart.\n     *\n     * This function includes the logic to check if the latest API is available,\n     * and use the fallback, `RTCPeerConnection['createOffer']` with\n     * `iceRestart` set to `true`.\n     */\n    const restartIce = () => {\n        if (!eventHandlers.onIceCandidate) {\n            // Don't support Vanilla ICE Restart\n            return;\n        }\n        clearTimer('connectionState', () => {\n            log.debug('clears connectionStateTimer due to iceRestart');\n        });\n        if (peer.restartIce !== undefined) {\n            log.info('restartIce');\n            peer.restartIce();\n        }\n        else {\n            // Fallback restartIce to a manual mode\n            if (peer.signalingState === 'stable') {\n                log.info('restartIce fallback');\n                fallbackRestartIce();\n            }\n            else {\n                // Wait for `signalingState` changes to `stable` to restartIce\n                props.iceRestartNeeded = true;\n                log.info('restartIce fallback deferred');\n            }\n        }\n    };\n    /**\n     * Calculate the secure check code from the local and remote fingerprints\n     */\n    const calculateSecureCheckCode = async () => {\n        log.info('calculateSecureCheckCode');\n        if (props.localFingerprints.length && props.remoteFingerprints.length) {\n            // Sort to ensure deterministic behaviour\n            const local = props.localFingerprints\n                .map(({ type, hash }) => type + hash)\n                .sort()\n                .join('');\n            const remote = props.remoteFingerprints\n                .map(({ type, hash }) => type + hash)\n                .sort()\n                .join('');\n            const msg = [local, remote].sort().join('');\n            // SHA-256 hash the result\n            const msgBuffer = new TextEncoder().encode(msg);\n            const hashBuffer = await crypto.subtle.digest('SHA-256', msgBuffer);\n            const hashArray = Array.from(new Uint8Array(hashBuffer));\n            const hashHex = hashArray\n                .map(b => b.toString(16).padStart(2, '0'))\n                .join('');\n            eventHandlers.onSecureCheckCode?.(hashHex);\n        }\n    };\n    /**\n     * Two-way sync of transceivers & data channel between `PeerConnection` and `mediaConfigs`\n     * Should only be called after the offer/answer is applied\n     *\n     * @param remoteMediaLines - The remote media lines\n     * @param active - Indicate it is an active sync, e.g. creating an offer\n     *\n     * @internal\n     */\n    const syncMedia = async (remoteMediaLines, active) => {\n        if (peer.connectionState === 'closed') {\n            return;\n        }\n        const currentTransceivers = peer.getTransceivers();\n        log.info('Sync Media', {\n            currentTransceivers,\n            mediaConfigs,\n            remoteMediaLines,\n            active,\n        });\n        try {\n            props.ignoreNegotiationNeeded = true;\n            // PeerConnection's transceivers => MediaConfigs\n            const transceivers = new Map(currentTransceivers.flatMap(trans => isTransceiverObsolete(trans) ? [] : [[trans.mid, trans]]));\n            // Matching the remote SDP's media descriptions\n            for (const remoteMedia of remoteMediaLines.values()) {\n                const remoteContent = remoteMedia.content ?? 'main';\n                const mid = String(remoteMedia.mid);\n                const relativeDirection = active\n                    ? undefined\n                    : getRelativeDirection(remoteMedia.direction);\n                switch (remoteMedia.type) {\n                    case 'application': {\n                        // Look for the data channel with respective ID\n                        const config = mediaConfigs.find(config => isDataChannelConfig(config) &&\n                            !!config.options.negotiated &&\n                            String(config.options.id) === mid);\n                        if (config) {\n                            log.debug(`Sync existing ${config} data channel config`, {\n                                remoteMedia,\n                                config,\n                                mediaConfigs,\n                            });\n                            config.syncDataChannel(peer);\n                        }\n                        break;\n                    }\n                    case 'audio':\n                    case 'video': {\n                        const transceiver = transceivers.get(mid);\n                        if (!transceiver) {\n                            throw new Error(`Cannot find respective Transceiver with mid:${mid}`);\n                        }\n                        const existingConfig = mediaConfigs.getConfig(transceiver);\n                        if (existingConfig) {\n                            log.debug(`Sync existing ${existingConfig} transceiver config`, {\n                                transceiver,\n                                remoteMedia,\n                                mediaConfigs,\n                            });\n                            if (existingConfig.content !== remoteContent) {\n                                log.warn(`(local:content) ${existingConfig.content} <==> (remote:content) ${remoteMedia.content}`, { remoteMedia, localConfig: existingConfig });\n                                props.mediaContentMismatchCount++;\n                                continue;\n                            }\n                            await existingConfig.syncTransceiver(peer, {\n                                direction: existingConfig.relativeDirection\n                                    ? relativeDirection\n                                    : undefined,\n                            });\n                        }\n                        else {\n                            const matchedConfig = mediaConfigs.find(config => {\n                                // Get the first matching config\n                                return (isTransceiverConfig(config) &&\n                                    (!config.transceiver ||\n                                        isTransceiverObsolete(config.transceiver)) &&\n                                    // Assume it is `main` when no content attribute is set\n                                    config.content === remoteContent &&\n                                    config.kind === remoteMedia.type);\n                            });\n                            if (matchedConfig) {\n                                log.debug(`found matched ${matchedConfig} transceiver config`, {\n                                    transceiver,\n                                    matchedConfig,\n                                    remoteMedia,\n                                });\n                                matchedConfig.transceiver = transceiver;\n                                await matchedConfig.syncTransceiver(peer, {\n                                    direction: matchedConfig.relativeDirection\n                                        ? relativeDirection\n                                        : undefined,\n                                });\n                            }\n                            else {\n                                log.debug('Transceiver config mismatched, adding a new config', { transceiver, remoteMedia, mediaConfigs });\n                                const newConfig = mediaConfigs.addConfig(peer, {\n                                    kindOrTrack: transceiver.sender.track ??\n                                        remoteMedia.type,\n                                    content: remoteMedia.content ?? 'main',\n                                    transceiver,\n                                    direction: relativeDirection,\n                                });\n                                await newConfig.syncTransceiver(peer);\n                            }\n                        }\n                        break;\n                    }\n                    default: {\n                        break;\n                    }\n                }\n            }\n            // According to RFC3264#Section 6:\n            // For each \"m=\" line in the offer, there MUST be a corresponding \"m=\"\n            // line in the answer.  The answer MUST contain exactly the same number\n            // of \"m=\" lines as the offer.\n            // Only Sync media based on the configs when it is Offer aka `active===true`\n            if (!active) {\n                return;\n            }\n            for (const config of mediaConfigs.configs) {\n                if (isTransceiverConfig(config)) {\n                    await config.syncTransceiver(peer);\n                }\n                if (isDataChannelConfig(config)) {\n                    config.syncDataChannel(peer);\n                }\n            }\n        }\n        finally {\n            props.ignoreNegotiationNeeded = false;\n            props.initialConnectionDone = true;\n        }\n    };\n    const createOffer = async (offerOptions) => {\n        log.info('call createOffer', { param: offerOptions, peer });\n        props.makingOffer = true;\n        try {\n            const sdp = await peer.createOffer({\n                ...props.offerOptions,\n                ...offerOptions,\n            });\n            log.debug('created raw Offer', { sdp });\n            const sdpManager = new SdpTransformManager(sdp, {\n                allow1080p: props.allow1080p,\n                allow4kPreso: props.allow4kPreso,\n                allowCodecSdpMunging: props.allowCodecSdpMunging,\n                allowVP9: props.allowVP9,\n                contents: mediaConfigs.configs.flatMap(config => isTransceiverConfig(config) ? [config.content] : []),\n                sendEncodings: mediaConfigs.configs.flatMap(config => isTransceiverConfig(config)\n                    ? [config.sendEncodings ?? []]\n                    : []),\n                videoAS: props.bandwidth,\n            });\n            let offer = sdpManager.getSdp();\n            if (peer.signalingState !== 'stable') {\n                throw new Error('Ignore');\n            }\n            await peer.setLocalDescription(offer);\n            if (!CAN_SET_STREAMS) {\n                mediaConfigs.configs.forEach(config => {\n                    if (config.kind === 'video' || config.kind === 'audio') {\n                        associateStreamWithSDP(config, sdpManager);\n                    }\n                });\n            }\n            offer = sdpManager.getSdp();\n            log.info('setLocalDescription with offer success', {\n                rawSDP: sdp,\n                offer,\n            });\n            props.localFingerprints = sdpManager.getFingerprints();\n            await calculateSecureCheckCode();\n            return offer;\n        }\n        finally {\n            props.makingOffer = false;\n        }\n    };\n    return {\n        get peer() {\n            return peer;\n        },\n        get polite() {\n            return props.polite;\n        },\n        get iceGatheringState() {\n            return peer.iceGatheringState;\n        },\n        get iceConnectionState() {\n            return peer.iceConnectionState;\n        },\n        get signalingState() {\n            return peer.signalingState;\n        },\n        get connectionState() {\n            return peer.connectionState;\n        },\n        get senders() {\n            return peer.getSenders();\n        },\n        get receivers() {\n            return peer.getReceivers();\n        },\n        get configs() {\n            return mediaConfigs.configs;\n        },\n        getTransceiverConfigs: () => {\n            return mediaConfigs.configs.filter(isTransceiverConfig);\n        },\n        getDataChannelConfigs: () => {\n            return mediaConfigs.configs.filter(isDataChannelConfig);\n        },\n        addConfig: mediaConfigs.addConfig,\n        releaseLocalICECandidatesBuffer: ignore => {\n            if (!eventHandlers.onIceCandidate) {\n                return;\n            }\n            localICECandidateQueue.buffering = false;\n            if (!ignore && localICECandidateQueue.length) {\n                const eventFlushed = localICECandidateQueue.flush();\n                log.debug('Release buffered local ICE candidates', {\n                    events: eventFlushed,\n                });\n                return;\n            }\n            localICECandidateQueue.discard();\n        },\n        get hasICECandidates() {\n            return hasICECandidates(peer.pendingLocalDescription?.sdp ??\n                peer.currentLocalDescription?.sdp);\n        },\n        get currentLocalDescription() {\n            if (peer.currentLocalDescription !== undefined) {\n                return peer.currentLocalDescription;\n            }\n            return peer.localDescription;\n        },\n        get pendingLocalDescription() {\n            if (peer.pendingLocalDescription !== undefined) {\n                return peer.pendingLocalDescription ?? undefined;\n            }\n            return peer.signalingState === 'stable' ||\n                peer.localDescription === null\n                ? undefined\n                : peer.localDescription;\n        },\n        get currentRemoteDescription() {\n            if (peer.currentRemoteDescription !== undefined) {\n                return peer.currentRemoteDescription;\n            }\n            return peer.remoteDescription;\n        },\n        get pendingRemoteDescription() {\n            if (peer.pendingRemoteDescription !== undefined) {\n                return peer.pendingRemoteDescription;\n            }\n            return peer.signalingState === 'stable'\n                ? null\n                : peer.remoteDescription;\n        },\n        get bandwidth() {\n            return props.bandwidth;\n        },\n        get references() {\n            return props.references;\n        },\n        get offerOptions() {\n            return props.offerOptions;\n        },\n        set offerOptions(newOptions) {\n            props.offerOptions = { ...props.offerOptions, ...newOptions };\n        },\n        get answerOptions() {\n            return props.answerOptions;\n        },\n        set answerOptions(newOptions) {\n            log.info('set answerOptions', {\n                newOptions,\n                answerOptions: props.answerOptions,\n            });\n            props.answerOptions = { ...props.answerOptions, ...newOptions };\n        },\n        set bandwidth(bandwidth) {\n            log.info('set bandwidth', {\n                newBandwidth: bandwidth,\n                bandwidth: props.bandwidth,\n            });\n            if (props.bandwidth !== bandwidth) {\n                props.bandwidth = bandwidth;\n                negotiate();\n            }\n        },\n        set negotiationNeeded(needed) {\n            if (needed) {\n                negotiate();\n            }\n        },\n        negotiate: async () => {\n            return syncMedia(remoteMediaLines, true);\n        },\n        getStats: async (selector) => await peer.getStats(selector),\n        setLocalStream,\n        setReference(key, value) {\n            log.info('call setReference', {\n                references: props.references,\n                key,\n                value,\n            });\n            props.references[key] = value;\n        },\n        createDataChannel: (label, dataChannelDict) => {\n            log.info('call createDataChannel', { label, dataChannelDict });\n            return peer.createDataChannel(label, dataChannelDict);\n        },\n        createOffer,\n        createAnswer: async (answerOptions) => {\n            log.info('call createAnswer', { param: answerOptions });\n            props.makingAnswer = true;\n            try {\n                const sdp = await peer.createAnswer({\n                    ...props.answerOptions,\n                    ...answerOptions,\n                });\n                log.debug('created raw Answer', { sdp });\n                const sdpManager = new SdpTransformManager(sdp, {\n                    allow4kPreso: props.allow4kPreso,\n                    allowCodecSdpMunging: props.allowCodecSdpMunging,\n                    allowVP9: props.allowVP9,\n                    videoAS: props.bandwidth,\n                });\n                mediaConfigs.configs.forEach(config => {\n                    if (isTransceiverConfig(config) &&\n                        config.transceiver?.mid) {\n                        sdpManager.addContentAttribute(config.transceiver.mid, config.content);\n                    }\n                });\n                let answer = sdpManager.getSdp();\n                await peer.setLocalDescription(answer);\n                if (!CAN_SET_STREAMS) {\n                    mediaConfigs.configs.forEach(config => {\n                        if (config.kind === 'video' ||\n                            config.kind === 'audio') {\n                            associateStreamWithSDP(config, sdpManager);\n                        }\n                    });\n                }\n                answer = sdpManager.getSdp();\n                log.info('setLocalDescription with answer success', {\n                    rawSDP: sdp,\n                    answer,\n                });\n                props.localFingerprints = sdpManager.getFingerprints();\n                await calculateSecureCheckCode();\n                return answer;\n            }\n            finally {\n                props.makingAnswer = false;\n            }\n        },\n        receiveAnswer: async (answer) => {\n            log.info('call receiveAnswer', { answer });\n            remoteMediaLines = new Map(getMediaLines(answer.sdp).map(mline => [\n                String(mline.mid),\n                mline,\n            ]));\n            const sdpManager = new SdpTransformManager(answer, {\n                allowCodecSdpMunging: props.allowCodecSdpMunging,\n                allowVP9: props.allowVP9,\n                videoAS: props.bandwidth,\n                videoTIAS: props.bandwidth * 1000,\n            });\n            await peer.setRemoteDescription(sdpManager.getSdp());\n            log.debug('setRemoteDescription success', {\n                currentTransceivers: peer.getTransceivers(),\n                mediaConfigs,\n            });\n            props.remoteFingerprints = sdpManager.getFingerprints();\n            await calculateSecureCheckCode();\n            props.currentRemoteDescription = answer;\n        },\n        receiveOffer: async (offer) => {\n            log.info('call receiveOffer', { offer });\n            remoteMediaLines = new Map(getMediaLines(offer.sdp).map(mline => [\n                String(mline.mid),\n                mline,\n            ]));\n            props.currentRemoteDescription = offer;\n            props.remoteFingerprints = new SdpTransformManager(offer).getFingerprints();\n            await peer.setRemoteDescription(offer);\n            await syncMedia(remoteMediaLines, false);\n            await calculateSecureCheckCode();\n        },\n        receiveIceCandidate: async (candidate) => {\n            log.info('call receiveIceCandidate', { candidate });\n            await peer.addIceCandidate(candidate);\n        },\n        restartIce,\n        getConfiguration: () => peer.getConfiguration(),\n        setConfiguration: typeof peer.setConfiguration === 'function'\n            ? rtcConfig => peer.setConfiguration(rtcConfig)\n            : undefined,\n        close: () => {\n            log.info('call close');\n            localICECandidateQueue.discard();\n            props.deferNegotiationCount = 0;\n            props.mediaContentMismatchCount = 0;\n            remoteMediaLines = new Map();\n            Object.keys(timers).forEach(key => {\n                clearTimer(key);\n            });\n            peer.close();\n        },\n        // Event handlers\n        set onConnectionStateChange(handler) {\n            peer.onconnectionstatechange = event => {\n                clearTimer('connectionState', () => {\n                    log.debug('clears the connection state timer', { event });\n                });\n                if (['disconnected', 'failed'].includes(peer.connectionState)) {\n                    log.debug(`waits for emitting connection state change because it is \"${peer.connectionState}\"`, { event });\n                    timers.connectionState = window.setTimeout(() => {\n                        log.debug('emits connection state change after waiting for ice restart', { event });\n                        handler?.(event);\n                    }, RecoveryTimeout.ConnectionState);\n                }\n                else {\n                    handler?.(event);\n                }\n            };\n        },\n        set onDataChannel(handler) {\n            eventHandlers.onDataChannel = handler;\n        },\n        set onIceCandidate(handler) {\n            eventHandlers.onIceCandidate = handler;\n        },\n        set onIceCandidateError(handler) {\n            peer.onicecandidateerror = handler;\n        },\n        set onIceConnectionStateChange(handler) {\n            eventHandlers.iceConnectionStateChange = handler;\n        },\n        set onIceGatheringStateChange(handler) {\n            peer.onicegatheringstatechange = handler ?? null;\n        },\n        set onNegotiationNeeded(handler) {\n            eventHandlers.negotiationNeeded = handler;\n        },\n        set onSignalingStateChange(handler) {\n            eventHandlers.signalingStateChange = handler;\n        },\n        set onTransceiverChange(handler) {\n            eventHandlers.onTransceiverChange = handler;\n        },\n        set onSecureCheckCode(handler) {\n            eventHandlers.onSecureCheckCode = handler;\n        },\n        set onTrack(handler) {\n            eventHandlers.onTrack = handler;\n        },\n        set onRemoteStreams(handler) {\n            eventHandlers.onRemoteStreams = handler;\n        },\n    };\n}\n/**\n * Logical layer of the Peer Connection for Call/Main, which connecting Signals\n * and `RTCPeerConnection` events, @see PCSignals\n *\n * @param signals - Provide the required signals for communication\n * @param options - Configuration for the the Peer Connection\n */\nexport function createMainPeerConnection(signals, options = {}) {\n    const peer = createPeerConnection(options);\n    peer.setReference('module', 'MainPeerConnection');\n    const { onOfferRequired, ...restSignals } = signals;\n    const log = createRefsLog(createGetRefs(peer));\n    let subscriptions = [\n        // Handler common signals\n        ...withSignals(peer)(restSignals),\n        onOfferRequired.add(async (param) => {\n            log.info('handle onOfferRequired signal', { param });\n            // If peer has local MediaStream, `onnegotiationneeded` event will\n            // be triggered when `RTCPeerConnection` is ready.\n            // RTCPeerConnection['createOffer'] will be called accordingly by\n            // the event.\n            if (param?.stream && param.target) {\n                try {\n                    await peer.setLocalStream(param.stream, param.target);\n                }\n                catch (error) {\n                    log.error('setLocalStream failed', { error });\n                    peer.negotiationNeeded = true;\n                }\n            }\n            else {\n                await peer.negotiate();\n            }\n        }),\n    ];\n    const cleanup = () => {\n        subscriptions = subscriptions.flatMap(unsubscribe => {\n            unsubscribe();\n            return [];\n        });\n    };\n    return {\n        get peer() {\n            return peer.peer;\n        },\n        get polite() {\n            return peer.polite;\n        },\n        get connectionState() {\n            return peer.connectionState;\n        },\n        get iceConnectionState() {\n            return peer.iceConnectionState;\n        },\n        get iceGatheringState() {\n            return peer.iceGatheringState;\n        },\n        get signalingState() {\n            return peer.signalingState;\n        },\n        get senders() {\n            return peer.senders;\n        },\n        get receivers() {\n            return peer.receivers;\n        },\n        get hasICECandidates() {\n            return peer.hasICECandidates;\n        },\n        get bandwidth() {\n            return peer.bandwidth;\n        },\n        get references() {\n            return peer.references;\n        },\n        set bandwidth(bandwidth) {\n            peer.bandwidth = bandwidth;\n        },\n        get offerOptions() {\n            return peer.offerOptions;\n        },\n        get answerOptions() {\n            return peer.answerOptions;\n        },\n        set offerOptions(newOptions) {\n            peer.offerOptions = newOptions;\n        },\n        set answerOptions(newOptions) {\n            peer.answerOptions = newOptions;\n        },\n        get configs() {\n            return peer.configs;\n        },\n        // Methods\n        setLocalStream: peer.setLocalStream,\n        setReference(key, value) {\n            peer.setReference(key, value);\n        },\n        getStats: selector => peer.getStats(selector),\n        getTransceiverConfigs: peer.getTransceiverConfigs,\n        getDataChannelConfigs: peer.getDataChannelConfigs,\n        addConfig: peer.addConfig,\n        createDataChannel: (label, dataChannelDict) => peer.createDataChannel(label, dataChannelDict),\n        restartIce: peer.restartIce,\n        getConfiguration: peer.getConfiguration,\n        setConfiguration: peer.setConfiguration,\n        close: () => {\n            cleanup();\n            peer.close();\n        },\n    };\n}\n", null, null, null, null, null, null, null],
  "mappings": "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",
  "names": ["SocketCloseEventCode", "LogLevels", "LogLevels", "createConsoleLogger", "logger", "createConsoleLogger", "ContentType", "HEADER", "logger", "token", "RecoveryTimeout", "LogLevels", "createConsoleLogger", "logger", "createConsoleLogger", "logger", "_a", "logger", "direction", "streams", "transceiver", "track", "logger", "item", "Codec", "_a", "config", "track", "remoteMediaLines", "LogLevels", "createConsoleLogger", "logger", "createConsoleLogger", "setLogger", "AbortReason", "MAX_RECONNECT_ATTEMPTS", "BACKOFF_BASE_SETTINGS", "createSocketSignals", "BACKOFF_BASE_SETTINGS", "MAX_RECONNECT_ATTEMPTS", "logger", "logger", "VpaasError", "createSocketSignals", "logger", "retry", "MAX_RECONNECT_ATTEMPTS"]
}
